[{"path":"http://ericscottdavis.com/mariner/articles/introduction_to_mariner.html","id":"r-markdown","dir":"Articles","previous_headings":"","what":"R Markdown","title":"Introduction to mariner","text":"R Markdown document. Markdown simple formatting syntax authoring HTML, PDF, MS Word documents. details using R Markdown see http://rmarkdown.rstudio.com. click Knit button document generated includes content well output embedded R code chunks within document. can embed R code chunk like :","code":"summary(cars) ##      speed           dist        ##  Min.   : 4.0   Min.   :  2.00   ##  1st Qu.:12.0   1st Qu.: 26.00   ##  Median :15.0   Median : 36.00   ##  Mean   :15.4   Mean   : 42.98   ##  3rd Qu.:19.0   3rd Qu.: 56.00   ##  Max.   :25.0   Max.   :120.00"},{"path":"http://ericscottdavis.com/mariner/articles/introduction_to_mariner.html","id":"including-plots","dir":"Articles","previous_headings":"","what":"Including Plots","title":"Introduction to mariner","text":"can also embed plots, example:  Note echo = FALSE parameter added code chunk prevent printing R code generated plot.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/introduction_to_mariner.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Introduction to mariner","text":"","code":"sessionInfo() ## R version 4.2.3 (2023-03-15) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3 ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## loaded via a namespace (and not attached): ##  [1] knitr_1.42        magrittr_2.0.3    R6_2.5.1          ragg_1.2.5        ##  [5] rlang_1.1.0       fastmap_1.1.1     highr_0.10        stringr_1.5.0     ##  [9] tools_4.2.3       xfun_0.38         cli_3.6.1         jquerylib_0.1.4   ## [13] systemfonts_1.0.4 htmltools_0.5.5   yaml_2.3.7        digest_0.6.31     ## [17] rprojroot_2.0.3   lifecycle_1.0.3   pkgdown_2.0.7     textshaping_0.3.6 ## [21] purrr_1.0.1       sass_0.4.5        vctrs_0.6.1       fs_1.6.1          ## [25] memoise_2.0.1     glue_1.6.2        cachem_1.0.7      evaluate_0.20     ## [29] rmarkdown_2.21    stringi_1.7.12    compiler_4.2.3    bslib_0.4.2       ## [33] desc_1.4.2        jsonlite_1.8.4"},{"path":"http://ericscottdavis.com/mariner/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Davis. Author, maintainer.","code":""},{"path":"http://ericscottdavis.com/mariner/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eric S. Davis, Douglas H. Phanstiel (2022). Mariner: Explore Hi-Cs. R package version 0.2.0. https://doi.org/10.5281/zenodo.7514362","code":"@Unpublished{,   title = {Mariner: Explore the Hi-Cs},   author = {Eric S. Davis and Douglas H. Phanstiel},   year = {2022},   note = {R package version 0.2.0},   doi = {10.5281/zenodo.7514361}, }"},{"path":[]},{"path":"http://ericscottdavis.com/mariner/index.html","id":"why-mariner","dir":"","previous_headings":"","what":"Why mariner?","title":"Mariner: Explore the Hi-Cs","text":"Disruption aberrant formation chromatin interactions can result developmental abnormalities disease. Therefore, deriving biological insights 3D chromatin structure experiments, Hi-C Micro-C, essential understanding correcting human disease. mariner R/Bioconductor package exploring Hi-C data. enables users flexibly manipulate, extract, aggregate chromatin interaction data quickly efficiently. One ecosystem: mariner extends common Bioconductor classes, leveraging thousands existing tools analyzing visualizing genomic data. Modular design: mariner's functions can combined chained various ways produce custom workflows. Fast efficient: mariner leverages HDF5 store large results uses block processing minimize hardware requirements.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Mariner: Explore the Hi-Cs","text":"Extracting & Aggregating Interactions Pull Hi-C pixels matrices, aggregate files interactions Clustering & Merging Interactions Group nearby interactions select one representative Manipulating Pairs Convert, bin, shift paired genomic ranges Calculating Loop Enrichment Determine loop enrichment local background selection functions flexibiliy select foreground background.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mariner: Explore the Hi-Cs","text":"package can installed via github:","code":"if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"EricSDavis/mariner\")"},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CountMatrix Class — CountMatrix-class","title":"CountMatrix Class — CountMatrix-class","text":"class displaying dimnames associated count matrices resulting pullHicMatrices() |> counts(showDimnames=TRUE).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CountMatrix Class — CountMatrix-class","text":"","code":"# S4 method for CountMatrix show(object)"},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CountMatrix Class — CountMatrix-class","text":"object CountMatrix object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CountMatrix Class — CountMatrix-class","text":"CountMatrix object (clone DelayedArray) DelayedArray object dimnames  first two dimensions.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CountMatrix Class — CountMatrix-class","text":"class used attaching \"show\" method.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"CountMatrix Class — CountMatrix-class","text":"object InteractionArray object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CountMatrix Class — CountMatrix-class","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loop pixels as GInteractions object pixels <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) |>     binPairs(binSize=100e3)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Expand pixels to regions for pulling ## Hi-C submatrices regions <- pixelsToMatrices(x=pixels, buffer=5)  ## Extract 11x11 count matrices from the ## first 100 regions and 2 Hi-C files iarr <- pullHicMatrices(x=regions[1:100],                         files=hicFiles,                         binSize=100e3)  ## Display the start bin of each ## interaction in the count ## matrices counts(iarr, showDimnames=TRUE) #> <11 x 11 x 100 x 2> array of class DelayedArray and type \"double\": #> ,,1,LEUK_HEK_PJA27_inter_30.hic #>          14200000 14300000 14400000 ... 15100000 15200000 #> 13900000        4        3        4   .        0        0 #> 14000000        6        9        3   .        2        1 #> 14100000       11        8        4   .        1        1 #> 14200000       38        8        4   .        0        0 #> 14300000        8       31       11   .        0        1 #> 14400000        4       11       35   .        3        2 #> 14500000        4        1       12   .        1        0 #> 14600000        2        0        4   .        3        2 #> 14700000        1        2        6   .        3        3 #> 14800000        1        1        4   .        2        2 #> 14900000        1        1        0   .        5        2 #>  #> ... #>  #> ,,100,LEUK_HEK_PJA30_inter_30.hic #>          16300000 16400000 16500000 ... 17200000 17300000 #> 15600000        0        0        1   .        0        0 #> 15700000        2        0        0   .        1        1 #> 15800000        1        2        1   .        0        1 #> 15900000        2        3        2   .        1        1 #> 16000000        1        2        0   .        1        1 #> 16100000        6        3        2   .        0        0 #> 16200000        4        4        3   .        1        0 #> 16300000       25        8        5   .        0        1 #> 16400000        8       19        8   .        0        0 #> 16500000        5        8       32   .        0        5 #> 16600000        2        4        8   .        0        1"},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"Uses delegate `GInteractions` object initialization assign `GInteractions` slots.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"DelegatingGInteractions virtual class","code":""},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"delegate `GInteractions` object used initialize `GInteractions`-specific slots.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Access each portion of a GInteractions-like object — seqnames1","title":"Access each portion of a GInteractions-like object — seqnames1","text":"Access portion GInteractions-like object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access each portion of a GInteractions-like object — seqnames1","text":"","code":"seqnames1(x, ...)  seqnames2(x, ...)  start1(x, ...)  end1(x, ...)  start2(x, ...)  end2(x, ...)  # S4 method for GInteractions_OR_InteractionSet seqnames1(x)  # S4 method for GInteractions_OR_InteractionSet seqnames2(x)  # S4 method for GInteractions_OR_InteractionSet start1(x)  # S4 method for GInteractions_OR_InteractionSet end1(x)  # S4 method for GInteractions_OR_InteractionSet start2(x)  # S4 method for GInteractions_OR_InteractionSet end2(x)"},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access each portion of a GInteractions-like object — seqnames1","text":"x GInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access each portion of a GInteractions-like object — seqnames1","text":"vector values corresponding  requested component GInteractions-like object.  seqnames1 seqnames2 RLE coerced  character vector.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access each portion of a GInteractions-like object — seqnames1","text":"","code":"library(InteractionSet) #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians ## Create example reference interactions objects gi <- read.table(text=\"     chr1 10 20 chr1 50 60     chr2 30 40 chr2 60 70     chr1 50 60 chr3 10 20\") |>     as_ginteractions()  iset <- InteractionSet(assays=matrix(nrow=3),                        interactions=gi)  ## Access vectors of values seqnames1(gi) #> [1] \"chr1\" \"chr2\" \"chr1\" start1(gi) #> [1] 10 30 50 end1(gi) #> [1] 20 40 60 seqnames2(gi) #> [1] \"chr1\" \"chr2\" \"chr3\" start2(gi) #> [1] 50 60 10 end2(gi) #> [1] 60 70 20  ## Also works for InteractionSet-like objects seqnames1(iset) #> [1] \"chr1\" \"chr2\" \"chr1\" start1(iset) #> [1] 10 30 50 end1(iset) #> [1] 20 40 60 seqnames2(iset) #> [1] \"chr1\" \"chr2\" \"chr3\" start2(iset) #> [1] 50 60 10 end2(iset) #> [1] 60 70 20"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InteractionArray Class — InteractionArray-class","title":"InteractionArray Class — InteractionArray-class","text":"`InteractionArray` class extends `InteractionSet` provide interface accessing submatrices pulled Hi-C data.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InteractionArray Class — InteractionArray-class","text":"","code":"InteractionArray(assays, interactions, ...)  # S4 method for ANY,GInteractions InteractionArray(assays, interactions, ...)  # S4 method for missing,missing InteractionArray(assays, interactions, ...)  # S4 method for InteractionArray show(object)  # S4 method for InteractionArray rbind(..., deparse.level = 1)  # S4 method for InteractionArray cbind(..., deparse.level = 1)"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InteractionArray Class — InteractionArray-class","text":"assays, interactions See ?InteractionSet ... InteractionArray objects combined column-wise. objects must class. object InteractionArray object. deparse.level integer scalar; see `?base::cbind` description argument.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InteractionArray Class — InteractionArray-class","text":"InteractionArray (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InteractionArray Class — InteractionArray-class","text":"class constructed `pullHicMatrices()` function paired ranges equal dimensions.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InteractionArray Class — InteractionArray-class","text":"","code":"InteractionArray() #> class: InteractionArray  #> dim: 0 interaction(s), 0 file(s), 0x0 count matrix(es) #> metadata(0): #> assays(0): #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> type: GInteractions #> regions: 0"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InteractionMatrix Class — InteractionMatrix-class","title":"InteractionMatrix Class — InteractionMatrix-class","text":"`InteractionMatrix` class extends `InteractionSet` provide interface accessing count matrix pulled Hi-C data.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InteractionMatrix Class — InteractionMatrix-class","text":"","code":"InteractionMatrix(assays, interactions, ...)  # S4 method for ANY,GInteractions InteractionMatrix(assays, interactions, ...)  # S4 method for missing,missing InteractionMatrix(assays, interactions, ...)  # S4 method for InteractionMatrix show(object)  # S4 method for InteractionMatrix rbind(..., deparse.level = 1)  # S4 method for InteractionMatrix cbind(..., deparse.level = 1)"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InteractionMatrix Class — InteractionMatrix-class","text":"assays, interactions See ?InteractionSet ... InteractionMatrix objects combined column-wise. objects must class. object InteractionMatrix object. deparse.level integer scalar; see `?base::cbind` description argument.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InteractionMatrix Class — InteractionMatrix-class","text":"InteractionMatrix (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InteractionMatrix Class — InteractionMatrix-class","text":"class constructed `pullHicPixels()` function paired ranges define single pixel.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InteractionMatrix Class — InteractionMatrix-class","text":"","code":"InteractionMatrix() #> class: InteractionMatrix  #> dim: count matrix with 0 interactions and 0 file(s) #> metadata(0): #> assays(0): #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> type: GInteractions #> regions: 0"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MatrixSelection Class — MatrixSelection-class","title":"MatrixSelection Class — MatrixSelection-class","text":"object containing selected indices matrix.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MatrixSelection Class — MatrixSelection-class","text":"x Vector selected indices matrix `dim = buffer*2+1`. buffer Integer indicating buffer size, number pixels around matrix.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MatrixSelection Class — MatrixSelection-class","text":"","code":"selectCenterPixel(0, 5) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Names S3 method for autocomplete — names.MatrixSelection","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"Names S3 method autocomplete Extract `$` operator MatrixSelection Extract `[[` operator MatrixSelection Concatenate MatrixSelection objects Concatenate MatrixSelection objects","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"","code":"# S3 method for MatrixSelection names(x)  # S4 method for MatrixSelection $(x, name)  # S4 method for MatrixSelection,ANY,ANY [[(x, i)  # S4 method for MatrixSelection,MatrixSelection +(e1, e2)  # S4 method for MatrixSelection,MatrixSelection -(e1, e2)"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"x `MatrixSelection` object. name Name slot. character numeric extract. object `MatrixSelection` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"different data metadata concerning MatrixSelection object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MergedGInteractions Class — MergedGInteractions-class","title":"MergedGInteractions Class — MergedGInteractions-class","text":"`MergedGInteractions` class extends `GInteractions` contain additional information pairs merged.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MergedGInteractions Class — MergedGInteractions-class","text":"`MergedGInteractions` class uses delegate object initialization assign `GInteractions` slots. addition containing information pairs, also behaves `GInteractions` object. `mergePairs()` builds object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MergedGInteractions Class — MergedGInteractions-class","text":"delegate `GInteractions` object used initialize `GInteractions`-specific slots. mergedPairs set interactions. ids integer vector ids linking indices `delegate` slot pairs (`allPairs` slot). indices parallel `delegate`. allPairs `data.table` containing input pairs combined. Also contains metadata pair 1) source file, 2) id, 3) chromosome pair belongs (.e. `grp`), 4) assigned cluster `dbscan` (.e. `clst`). selectionMethod Character describing method used select final pair cluster merged pairs.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MergedGInteractions Class — MergedGInteractions-class","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <-     system.file(\"extdata\", package = \"mariner\") |>     list.files(pattern = \"Loops.txt\", full.names = TRUE)  giList <-     lapply(bedpeFiles, fread) |>     lapply(as_ginteractions)  x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  class(x) #> [1] \"MergedGInteractions\" #> attr(,\"package\") #> [1] \"mariner\""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"Adjust loop enrichment remove distance- dependent effect. Show diagnostic plot loop enrichment distance adjustment.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"","code":"plotEnrichment(scores, interactions, k = 25, nknots = 10, plot = TRUE)  adjustEnrichment(x, interactions, k = 25, nknots = 10)  # S4 method for DelayedMatrix_OR_matrix,GInteractions adjustEnrichment(x, interactions, k = 25, nknots = 10)  # S4 method for numeric,GInteractions plotEnrichment(scores, interactions, k = 25, nknots = 10, plot = TRUE)"},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"scores Numeric vector enrichment scores. interactions GInteractions Object containing interactions used calculate enrichment scores. k Number observations rolling window. nknots integer function giving number knots use see `?smooth.spline` info. plot Boolean (default=FALSE), whether show diagnostic plot. x DelayedMatrix matrix enrichment scores.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"DelayedMatrix enrichment scores rows  loops columns Hi-C files. plot (associated data) visualizing  loop enrichment distance adjustment.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loops as GInteractions object loops <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Calculate loop enrichment enrich <- calcLoopEnrichment(     x=binPairs(loops, 100e03),     files=hicFiles ) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselected #>                                   #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK  adjustEnrichment(enrich, loops) #> <12095 x 2> matrix of class DelayedMatrix and type \"double\": #>          LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #>     [1,]                   0.9852361                   1.6880238 #>     [2,]                   0.9476566                   1.3579699 #>     [3,]                   1.1917783                   1.6093615 #>     [4,]                   1.3131613                   0.9899664 #>     [5,]                   0.7167321                   0.7773734 #>      ...                           .                           . #> [12091,]                   1.6105285                   1.2154260 #> [12092,]                   0.8718567                   1.0535435 #> [12093,]                   9.2401279                   6.0746054 #> [12094,]                   0.9836670                   1.1604563 #> [12095,]                   0.5976751                   0.7569435   plotEnrichment(enrich[,1], loops)  #> $rollEnrich #>      rollMedSize rollMedScore #>   1:          NA           NA #>   2:       35000     1.272727 #>   3:       40000     1.375000 #>   4:       45000     1.407407 #>   5:       50000     1.333333 #>  ---                          #> 415:     2815000     1.000000 #> 416:     2850000     1.000000 #> 417:     2890000     1.000000 #> 418:     2990000     1.000000 #> 419:     3005000     1.000000 #>  #> $splineFit #> Call: #> smooth.spline(x = na.omit(re), nknots = nknots) #>  #> Smoothing Parameter  spar= 0.09275396  lambda= 7.749432e-05 (17 iterations) #> Equivalent Degrees of Freedom (Df): 10.79094 #> Penalized Criterion (RSS): 1.270914 #> GCV: 0.003203742 #>  #> $corrFactor #>     [1] 0.9852361 0.9476566 0.7547929 0.9848710 0.9727079 0.9807495 0.9924512 #>     [8] 0.7449281 0.7400856 0.9773093 0.9789710 0.8677481 0.9769193 0.9961252 #>    [15] 0.9991447 0.7305888 0.9988891 0.9795671 0.7449281 0.9103081 0.9202932 #>    [22] 0.9997025 1.0045889 0.9764898 0.8512060 0.9806086 0.9782328 0.9051910 #>    [29] 0.9556816 0.9848710 0.9799787 0.9862272 0.9103081 0.9000012 0.8894341 #>    [36] 0.9967614 0.9997153 0.9973513 0.9836360 0.9848485 0.9997153 0.9768571 #>    [43] 0.9664453 0.8840713 0.9784108 0.9939966 0.7498311 0.9973513 0.9298917 #>    [50] 0.8677481 0.9794489 0.9848110 0.9830554 0.9298917 0.9000012 0.7804105 #>    [57] 0.8071463 0.9967602 0.9630385 0.9476566 0.9890505 0.8622503 0.9916576 #>    [64] 0.9975461 0.9924512 0.9855336 0.8622503 0.9773638 0.8346005 0.9833714 #>    [71] 0.9832075 0.9924512 0.9820000 0.9765766 0.8401339 0.9850002 0.7751867 #>    [78] 0.9824785 0.8840713 0.9103081 0.9810467 0.9556816 0.8235631 0.9782465 #>    [85] 0.8512060 0.9997153 0.7909905 0.8456708 0.7498311 0.7598115 0.9767691 #>    [92] 0.9773093 0.9826748 0.8677481 0.9922209 0.9978893 0.9845991 0.9967602 #>    [99] 0.9755667 0.9767691 0.8180681 0.9869513 0.9390361 0.9773638 0.9556816 #>   [106] 0.9932328 0.8786649 0.9103081 0.9755667 0.9517481 0.9664453 0.9768571 #>   [113] 0.7963408 0.9765032 0.9830784 0.8235631 0.9995975 0.8786649 0.8401339 #>   [120] 0.9907143 0.9939966 0.9630385 0.9884729 0.9807495 0.9958395 0.9983696 #>   [127] 0.9845248 0.8894341 0.9997153 0.9801978 0.9830784 0.9822786 0.9476566 #>   [134] 0.9890505 0.9390361 0.9848710 0.9807495 0.9000012 0.9967614 0.9983696 #>   [141] 0.7305888 0.9991447 0.7498311 0.9771967 0.9476566 0.9848710 0.9916576 #>   [148] 0.9251449 0.9847099 0.9765322 0.9767140 0.9852361 0.7700107 0.9947371 #>   [155] 0.9775886 1.0035989 0.9924512 0.7498311 0.9995975 0.9345250 0.9807495 #>   [162] 1.0004051 0.9855336 0.9865720 0.9978893 0.9958395 0.9983696 0.9826770 #>   [169] 0.9773638 0.9995975 0.9907143 0.9556816 0.7547929 0.8894341 0.9827949 #>   [176] 0.9517481 0.9251449 0.9947371 0.9765766 1.0032356 0.9798111 0.8786649 #>   [183] 0.9789710 0.9775886 0.9982020 0.7598115 0.8290754 0.8894341 0.9843502 #>   [190] 0.9251449 0.7700107 0.7305888 0.9991447 0.8346005 0.8622503 1.0010213 #>   [197] 0.7400856 0.9153448 0.7598115 0.8840713 0.8567344 0.9766371 0.9767691 #>   [204] 0.7353054 0.9556816 0.8456708 0.9924512 0.8456708 0.9872256 0.8732217 #>   [211] 0.9947371 0.8947465 0.9830784 0.8346005 0.9794489 0.8947465 0.7305888 #>   [218] 0.9664453 0.9842387 0.9696680 0.8290754 0.9434163 0.9827312 0.9298917 #>   [225] 0.7305888 0.8512060 0.9991336 0.9664453 0.8401339 0.9996303 0.9051910 #>   [232] 0.9390361 0.7751867 0.8947465 0.9517481 0.8125945 0.9771967 0.9782465 #>   [239] 0.9825976 0.9997153 1.0044109 0.8235631 0.9958395 0.9298917 0.7648848 #>   [246] 0.9935744 0.9994419 1.0013943 0.8456708 0.9696680 0.9771967 0.9967602 #>   [253] 0.9777398 0.8235631 0.9810467 0.7498311 0.8401339 0.7648848 0.9900562 #>   [260] 0.8017272 0.9765032 0.9556816 0.9764893 0.9153448 0.9594481 0.9298917 #>   [267] 0.9000012 0.8622503 0.9103081 0.7751867 1.0038617 0.9987331 0.9983696 #>   [274] 0.8947465 0.7648848 0.9774449 0.8677481 0.9345250 0.7909905 0.9842449 #>   [281] 0.8512060 0.9877017 0.7598115 0.7751867 0.9768079 0.9766922 0.9967614 #>   [288] 0.9765322 0.8622503 0.9872256 0.9801978 0.9778981 0.9773638 0.9991447 #>   [295] 0.9810318 0.7305888 0.9696680 0.7856794 0.9801978 0.9947791 0.9785030 #>   [302] 0.9818704 0.7856794 0.7449281 0.9842387 0.9771822 0.9000012 0.7856794 #>   [309] 0.9997025 0.9987331 0.7400856 0.9980524 0.7598115 0.9807495 0.9947371 #>   [316] 0.9848110 0.7856794 0.9810467 0.9822786 0.8786649 0.8401339 0.9766922 #>   [323] 0.8567344 0.9935744 0.7305888 0.9954485 0.9922209 0.9807495 0.9996303 #>   [330] 0.9830624 0.9787953 0.9770641 0.9935744 0.9869513 0.8346005 0.7598115 #>   [337] 0.7449281 0.9664453 0.9202932 0.9884729 0.9862272 0.9916576 0.8894341 #>   [344] 0.9932328 0.8346005 0.9766922 0.7648848 0.9855336 0.9298917 0.9251449 #>   [351] 0.8346005 0.9884729 0.9890505 0.9594481 0.9991447 0.9842449 0.9476566 #>   [358] 0.8786649 0.7305888 0.9973513 0.9793652 0.8401339 0.8840713 0.8732217 #>   [365] 0.9851162 0.9153448 0.9815100 0.9833336 0.9202932 0.9994419 0.8840713 #>   [372] 0.9770488 0.9935744 0.9103081 0.9987331 0.9779844 0.9815100 0.9051910 #>   [379] 0.9594481 0.9996303 0.8401339 0.8512060 0.9982020 0.9924512 0.8125945 #>   [386] 0.9907143 0.9476566 0.9958395 0.9896209 0.9765032 0.8512060 0.7498311 #>   [393] 0.9967602 0.9808202 0.8346005 0.9766267 0.9939966 0.9845991 0.9773093 #>   [400] 0.9877017 0.9995975 0.8235631 0.8786649 0.9830355 0.9994060 0.7353054 #>   [407] 0.9967602 0.9961252 0.9872256 0.9556816 0.9890505 0.8567344 0.9924512 #>   [414] 0.7598115 0.9967602 0.9765323 0.9777571 0.8732217 0.9947791 0.9824785 #>   [421] 0.7598115 0.9836360 0.9832292 0.9825173 0.9922209 0.9787953 0.8456708 #>   [428] 0.9924512 0.9768079 0.9807495 0.9967614 0.7400856 0.7598115 0.9000012 #>   [435] 0.7700107 0.8346005 0.9755667 0.9775504 0.9973513 0.9907143 0.9890505 #>   [442] 0.9924512 0.8512060 1.0044336 0.9848710 0.9869707 0.9825720 0.9556816 #>   [449] 0.9947791 0.9924512 0.8947465 0.8125945 0.9910690 0.8456708 0.9798111 #>   [456] 0.8290754 0.9991447 1.0008690 0.9696680 0.9947371 0.9812431 0.9842387 #>   [463] 0.9814536 0.8346005 0.9768079 0.9935744 0.9983696 0.8180681 0.9916576 #>   [470] 0.9825173 0.9782465 0.8180681 0.9791663 0.9390361 0.9830554 0.8622503 #>   [477] 0.9770488 0.9797718 0.9939966 0.8840713 0.9924512 0.9991336 0.9837555 #>   [484] 0.7909905 0.9851903 0.8180681 0.9982020 0.9755667 0.9925644 0.9826328 #>   [491] 0.9954485 0.8840713 0.8732217 0.9924512 0.9973513 0.9103081 0.8401339 #>   [498] 0.9830784 0.8677481 0.8456708 0.8840713 0.8840713 0.9051910 0.8401339 #>   [505] 0.9916576 0.9517481 0.9202932 0.9630385 0.9978089 0.9939966 0.8512060 #>   [512] 0.9768571 0.9890505 0.9556816 0.9785030 0.9996303 0.8786649 0.9202932 #>   [519] 0.7400856 0.9780630 0.8290754 0.9852361 0.9782465 0.9836675 0.9835892 #>   [526] 0.8786649 0.9852361 0.9973513 0.9765032 0.9824785 0.9828673 0.9202932 #>   [533] 1.0003009 0.8456708 0.9764893 0.9630385 0.8622503 0.9251449 0.8622503 #>   [540] 0.9810467 0.9935744 0.8017272 0.9908574 0.9764893 0.9434163 0.9892596 #>   [547] 0.9765732 0.8840713 0.9770641 0.9847099 0.9774449 0.9594481 0.9825173 #>   [554] 0.9594481 0.9769193 0.7449281 0.8622503 0.7963408 0.9991336 0.9787797 #>   [561] 0.9755667 0.9434163 0.9774449 0.8894341 0.9947371 0.8346005 0.9768079 #>   [568] 0.9842387 0.9768079 0.9390361 0.7963408 0.9826839 0.9766922 0.9556816 #>   [575] 0.8512060 0.9848485 0.9991447 0.7353054 0.9767140 0.8786649 0.9000012 #>   [582] 0.9594481 0.9869513 0.9991336 0.9814536 0.9794489 0.9992373 0.8071463 #>   [589] 1.0042135 0.8346005 0.9890505 0.9967614 0.9153448 0.9997025 0.9345250 #>   [596] 0.9843502 0.8786649 0.9777398 0.9884729 0.8732217 0.8622503 0.9251449 #>   [603] 0.8180681 0.8894341 0.8786649 0.9900562 0.9782465 0.9664453 0.9835892 #>   [610] 0.9997153 0.9932328 0.9806095 0.9872256 0.8622503 0.9727079 0.9051910 #>   [617] 0.8125945 1.0045472 0.8017272 0.9202932 0.9954485 0.9987331 0.9476566 #>   [624] 0.9770641 0.7353054 0.9390361 0.9852361 0.9051910 0.8346005 0.9987863 #>   [631] 0.7909905 0.9884729 0.9765043 0.8840713 0.9727079 0.9872256 0.8125945 #>   [638] 0.9298917 0.9991336 0.8346005 0.9869707 0.9594481 0.7353054 0.9825173 #>   [645] 0.9782465 0.9791104 0.8235631 0.9837555 0.9830784 0.9851162 0.9836675 #>   [652] 0.9517481 0.9825173 0.9771967 0.8235631 0.8401339 0.9908574 0.8456708 #>   [659] 0.9826839 0.9961252 0.9103081 0.8290754 0.9890505 0.9852361 0.9967614 #>   [666] 0.9954485 0.9935744 0.9766371 0.9434163 0.8125945 0.8512060 0.9849821 #>   [673] 0.7353054 0.9967614 0.9434163 0.9982020 0.9987863 0.9958395 0.8071463 #>   [680] 0.9884729 0.9980447 0.7909905 0.8677481 0.9967602 0.8401339 0.9434163 #>   [687] 0.9991336 0.9907143 0.9785030 0.8235631 0.9961252 0.9434163 0.9982020 #>   [694] 0.9862272 0.7856794 0.9434163 0.9997025 0.9777571 0.9832292 0.8017272 #>   [701] 0.9842387 0.7963408 0.8567344 0.9434163 0.9979512 0.9345250 0.9770641 #>   [708] 0.9907143 0.7751867 0.9890505 0.9767140 0.9777398 0.9773093 0.9967614 #>   [715] 0.9594481 0.9907143 0.8512060 0.9844644 0.9794489 0.9202932 0.9798111 #>   [722] 0.9594481 0.8346005 0.9777571 0.9987863 0.8622503 0.9848710 0.7598115 #>   [729] 0.8947465 0.7856794 0.9787953 0.9945857 0.8346005 0.9345250 0.9051910 #>   [736] 0.7598115 0.9782465 0.8017272 0.8677481 0.9766371 0.8290754 0.9935744 #>   [743] 0.9967602 0.9830624 0.9766267 0.9785928 0.9907143 0.9849821 0.8677481 #>   [750] 0.8786649 0.9991447 0.7909905 0.8622503 0.8732217 0.9830624 0.8894341 #>   [757] 0.9822786 0.9777398 0.9997025 0.9935744 0.9908574 0.9784108 0.9765322 #>   [764] 0.9851162 0.8622503 0.9785030 0.9153448 0.9768571 0.8456708 0.9991447 #>   [771] 0.8125945 0.9051910 0.9997025 0.9764898 0.9987331 0.9932328 0.9852095 #>   [778] 0.9799787 0.9816628 0.9882461 0.9982020 0.7963408 0.8512060 0.9810467 #>   [785] 0.9849821 0.9556816 0.9765766 0.9961252 0.9806095 0.9967602 0.9830624 #>   [792] 0.9556816 0.8947465 0.9771967 0.9907143 0.9769556 0.9840156 0.8894341 #>   [799] 0.9476566 0.7449281 0.9954485 0.8456708 0.9782465 0.9808202 0.9848710 #>   [806] 0.9908574 0.9840678 0.9939966 0.9774449 0.9836360 0.9991447 0.9932328 #>   [813] 0.7856794 0.9987331 0.9153448 0.9153448 0.9994419 0.9890505 0.9892596 #>   [820] 1.0045889 0.8894341 0.9808202 0.9954485 0.9947791 0.9103081 0.9987331 #>   [827] 0.9954485 0.9777398 0.9785030 0.8401339 0.8840713 0.9696680 0.9801874 #>   [834] 0.7400856 0.9765732 0.9973513 0.9251449 0.9153448 0.9982020 1.0001383 #>   [841] 0.8235631 0.9664453 0.9767140 0.9832387 0.9991336 0.9925644 0.9765766 #>   [848] 0.9872256 0.9982020 0.9890505 0.8840713 0.8346005 0.9777571 0.8512060 #>   [855] 0.9900562 0.9345250 0.9922209 0.9900562 0.9935744 0.9773638 0.9051910 #>   [862] 0.9556816 0.9801978 0.9630385 0.9202932 0.8622503 0.9862272 0.9824785 #>   [869] 0.9991336 0.9987863 0.9787797 0.9924512 0.9829412 0.9890505 0.9820000 #>   [876] 0.9153448 0.9884729 0.9991336 0.9994419 0.9848710 1.0037431 0.9345250 #>   [883] 0.9769193 0.9787953 0.8512060 0.9939966 1.0024061 0.9973513 0.9939966 #>   [890] 0.9780630 0.9980193 0.8346005 0.9785030 0.9793652 0.9855336 0.9997025 #>   [897] 0.9766922 0.9982020 0.9630385 0.8567344 0.9767691 0.9997153 0.9051910 #>   [904] 0.9771967 0.9795671 0.9000012 0.9947371 0.9765322 0.9830624 0.9764893 #>   [911] 0.9862272 0.9664453 0.9947791 0.9664453 0.8235631 0.9920623 0.7598115 #>   [918] 0.9830784 0.7353054 0.7751867 0.9924512 0.9782465 0.8071463 0.9556816 #>   [925] 0.9829479 0.7547929 0.9251449 0.8346005 0.7751867 0.9791663 0.9755667 #>   [932] 0.9840678 0.9779844 0.8840713 0.9982020 0.9202932 0.9791104 0.9807495 #>   [939] 0.9932328 0.9806095 0.7648848 0.9476566 0.9770641 0.9727079 0.9785030 #>   [946] 0.9996303 0.9782465 0.8071463 0.7909905 0.9782328 0.9828374 0.9832075 #>   [953] 0.9778981 0.9051910 0.8567344 0.9908574 0.9900562 0.9765043 0.9851548 #>   [960] 0.8677481 0.8290754 0.8840713 0.9958395 0.9947371 0.7856794 0.8456708 #>   [967] 0.7963408 0.8235631 0.7547929 0.9907143 0.9954485 0.9982020 0.9922209 #>   [974] 0.9779844 0.9815100 0.9775886 0.9841310 0.9947371 0.9982020 0.9827519 #>   [981] 0.9892596 0.9983696 0.9801978 0.7700107 0.9997025 0.8017272 0.9828673 #>   [988] 0.9978893 0.9855336 0.9862272 0.9795671 0.9822786 0.9991447 0.9939966 #>   [995] 0.9947791 0.8456708 0.8017272 0.9784108 0.9771822 0.9836360 0.7909905 #>  [1002] 0.9777398 0.9848710 0.9935744 0.9556816 0.9202932 0.9842499 0.8017272 #>  [1009] 0.9765732 0.9768079 0.9830624 0.9826770 0.9872256 0.9764898 0.9766371 #>  [1016] 0.8017272 0.7804105 0.7648848 0.9664453 0.9922209 0.9767140 0.9345250 #>  [1023] 0.9997153 0.8622503 0.9947371 0.9594481 0.9907143 1.0045889 0.9766371 #>  [1030] 0.9858202 0.9594481 0.8456708 0.8346005 0.9806095 0.9434163 0.9727079 #>  [1037] 0.9995975 0.9891532 0.9103081 0.8512060 0.9251449 0.9884729 0.9767691 #>  [1044] 0.9755667 0.9771967 0.7648848 0.9838993 0.9782340 0.9202932 0.9967614 #>  [1051] 0.9987863 0.9922209 0.9851881 0.9801978 0.8290754 0.9872256 0.9794489 #>  [1058] 0.9848710 0.9298917 0.9696680 0.7751867 0.9556816 0.9890505 0.9755667 #>  [1065] 0.9924512 0.8786649 0.9855336 0.9594481 0.9820758 0.9664453 0.9975461 #>  [1072] 0.9973513 0.9833714 0.9779844 0.8456708 0.9884729 0.8017272 0.8947465 #>  [1079] 0.9907143 0.9852361 0.9967602 0.9771967 0.9852361 0.9810467 0.9848485 #>  [1086] 0.9847099 0.9806086 0.9773093 0.9727079 0.9900562 0.8732217 0.8346005 #>  [1093] 0.9476566 0.9967602 0.9994419 0.9994060 0.9664453 0.9808202 0.9765032 #>  [1100] 0.8677481 0.7547929 0.8456708 0.7856794 0.8290754 0.9993297 0.9995975 #>  [1107] 0.9852095 0.9797718 0.9908574 0.8622503 0.9767140 0.9765323 0.9434163 #>  [1114] 0.9978893 0.9517481 0.9830554 0.9434163 0.8071463 0.9820000 0.9775504 #>  [1121] 0.9755667 0.8894341 0.9825776 0.8677481 0.7909905 0.9787953 0.9476566 #>  [1128] 0.7963408 0.8732217 0.9476566 0.8786649 0.9556816 0.8677481 0.9766922 #>  [1135] 0.8622503 0.8512060 0.9994060 0.9991336 1.0008670 0.9251449 0.9922209 #>  [1142] 0.9476566 0.9994419 0.8235631 0.9755667 0.9855336 0.9476566 0.9935744 #>  [1149] 0.8512060 0.9801978 0.9785030 0.8456708 0.9842387 0.9924512 0.9630385 #>  [1156] 0.9840156 0.7547929 0.9815100 0.9995975 0.9955903 0.9996303 0.9994060 #>  [1163] 0.9727079 0.9994060 0.9766371 0.9890505 0.8290754 0.9855336 0.9765322 #>  [1170] 0.9890505 0.8894341 0.9975461 0.9766267 0.9973513 0.7856794 0.7700107 #>  [1177] 0.9996303 0.9939966 0.8947465 0.9947791 0.8512060 0.9850513 0.9818704 #>  [1184] 0.9798111 0.7400856 0.9816628 0.7400856 0.8567344 0.7804105 0.9997025 #>  [1191] 0.7963408 0.9000012 0.9390361 0.9298917 0.9556816 0.9767691 0.8512060 #>  [1198] 0.9850513 0.9785928 0.9782328 0.9771822 0.9765032 0.9991447 0.9696680 #>  [1205] 0.9807495 0.9777398 0.8235631 0.9785030 0.9939966 0.9837555 0.9954485 #>  [1212] 0.9298917 0.9833336 0.9517481 0.9830355 0.9900562 0.9973513 0.9630385 #>  [1219] 0.9954485 0.9767691 0.8622503 0.9987331 0.9975461 0.9852361 0.8071463 #>  [1226] 0.9824785 0.7963408 0.9994419 0.8290754 0.9801978 0.8071463 0.9801978 #>  [1233] 0.9833336 0.7498311 0.9967602 0.9103081 0.9825173 0.9755667 0.9975461 #>  [1240] 0.9835892 0.9890505 0.9153448 0.9900562 0.9967614 0.9556816 0.9932328 #>  [1247] 0.8017272 0.9850631 0.8180681 0.8567344 0.9961252 0.9849019 0.8947465 #>  [1254] 0.7700107 0.9755667 0.8622503 0.9769193 0.9851589 0.8235631 0.9779844 #>  [1261] 0.7909905 0.9775504 0.8947465 0.9830784 0.8346005 0.9967614 0.9769193 #>  [1268] 0.9773093 0.8786649 0.9916576 0.9779844 0.9000012 0.9782465 0.9892596 #>  [1275] 0.9766922 0.9775504 0.9801978 0.9991447 0.9816628 0.8512060 0.9765323 #>  [1282] 0.8235631 0.9822786 0.9935744 0.8456708 0.9833714 0.9993249 0.9594481 #>  [1289] 0.9773093 0.7700107 0.9818704 0.9916576 0.9785030 0.7305888 0.9851589 #>  [1296] 0.9818704 0.8786649 0.9826770 0.9991447 0.9051910 0.9991336 0.9202932 #>  [1303] 0.9810467 0.9785030 0.9768571 0.9696680 0.8512060 0.7400856 0.9829479 #>  [1310] 0.7751867 0.8947465 0.9251449 0.9764898 0.8677481 0.9664453 0.9847614 #>  [1317] 0.9827312 0.9840678 0.9785030 0.9851353 0.9892596 0.9434163 0.7856794 #>  [1324] 0.9982020 0.9153448 0.8235631 0.9771967 0.8786649 0.9764898 0.7353054 #>  [1331] 0.7856794 0.9994419 0.9556816 0.9982020 0.9791663 0.8622503 0.9806086 #>  [1338] 0.9991447 0.9834168 0.9345250 0.7909905 0.9103081 0.9767691 0.8017272 #>  [1345] 0.7856794 0.9848710 0.7547929 0.8947465 0.8512060 0.9851881 0.8071463 #>  [1352] 0.9852361 0.9869513 0.8732217 0.9000012 1.0046209 0.9841310 0.9872256 #>  [1359] 0.9907143 0.9869513 0.9994060 0.9997153 0.7648848 0.9051910 0.9765032 #>  [1366] 0.9769193 0.9924512 0.9390361 0.7856794 0.9987331 0.9777571 0.9991336 #>  [1373] 0.8180681 0.9983696 0.8786649 0.9664453 0.9298917 0.9556816 0.8567344 #>  [1380] 0.9768079 0.8290754 0.9849019 0.9908574 0.9840156 0.9768079 0.8125945 #>  [1387] 0.9830784 0.7909905 0.7498311 0.9103081 0.9830784 0.8622503 0.8567344 #>  [1394] 0.8947465 0.9556816 0.9801874 0.9202932 0.9862272 0.9810467 0.9994060 #>  [1401] 0.9806086 0.9664453 0.9826328 0.9727079 0.9807495 0.9827519 0.9051910 #>  [1408] 0.9793652 0.9807495 0.9939966 0.9815100 0.9892596 0.9836360 0.9995975 #>  [1415] 0.9847614 0.9830784 0.9727079 0.9806086 0.9727079 0.9103081 0.9967614 #>  [1422] 0.8512060 0.8622503 0.9630385 0.9995975 0.9434163 0.9806086 0.8125945 #>  [1429] 0.9556816 0.8180681 0.9994419 0.9854689 0.9850002 0.9051910 0.9803976 #>  [1436] 0.9801978 0.9000012 0.9765732 0.8456708 0.9967602 0.9798111 0.9594481 #>  [1443] 0.9769193 0.9765032 0.8180681 0.9103081 0.7700107 0.9852361 0.9476566 #>  [1450] 0.9872256 0.9820000 0.9434163 0.9770488 0.9877017 0.9793652 0.8071463 #>  [1457] 0.8346005 0.7598115 0.9869513 0.9961252 0.9947371 0.9103081 0.9594481 #>  [1464] 0.9958395 0.9828674 0.9298917 0.9798111 0.9476566 0.9997153 0.9785030 #>  [1471] 0.9842387 0.9851881 0.9973513 0.9778981 0.9798111 0.9947371 0.9517481 #>  [1478] 0.8017272 0.9818704 0.9908574 0.9727079 0.9967614 0.9782465 0.9765323 #>  [1485] 0.9787953 0.9947371 0.9947791 0.8567344 0.9877017 0.9390361 0.9842449 #>  [1492] 0.9764898 0.7751867 0.8677481 0.9847099 0.9982020 0.7449281 0.8071463 #>  [1499] 0.9930687 1.0007323 0.9935744 0.9787953 0.9828673 0.9594481 0.9773638 #>  [1506] 0.9793652 0.8235631 0.9793652 0.9907143 0.9765732 0.9987863 0.8071463 #>  [1513] 0.9958395 0.8456708 0.9768079 0.9153448 0.9947791 0.8840713 0.9892596 #>  [1520] 0.8290754 0.9967614 0.9251449 0.8567344 0.9967602 0.9852361 0.9922209 #>  [1527] 0.9696680 0.7598115 0.8071463 0.8840713 0.9994419 0.9630385 0.9779844 #>  [1534] 0.9820000 0.9556816 0.9920623 0.9834168 0.9630385 0.7804105 0.9991447 #>  [1541] 0.9765043 0.9907143 0.9830624 0.9815100 0.8677481 0.9202932 0.8732217 #>  [1548] 0.8894341 0.9153448 0.9872256 0.8346005 0.9778981 0.8512060 0.7498311 #>  [1555] 0.9843563 0.9782465 0.8290754 0.9994419 0.9847614 0.9982020 0.9785928 #>  [1562] 0.8894341 0.9830624 0.9991447 0.9755667 0.9765032 0.7498311 0.8290754 #>  [1569] 0.9983696 0.9777571 0.8290754 0.9991447 0.9801978 0.9202932 0.9826839 #>  [1576] 0.9847614 0.8346005 0.9947791 0.8290754 0.9769193 0.9251449 0.9987331 #>  [1583] 0.9994060 0.8401339 0.9830624 0.8456708 0.9939966 0.9835571 0.9765043 #>  [1590] 0.7856794 0.7498311 0.9872256 0.9345250 0.7751867 0.7856794 0.9298917 #>  [1597] 0.8677481 0.9884729 0.9103081 0.9778981 0.9847614 0.9852361 0.8567344 #>  [1604] 0.8017272 0.9841310 0.8456708 0.7909905 0.9975461 0.9390361 0.9994419 #>  [1611] 0.9727079 0.9771822 0.9773093 0.9803976 0.9849019 0.9852086 0.9997025 #>  [1618] 0.9777398 0.9994419 0.9961252 0.9997025 0.8456708 0.9773638 0.9765322 #>  [1625] 0.9890505 0.9961252 0.9784108 0.9845991 0.8512060 0.9935744 0.9872256 #>  [1632] 0.9775886 0.9630385 0.9807495 0.9996303 0.8456708 0.9825173 0.9851881 #>  [1639] 0.9834420 0.8401339 0.9836360 0.9476566 0.9830784 0.9816628 0.9997025 #>  [1646] 0.9987331 0.9900562 0.9202932 0.9766922 0.9900562 0.8235631 0.8677481 #>  [1653] 0.9973513 0.9840156 0.9900562 0.9850631 0.9791104 0.9982020 0.9872256 #>  [1660] 0.9251449 0.9727079 0.7804105 0.8401339 0.9947371 0.9202932 0.8947465 #>  [1667] 0.9202932 0.9153448 0.8290754 0.9994419 0.9837652 0.7400856 0.9975461 #>  [1674] 0.7400856 0.8622503 0.9935744 0.9630385 0.9828673 0.9807495 0.9517481 #>  [1681] 0.9994060 0.7856794 0.9814536 0.9932328 0.8567344 0.9991336 0.9872256 #>  [1688] 0.9997025 0.9836360 0.7353054 0.9769193 0.8947465 0.9784108 0.9852361 #>  [1695] 0.8346005 0.9997025 0.9434163 1.0043969 0.9345250 0.9978935 0.9807495 #>  [1702] 0.9774449 0.9153448 0.9806095 0.9103081 0.9051910 0.9801978 0.8622503 #>  [1709] 0.9755667 0.8401339 0.8894341 0.9556816 0.9932328 0.8732217 0.7804105 #>  [1716] 0.9000012 0.9298917 0.9843502 0.9960875 0.9997025 0.9791663 0.9815100 #>  [1723] 0.9961252 0.9787953 0.9935744 0.8401339 0.8346005 0.9755667 0.9848710 #>  [1730] 1.0029811 0.9877017 0.9801978 0.9935744 0.8512060 0.8456708 0.9862272 #>  [1737] 0.9767691 0.9882461 0.9967614 0.9983696 0.9630385 0.9997153 0.9476566 #>  [1744] 0.9782465 0.9939966 0.8512060 0.9836360 0.9910690 0.9924512 0.9051910 #>  [1751] 0.8456708 0.8346005 0.9869513 0.9784108 0.9782465 0.9842499 0.9765043 #>  [1758] 0.9844791 0.9831296 0.8235631 1.0024061 0.9822786 0.9828673 0.8346005 #>  [1765] 0.9782465 0.9987863 0.9983696 0.8456708 0.9825173 0.9766267 0.9820758 #>  [1772] 0.9850002 0.9955903 0.9664453 0.9991336 0.9816628 0.8017272 0.9818704 #>  [1779] 0.9890505 0.9908574 0.9967602 0.9251449 0.9103081 0.9556816 0.9849821 #>  [1786] 0.9849821 0.9773093 0.9890505 0.8622503 0.9664453 0.9890505 0.8677481 #>  [1793] 0.9961252 0.9996303 0.9924512 0.9830784 0.9664453 0.9768079 0.8786649 #>  [1800] 0.9869513 0.9755667 0.8622503 0.9594481 0.9987863 0.9806095 0.9782465 #>  [1807] 0.9842130 0.8180681 0.9825173 0.9842387 0.8894341 0.9696680 0.9770488 #>  [1814] 0.9766922 0.9978893 0.9771822 0.8622503 0.9983696 0.9775886 0.9838993 #>  [1821] 0.9434163 0.9768571 0.9755667 0.9967602 0.8456708 1.0018378 0.9835892 #>  [1828] 0.9960875 0.9807495 0.8512060 0.9202932 0.9664453 0.9862272 0.9775504 #>  [1835] 0.9251449 0.8401339 0.9812431 0.9907143 0.9806095 0.9828673 0.9935744 #>  [1842] 0.9824785 0.9556816 0.9798111 0.9987331 0.8567344 0.9947371 0.8401339 #>  [1849] 0.9935744 0.9000012 0.8894341 0.9991336 0.9848710 0.9103081 0.9556816 #>  [1856] 0.9814536 0.9892596 0.9958395 0.9975461 0.9996303 0.8512060 0.9850631 #>  [1863] 0.9777571 0.9000012 0.9774449 0.8567344 0.9967602 0.9907143 0.9764898 #>  [1870] 0.9771967 0.9764898 0.9833336 0.9755667 0.9900967 0.9780630 0.9890505 #>  [1877] 0.9832387 0.9862272 0.9940804 0.9985265 0.9765322 0.8456708 1.0013943 #>  [1884] 0.9961252 0.9801874 0.9994419 0.7804105 0.9775504 0.8290754 0.9769193 #>  [1891] 0.9849821 0.9476566 0.9850002 0.9825173 0.9994419 0.9996303 0.8456708 #>  [1898] 0.8677481 0.9842499 0.9594481 0.9153448 0.9791663 0.9852361 0.9298917 #>  [1905] 0.7700107 0.9764893 0.9869513 0.9051910 0.9770641 0.8017272 0.9848710 #>  [1912] 1.0032879 0.9844644 0.9791104 0.9831296 0.9765322 0.9727079 0.8840713 #>  [1919] 0.9922209 0.9816628 0.9935744 0.9852361 1.0008690 0.9987863 0.9202932 #>  [1926] 0.9994419 0.9830624 0.8401339 0.9878087 0.9556816 0.8235631 0.9995975 #>  [1933] 0.9202932 0.9830643 0.9696680 0.8786649 0.8677481 0.9991447 0.9784108 #>  [1940] 0.8947465 0.9844791 0.8894341 0.8512060 0.9947371 0.9852361 0.9816628 #>  [1947] 0.8125945 0.9782340 0.9727079 0.9777398 0.8786649 0.9832387 0.9961252 #>  [1954] 0.8290754 0.9839151 0.7700107 0.7449281 0.9994060 0.9806095 0.9727079 #>  [1961] 0.9982020 0.9664453 0.9907143 0.8180681 0.9727079 0.9345250 0.8786649 #>  [1968] 0.9764898 0.9769556 0.8677481 0.9051910 0.9890505 0.9794489 0.9755667 #>  [1975] 0.9051910 0.9815100 0.8512060 0.7804105 0.9787953 0.8732217 0.9000012 #>  [1982] 0.8947465 0.9298917 0.9390361 0.9983696 0.9839151 0.7648848 1.0046260 #>  [1989] 0.8732217 1.0079677 0.9846678 0.9103081 0.8840713 0.9983696 0.9851090 #>  [1996] 0.9978893 0.9840156 0.9987863 0.9877017 1.0013943 0.9872256 0.9973513 #>  [2003] 0.9961252 0.9777398 0.9829479 0.9051910 0.9000012 0.9848110 0.8840713 #>  [2010] 0.9801978 0.9983696 0.9755667 0.9982020 0.9153448 0.9830784 0.9153448 #>  [2017] 0.8947465 0.8180681 0.9987331 0.9727079 0.9862272 1.0008670 0.9890505 #>  [2024] 0.8235631 0.9890505 0.8840713 0.9298917 0.9845991 0.9766371 0.9982020 #>  [2031] 0.9769556 0.9958395 0.9787953 0.9594481 0.8947465 0.9476566 0.9954485 #>  [2038] 0.8512060 0.7648848 0.8017272 0.9799787 0.9847614 0.9782465 0.9907143 #>  [2045] 0.7547929 0.9947371 0.8512060 0.7751867 0.8125945 0.9982020 0.7498311 #>  [2052] 0.8894341 0.9862272 0.9202932 0.7804105 0.9826770 0.7856794 0.9830784 #>  [2059] 0.7963408 0.9769193 0.9851548 0.9345250 0.9766371 0.7804105 0.9947791 #>  [2066] 0.9778981 0.9827949 0.9000012 0.9774449 1.0016438 0.8786649 0.9795671 #>  [2073] 0.9961252 0.9862272 0.9869513 0.9994060 0.9851548 0.9935744 0.9939966 #>  [2080] 0.9916576 0.9920623 0.9251449 0.9000012 0.9922209 0.9630385 0.8180681 #>  [2087] 0.9939966 0.7598115 0.9630385 0.9810318 0.9771967 0.9773638 0.9826332 #>  [2094] 0.9769193 0.9975461 0.9766267 0.9434163 0.8346005 0.8125945 0.9251449 #>  [2101] 0.9877017 0.8235631 0.9983696 0.7648848 0.9994419 0.9810318 0.9826332 #>  [2108] 0.9825173 0.8512060 0.9834420 0.9815100 0.9696680 0.9770488 0.7547929 #>  [2115] 0.9997153 0.9517481 0.8180681 0.8567344 0.7751867 0.9556816 0.9997680 #>  [2122] 0.8947465 0.8071463 0.9798111 0.9907143 0.9838993 0.9829412 0.9890505 #>  [2129] 0.9251449 0.9782328 0.9769193 0.9773093 0.9815100 0.9826328 0.9153448 #>  [2136] 0.9000012 0.9975461 0.9251449 0.9777571 0.9345250 0.9947791 0.9755667 #>  [2143] 0.9775886 0.9924512 0.9807495 0.9251449 0.8786649 0.9806095 0.8894341 #>  [2150] 0.9983696 0.9833714 0.9103081 0.9890505 0.9798111 0.9801874 0.8346005 #>  [2157] 0.9798111 0.9869513 0.9924512 0.8947465 0.9594481 0.9345250 0.9872256 #>  [2164] 0.9947791 0.8840713 0.9298917 0.9815100 0.7547929 0.9153448 0.9975461 #>  [2171] 0.9836360 0.7804105 0.8622503 0.9991336 0.9947791 0.9987863 0.9727079 #>  [2178] 0.9852361 0.8290754 0.9797718 0.9765732 0.7547929 0.7963408 0.9765732 #>  [2185] 0.9664453 0.9594481 0.7305888 0.9153448 0.7751867 0.9827519 0.9298917 #>  [2192] 0.9922209 0.9517481 0.9843563 0.9845991 0.9103081 0.9973513 0.9825173 #>  [2199] 0.9830784 0.9908574 0.9850513 0.9983087 0.8840713 0.8290754 0.9908574 #>  [2206] 0.8235631 0.9884729 0.7700107 0.8125945 0.8786649 0.9556816 1.0045428 #>  [2213] 0.9727079 0.9932328 0.8894341 0.9771967 0.9922209 0.7547929 0.9851589 #>  [2220] 0.8567344 0.9975461 0.8840713 0.9765732 0.9884729 0.9785030 0.9766267 #>  [2227] 0.9834168 0.9777398 0.8677481 0.8290754 0.8401339 0.9994419 0.9798111 #>  [2234] 0.8786649 0.9784108 0.7804105 0.9826770 0.8622503 0.9787953 0.9848710 #>  [2241] 0.8567344 0.9886946 0.9791104 0.9770488 0.8401339 0.9884729 0.9869513 #>  [2248] 0.8622503 0.9869513 0.9594481 0.9794489 0.9517481 0.9766267 0.9810467 #>  [2255] 0.9828374 0.7963408 0.9434163 0.9051910 0.9755667 0.9967602 0.7804105 #>  [2262] 0.9994419 0.9798111 0.9828374 0.8567344 0.9852159 0.8786649 0.9961252 #>  [2269] 0.9884729 0.7700107 0.9987863 0.9476566 0.9251449 0.9975470 0.9884729 #>  [2276] 0.8180681 0.9900562 0.8346005 0.8456708 0.9862272 0.9982020 0.9939966 #>  [2283] 0.9908574 0.9727079 0.9855336 0.8290754 0.9696680 0.8786649 0.9434163 #>  [2290] 0.9843502 0.9782465 0.9556816 0.9843502 0.9991336 0.8677481 0.9890505 #>  [2297] 0.9777571 0.9997153 0.9765322 0.9765766 0.9785928 0.9852095 0.9841310 #>  [2304] 0.9812431 0.9517481 0.7804105 0.9845248 0.8786649 0.8786649 0.7498311 #>  [2311] 0.9298917 0.9982020 0.9830624 0.9916576 0.9983696 1.0043263 0.9994419 #>  [2318] 0.9996303 0.9830784 0.9434163 0.9390361 0.8017272 0.9872256 0.9755667 #>  [2325] 0.9766922 0.9847614 0.9840156 0.8840713 0.9556816 0.9556816 0.9795671 #>  [2332] 0.9994060 0.9778981 0.9849821 0.9630385 0.9777571 0.9947791 0.7804105 #>  [2339] 0.9782340 0.9818704 0.9766267 0.9773093 0.9994060 0.9434163 0.9770488 #>  [2346] 0.9727079 0.9782465 0.9967602 0.9836360 0.9777571 0.9997153 0.9967614 #>  [2353] 0.9842130 0.9975461 0.9967614 0.8071463 0.9982020 0.9993794 0.9973513 #>  [2360] 0.8786649 0.9794489 0.8622503 0.9842387 0.9958395 0.9664453 0.7751867 #>  [2367] 0.9770641 0.9051910 0.9594481 0.9973513 0.9782340 0.9820000 0.9765043 #>  [2374] 0.9153448 0.9939966 0.9806095 0.9787953 0.9852095 0.9825173 0.9935744 #>  [2381] 0.9835892 0.9517481 0.9892596 0.9884729 1.0034669 0.9978893 0.9991336 #>  [2388] 0.9771967 0.9755667 0.9890505 0.7305888 0.9820000 0.9764893 0.9051910 #>  [2395] 0.8235631 0.7804105 0.9820000 0.9785928 0.9849019 0.9630385 0.8017272 #>  [2402] 0.9935744 0.9771822 0.8071463 0.9779844 0.8346005 0.9390361 0.9830784 #>  [2409] 0.9916576 0.9791663 0.9842387 0.9872256 0.9872256 0.9434163 0.9000012 #>  [2416] 0.7648848 0.9727079 0.9755667 0.9251449 0.8346005 0.9994419 0.7449281 #>  [2423] 0.9390361 0.9836360 0.8456708 0.7598115 0.9987331 0.9851903 0.9799787 #>  [2430] 0.9826839 0.7700107 0.8732217 0.7963408 0.9814536 0.9517481 0.9987331 #>  [2437] 0.9907143 0.9771822 1.0015803 0.8017272 0.8786649 0.9664453 0.8512060 #>  [2444] 0.9997153 0.9987331 0.9770641 0.9202932 0.9202932 0.7648848 0.9345250 #>  [2451] 0.9298917 0.8512060 0.9797718 0.7449281 0.9773638 0.9764893 0.7353054 #>  [2458] 0.9390361 0.8017272 0.9834168 0.9782465 0.9765732 0.7909905 0.9664453 #>  [2465] 0.8567344 0.9630385 0.9833336 0.9987331 0.8622503 0.9768079 0.8786649 #>  [2472] 0.9915635 0.8947465 0.9814536 0.9873832 0.9939966 0.9778981 0.9835892 #>  [2479] 0.8567344 0.9345250 0.9958395 0.9916576 0.8622503 0.7449281 0.9979256 #>  [2486] 0.9807495 0.8840713 0.9947791 0.9987331 0.9727079 0.7751867 0.7700107 #>  [2493] 0.9765043 0.9991447 0.9924512 0.8235631 1.0043263 0.7804105 0.9947371 #>  [2500] 0.9777571 0.8401339 0.9991336 0.9877017 0.7498311 0.8180681 0.9844791 #>  [2507] 0.9939966 0.9793652 0.7598115 0.8180681 0.9434163 0.9847614 0.9983387 #>  [2514] 0.8180681 0.9991336 0.9987460 0.9977927 0.9829479 0.9818704 0.9773093 #>  [2521] 0.8677481 0.9000012 0.9967602 0.9997153 0.9935744 0.9997153 0.9153448 #>  [2528] 0.9845991 0.9954485 0.9773093 0.9862272 0.9872256 0.9390361 0.9251449 #>  [2535] 0.8567344 0.9298917 0.8622503 0.8235631 0.8947465 0.8732217 0.9947791 #>  [2542] 0.9812431 0.9958395 0.7804105 0.9975461 0.9825776 0.9862272 0.9780630 #>  [2549] 0.9842387 1.0020877 0.9779844 0.9836360 0.9982020 0.9850002 0.9476566 #>  [2556] 0.9664453 0.9983696 0.9782465 0.9872256 0.9838993 0.9935744 0.9830784 #>  [2563] 0.7909905 0.9202932 0.9996303 0.9991336 0.9907143 0.7909905 0.9839151 #>  [2570] 0.7305888 0.9892596 0.9806095 0.9767691 0.8840713 0.9851162 0.9782340 #>  [2577] 0.9932328 0.9884729 0.9922209 0.9765322 1.0027749 0.9975461 0.9390361 #>  [2584] 0.8290754 0.9815100 0.9791663 0.9390361 0.7353054 0.9807495 0.9556816 #>  [2591] 0.9807495 0.9877017 0.9795671 0.8894341 0.8401339 0.9767691 0.9869513 #>  [2598] 0.9782465 0.9987863 0.9517481 0.9848485 0.8125945 0.9476566 0.9782328 #>  [2605] 0.9664453 0.9787797 0.9780630 0.7547929 0.8622503 0.9935744 0.9997025 #>  [2612] 0.9996303 0.9765732 0.9847099 0.9807495 0.8125945 0.9390361 0.9390361 #>  [2619] 0.9954485 0.8786649 0.9994060 0.9865720 0.9051910 0.9630385 0.9978893 #>  [2626] 0.7598115 0.9434163 0.9852159 0.9850631 0.9954485 0.9630385 0.9890505 #>  [2633] 0.8894341 0.9836675 0.8071463 0.9827949 0.9765322 0.8456708 0.9556816 #>  [2640] 0.9202932 0.9782340 0.9890505 0.9298917 1.0038790 0.9806095 0.9766371 #>  [2647] 0.9345250 0.9517481 0.9852361 0.9251449 0.7700107 0.8456708 0.9996303 #>  [2654] 0.9556816 0.9791104 0.9696680 0.9835571 1.0034469 0.9778981 0.9824785 #>  [2661] 0.9830554 0.9795671 0.9841310 0.9975470 0.9930687 0.9932328 0.8125945 #>  [2668] 0.9766922 0.9892596 0.9834420 0.9896209 0.9967602 0.7547929 0.8894341 #>  [2675] 0.9766371 0.9782328 0.9961252 0.9967602 0.9795671 0.9766922 0.9782465 #>  [2682] 0.9000012 0.9556816 0.9765043 0.9830784 0.9947791 1.0042934 0.9815100 #>  [2689] 0.9907143 1.0040264 0.9994060 0.9836360 0.8456708 0.9845991 0.8677481 #>  [2696] 0.9345250 0.9390361 0.8125945 0.9954485 0.9843563 0.9664453 0.9970669 #>  [2703] 0.8401339 0.9987863 0.9925644 0.9890505 0.9765766 0.9831296 0.9825799 #>  [2710] 0.9434163 0.9849284 0.9000012 0.9791104 0.9517481 0.9900562 0.8346005 #>  [2717] 0.9103081 0.9775504 0.8840713 0.9958395 0.8840713 0.9828674 0.9991336 #>  [2724] 0.9997153 0.8512060 0.9861882 0.7547929 0.8732217 0.9872256 0.9830355 #>  [2731] 0.7963408 0.9434163 0.9794489 0.9782340 0.9852159 0.9954485 0.8456708 #>  [2738] 0.9845685 0.9778981 0.9924512 0.9103081 0.9390361 0.9884729 0.8840713 #>  [2745] 0.9594481 0.9765043 0.9390361 0.7751867 0.9298917 0.9994060 0.9773638 #>  [2752] 0.7963408 0.9834420 0.9830624 0.9991336 0.7963408 0.9852361 0.9767691 #>  [2759] 0.9755667 0.9855336 0.7804105 0.9994060 0.9434163 0.9825173 0.9978893 #>  [2766] 0.9476566 0.9890505 0.8567344 0.9935744 1.0036754 0.9830624 0.9991336 #>  [2773] 0.9997153 0.9771967 0.9769556 0.8180681 0.9807495 0.9755667 0.7909905 #>  [2780] 0.9630385 0.9765032 0.8622503 0.9987331 0.9872256 0.9727079 0.8840713 #>  [2787] 0.8567344 0.9820758 0.7547929 0.9103081 0.9991447 0.9982020 0.9727079 #>  [2794] 0.9828374 0.9826748 0.9832387 0.9727079 0.9765043 0.9630385 0.8786649 #>  [2801] 0.9794489 0.9556816 0.9837555 0.9778981 0.9727079 0.8235631 0.9825173 #>  [2808] 0.9000012 0.9851162 0.9775504 0.7751867 0.9782465 0.9806086 0.9630385 #>  [2815] 0.7648848 0.9884729 0.9801978 0.9982020 0.9820000 0.9630385 0.8017272 #>  [2822] 0.9827519 0.9807495 0.7700107 0.9847099 0.9202932 0.7305888 0.9764893 #>  [2829] 0.7547929 0.9872256 0.9810467 0.9766371 0.9000012 0.8180681 0.8017272 #>  [2836] 0.9997025 0.9982020 0.9854689 0.9764898 0.9872256 0.9825173 0.8180681 #>  [2843] 0.9765766 0.9765043 0.8732217 0.9251449 0.8456708 0.9774449 0.7305888 #>  [2850] 0.8125945 0.7804105 0.8732217 0.8290754 0.7598115 0.9816628 0.8732217 #>  [2857] 0.9935744 0.9051910 0.9793652 0.9830784 0.7598115 0.9967602 0.9991447 #>  [2864] 0.9782465 0.9807495 0.9924512 0.9858202 0.8732217 0.9967602 0.9808202 #>  [2871] 0.9831296 0.9832075 0.9769556 0.9973513 0.9051910 0.8346005 0.9795671 #>  [2878] 0.9947791 0.9434163 0.8017272 0.9791104 0.7700107 0.9832292 0.9806086 #>  [2885] 0.9390361 0.9298917 0.9855336 0.8732217 0.9771967 0.9795671 0.9915635 #>  [2892] 0.9051910 0.9298917 0.9775504 0.9797718 0.9947791 0.9782340 0.8677481 #>  [2899] 0.9765043 0.9994419 0.9900562 0.9947371 0.7856794 0.9852159 0.8567344 #>  [2906] 0.9345250 0.9801978 0.9806095 0.9815100 0.9787953 0.9977926 0.7856794 #>  [2913] 0.9908574 0.9980193 0.9947791 0.7353054 0.9995975 1.0006757 0.9517481 #>  [2920] 0.9808202 0.9852159 0.9795671 0.9476566 0.9517481 0.9967614 0.9835892 #>  [2927] 0.9975461 0.9755667 0.9924512 0.9797718 0.9985665 0.9799787 0.9908574 #>  [2934] 0.9947791 0.8017272 0.8180681 1.0024061 1.0004868 0.8290754 0.9000012 #>  [2941] 0.9830784 0.9051910 0.9877017 0.9907143 0.9907143 0.7305888 0.9980447 #>  [2948] 0.9594481 0.8786649 0.9434163 0.9877017 0.9791663 0.8125945 0.9764898 #>  [2955] 0.7909905 0.9770488 0.9664453 0.8290754 0.8567344 0.9556816 0.9434163 #>  [2962] 0.9767140 0.9872256 0.9727079 0.9890505 0.9769193 0.9851881 0.9862272 #>  [2969] 0.9727079 0.9773638 0.9755667 0.9202932 0.7648848 0.9858202 0.9815100 #>  [2976] 0.7598115 1.0032879 0.9958395 0.9837555 0.9345250 0.9958395 0.9907143 #>  [2983] 0.7598115 0.9251449 0.8125945 0.9947371 0.9768079 0.7305888 0.9787953 #>  [2990] 0.9765323 0.9390361 0.8894341 0.9935744 1.0038790 0.9947371 0.9771822 #>  [2997] 0.9808202 0.9345250 0.9434163 0.9801978 0.9768079 0.9890505 0.9892596 #>  [3004] 0.9051910 0.9765323 0.9907143 0.8290754 0.9892596 0.9872256 0.9991336 #>  [3011] 0.9807495 0.8567344 0.8840713 0.9849019 0.9345250 0.9153448 0.9771967 #>  [3018] 0.9782340 0.9994060 0.8947465 0.9975470 0.9782340 0.8677481 0.9826770 #>  [3025] 0.9807495 0.9807495 0.9202932 0.9202932 0.9851548 0.8512060 0.8947465 #>  [3032] 0.9202932 0.8235631 0.8894341 0.9994419 0.9935744 0.9390361 0.9852086 #>  [3039] 0.9777398 0.9858202 0.7648848 0.8125945 0.8512060 0.9994419 0.9916576 #>  [3046] 1.0044814 0.9922209 0.9153448 0.9765732 0.9838993 0.8235631 0.8017272 #>  [3053] 0.9830624 0.9517481 0.9947791 0.9051910 0.9785928 0.7353054 0.8346005 #>  [3060] 0.7804105 0.9954485 0.9947371 0.7598115 0.9975461 0.9784108 0.9916576 #>  [3067] 0.9814536 0.9594481 1.0010213 0.9787953 0.7963408 0.8894341 0.9556816 #>  [3074] 0.9779844 0.9828674 0.9997025 1.0013868 0.9630385 0.9251449 0.9828674 #>  [3081] 0.9801978 0.9202932 0.9390361 0.9995975 0.7648848 0.9836360 0.9925644 #>  [3088] 0.9890505 0.9975461 0.9983696 0.9847099 0.9775504 0.9997025 0.7648848 #>  [3095] 0.8125945 0.9861882 0.9995503 0.9837830 0.9935744 0.9935744 0.7400856 #>  [3102] 0.9765043 0.7909905 0.9947791 0.7963408 0.7856794 0.9775504 0.8180681 #>  [3109] 0.8622503 0.8512060 0.8235631 0.9814536 0.9696680 0.9872256 0.9773093 #>  [3116] 0.9778981 1.0045889 0.9727079 0.9983696 0.9791663 0.9766922 0.9851881 #>  [3123] 0.9872256 0.9852361 0.8947465 0.9845685 0.8622503 0.9848710 0.9780630 #>  [3130] 0.9251449 0.9630385 0.9975461 0.9848710 0.9556816 0.9954485 0.9785928 #>  [3137] 0.9967614 0.9664453 0.9766371 0.9153448 0.8180681 0.9852159 0.9476566 #>  [3144] 0.8512060 0.9869513 0.9051910 0.9818704 0.9890505 0.9051910 0.9907143 #>  [3151] 0.8235631 0.9298917 0.9755667 0.9997153 0.9779844 0.8567344 0.9851548 #>  [3158] 0.9390361 0.9825720 0.9862272 0.8456708 0.9556816 1.0011027 0.9434163 #>  [3165] 0.7700107 0.9787953 0.7856794 0.9806095 0.9795671 0.9202932 0.9780630 #>  [3172] 0.9806095 0.9778981 0.9000012 0.7856794 0.9991447 0.8125945 0.9727079 #>  [3179] 0.9975461 1.0045889 0.9298917 0.9997153 0.9830554 0.9767140 1.0034469 #>  [3186] 0.8401339 0.9826748 0.7498311 0.9797718 0.9862272 0.9848710 0.9987863 #>  [3193] 0.9994419 0.7751867 0.9103081 0.8180681 0.9769193 0.9103081 0.9777571 #>  [3200] 0.9884729 0.9755667 0.9947791 0.8786649 0.9954485 0.9816628 0.9844644 #>  [3207] 0.9765043 0.9251449 0.9773638 0.7305888 0.9852361 0.9869513 0.9298917 #>  [3214] 0.9975461 0.9298917 0.9872256 0.9755667 0.9774449 0.8622503 0.8346005 #>  [3221] 0.9051910 0.9000012 0.9922209 0.9978893 0.9103081 0.9932328 0.9820000 #>  [3228] 0.9434163 0.9997153 0.9727079 0.9954485 0.7700107 0.9787953 0.8401339 #>  [3235] 0.8894341 0.9842499 0.9727079 0.9939966 0.9153448 0.9594481 0.9556816 #>  [3242] 0.8401339 0.8180681 0.8840713 0.8567344 0.9997153 0.9939966 0.9820000 #>  [3249] 0.9961252 0.9755667 0.9765043 0.9900562 0.9982020 0.9801978 0.9836360 #>  [3256] 0.8622503 0.9766267 0.9978893 0.9051910 0.9978893 1.0038790 0.9980914 #>  [3263] 0.9794489 0.9830784 0.9932328 0.9978893 0.9852086 0.9973513 0.9755667 #>  [3270] 0.9825173 0.9785928 0.9765322 0.9202932 0.9848710 0.9954485 0.8567344 #>  [3277] 0.9872256 0.9994060 0.9947371 0.8894341 0.9850513 0.7547929 0.9935744 #>  [3284] 0.8125945 0.9779844 0.7856794 0.9830624 0.9916576 0.8290754 0.9997025 #>  [3291] 0.9900562 0.8235631 0.9991447 0.9890505 0.9991447 0.8017272 0.9517481 #>  [3298] 0.8017272 0.7400856 0.9916576 0.9836675 0.9973513 0.9517481 0.9765732 #>  [3305] 0.9594481 0.9997153 0.9000012 0.8512060 0.9818704 0.9556816 0.9755667 #>  [3312] 0.9696680 0.9932328 0.9770488 0.9830624 0.8894341 0.9908574 0.9878087 #>  [3319] 0.9826839 0.8180681 0.9390361 0.7963408 0.9836360 0.9842387 0.9799787 #>  [3326] 0.9476566 0.9987331 0.9764893 0.9476566 0.9924512 0.9765732 0.9765323 #>  [3333] 0.9836360 0.9839963 0.9202932 0.9153448 0.8512060 0.9051910 0.9556816 #>  [3340] 0.7804105 0.9818704 0.8456708 0.9777398 0.9808202 0.7751867 0.9807495 #>  [3347] 0.9829479 0.9987863 0.9777571 0.9967602 0.8677481 0.9908574 0.9939966 #>  [3354] 0.9939966 0.9298917 0.9994060 0.9837555 0.9851881 0.8894341 0.9922209 #>  [3361] 0.9782465 0.9153448 0.9517481 0.7751867 0.9994060 0.8894341 0.7909905 #>  [3368] 0.8180681 0.8125945 0.9801978 0.7700107 1.0011221 0.9886946 0.9594481 #>  [3375] 0.9755667 0.9755667 0.9907143 1.0010213 0.9202932 0.9000012 0.9251449 #>  [3382] 0.9764898 0.9954485 0.9826328 0.9852159 0.9836675 0.8567344 0.9983698 #>  [3389] 0.8512060 0.8456708 0.7400856 0.9973513 0.9890505 0.9153448 0.9153448 #>  [3396] 0.9434163 0.9842449 0.9812431 0.7498311 0.8947465 0.9987863 0.8622503 #>  [3403] 0.9907143 0.9777398 0.9777571 0.9782328 0.9793652 0.8180681 0.7598115 #>  [3410] 0.9801978 0.9978893 0.8456708 0.7909905 0.8235631 0.9935744 0.8125945 #>  [3417] 0.8567344 0.9836360 0.8017272 0.9851881 0.9872256 0.9994419 0.9826005 #>  [3424] 0.7400856 0.9994419 0.8401339 0.9842387 0.9978654 0.9556816 0.7400856 #>  [3431] 0.9991336 1.0017501 0.9954485 0.9855336 0.9922209 0.9954485 0.8840713 #>  [3438] 0.9932328 0.8071463 0.9630385 0.8786649 0.8732217 0.9967614 0.9922209 #>  [3445] 0.9837555 0.7648848 1.0045952 0.7353054 0.9975461 0.9994060 0.9967614 #>  [3452] 0.8567344 1.0032356 0.9851903 0.9994419 0.9517481 0.9765032 0.9840156 #>  [3459] 0.9872256 0.9958395 0.9815100 0.9835571 0.8622503 0.8456708 0.9990606 #>  [3466] 0.9908574 0.9773093 0.9345250 0.8235631 0.9908574 0.9994419 0.8456708 #>  [3473] 0.9630385 0.9775886 0.9958395 0.9765732 0.9630385 1.0032356 0.8947465 #>  [3480] 0.7547929 0.8840713 0.9390361 1.0020305 0.9773093 0.9696680 0.9782465 #>  [3487] 0.9630385 0.9877017 0.9803976 0.7449281 0.9848485 0.9785030 0.9839151 #>  [3494] 0.9766267 0.9844644 0.9991336 0.8180681 0.9961252 0.9890505 0.9051910 #>  [3501] 0.7449281 0.9900562 0.8401339 0.8567344 0.8567344 0.9251449 0.9995975 #>  [3508] 0.9390361 0.9630385 0.7856794 0.8290754 0.8732217 0.9892596 0.9999409 #>  [3515] 0.9755667 0.9842499 0.9345250 0.9826748 0.9973513 0.9828374 0.9877017 #>  [3522] 0.8180681 0.8235631 0.9766267 0.9630385 0.9877017 0.9978254 0.8017272 #>  [3529] 1.0040264 0.8947465 0.8071463 0.9782465 0.7963408 0.8786649 0.8732217 #>  [3536] 0.8346005 0.9787797 0.7598115 0.9983696 0.9987863 0.9767140 1.0024061 #>  [3543] 0.9816628 0.9771967 0.9958395 0.9778981 0.9434163 0.9958395 0.9890505 #>  [3550] 0.9828674 0.9890505 0.7305888 0.9827312 0.9764893 0.9808202 0.8401339 #>  [3557] 0.8622503 0.9594481 0.8567344 0.7648848 0.9765043 0.7909905 0.9798111 #>  [3564] 1.0042934 0.8947465 0.9947371 0.9896209 0.8456708 0.9978893 0.9782465 #>  [3571] 0.8125945 0.9798111 0.9842387 0.9769556 0.9830784 0.9251449 0.9202932 #>  [3578] 0.9961252 0.9997025 0.8567344 0.9696680 0.9696680 0.8512060 0.9839963 #>  [3585] 0.8786649 0.9390361 0.9967602 0.9807495 0.9855336 1.0010213 1.0013925 #>  [3592] 0.9967602 0.9765032 0.9556816 0.9908574 0.9832387 0.8840713 0.9967602 #>  [3599] 0.7700107 0.8180681 0.7804105 0.9935744 0.9794489 0.7648848 0.8235631 #>  [3606] 0.8071463 0.9996303 0.9978893 0.8290754 0.9932328 0.8567344 0.8180681 #>  [3613] 0.9594481 0.9961252 0.9825173 0.9980447 0.9890505 0.8786649 0.9806095 #>  [3620] 0.9924512 0.8786649 0.9765032 0.9806095 0.9995975 0.9594481 0.9935744 #>  [3627] 0.9826332 0.8346005 0.8071463 0.9594481 0.9807495 0.9801978 0.9987863 #>  [3634] 0.9153448 0.9975461 0.9780630 0.7449281 0.9849821 0.9769556 0.9765323 #>  [3641] 0.9768079 0.7909905 0.9664453 0.7963408 0.9843502 0.9832387 0.9764898 #>  [3648] 0.9843563 0.7856794 0.9961252 0.8456708 0.9103081 0.9774449 0.9806086 #>  [3655] 0.7751867 0.9935744 0.8235631 0.8456708 0.9890505 0.8235631 0.9836360 #>  [3662] 0.7353054 0.8346005 0.8677481 0.9991336 0.9000012 0.9765032 0.9812431 #>  [3669] 0.8346005 0.9785928 0.9594481 0.7963408 0.8346005 0.9987331 0.9755667 #>  [3676] 0.9851548 0.9873832 0.7909905 0.9773093 0.9996303 0.9992373 0.8125945 #>  [3683] 0.7856794 0.9982020 0.9251449 0.9764893 0.9775886 0.9773638 0.9782340 #>  [3690] 1.0007798 0.8786649 0.9787953 0.8456708 0.9202932 0.9877017 0.9807495 #>  [3697] 0.9793652 0.9925644 0.9836360 0.9961252 0.9782465 0.9987331 0.8401339 #>  [3704] 0.9345250 0.9892596 0.9844644 0.9153448 1.0012638 0.9973513 0.8401339 #>  [3711] 1.0027043 0.9991336 0.9839151 0.9997025 0.9775886 1.0027043 0.9967614 #>  [3718] 0.8622503 0.9987331 0.8125945 0.9978893 0.8125945 0.9801978 0.9978893 #>  [3725] 0.9766371 0.9774449 0.9961252 0.9812431 0.9967602 0.9789710 0.9251449 #>  [3732] 0.7804105 0.9829479 0.9958395 0.9251449 0.9967602 0.9767140 0.9476566 #>  [3739] 0.7963408 0.7804105 0.8622503 0.8235631 0.9767140 0.9960875 0.9767140 #>  [3746] 0.8290754 0.9767140 0.9987071 0.9872256 0.9822786 0.8622503 0.9847099 #>  [3753] 0.9967614 0.9873832 1.0029811 0.9765323 0.9767140 0.8180681 0.9850002 #>  [3760] 0.9995975 0.9766267 0.8346005 0.8235631 0.9935744 0.9947371 0.9766371 #>  [3767] 0.9810467 0.9664453 0.7804105 0.9995949 0.9967614 0.9766267 0.9947371 #>  [3774] 0.9390361 0.9907143 0.9935744 0.8512060 0.8677481 0.9991336 0.8947465 #>  [3781] 0.9051910 0.9907143 0.7804105 0.9298917 0.8947465 0.9932328 0.9994060 #>  [3788] 0.9983696 0.9773638 0.9767140 0.9594481 0.9862272 0.8401339 0.8840713 #>  [3795] 0.9251449 0.7751867 1.0041701 0.9775504 0.9935744 0.9345250 0.9852361 #>  [3802] 0.9664453 0.9967614 0.9798111 0.9810467 0.9997025 0.9782340 0.9775886 #>  [3809] 0.7804105 0.8732217 0.9851090 0.9755667 0.8017272 0.9765766 0.9789710 #>  [3816] 0.8786649 0.9103081 0.7598115 0.9810467 0.8071463 0.9051910 0.9810467 #>  [3823] 0.9987331 0.9878087 0.9991447 0.9839963 0.9390361 0.9298917 0.9051910 #>  [3830] 0.9594481 0.8947465 0.9770488 0.9727079 0.9793652 0.9852095 0.8346005 #>  [3837] 0.9103081 0.9594481 0.9000012 0.9947791 0.9935744 0.9961252 0.8622503 #>  [3844] 0.7547929 0.9782465 0.9843563 0.9051910 0.9987331 0.9852361 1.0036754 #>  [3851] 0.9851589 0.9839151 0.9997813 0.9779844 0.9826328 0.8947465 0.9983696 #>  [3858] 0.9251449 0.9793652 0.9837652 0.9556816 0.9851162 0.9765322 0.7598115 #>  [3865] 0.9251449 0.9845991 0.9837830 0.8894341 0.9991336 0.9862272 0.9390361 #>  [3872] 0.9843502 0.9770641 0.8180681 0.7909905 0.8017272 0.7648848 0.8840713 #>  [3879] 0.7963408 0.9476566 0.8512060 0.9884729 0.9987331 0.9830784 0.9825173 #>  [3886] 0.7449281 0.9978477 0.9842387 0.9825173 0.9869707 0.9787953 0.8071463 #>  [3893] 0.8346005 0.8235631 0.9892596 0.9782465 0.8290754 0.8401339 0.7909905 #>  [3900] 0.9855336 0.9848110 0.9476566 0.9794489 0.7498311 0.9779844 0.9892596 #>  [3907] 0.9851881 0.8180681 0.9844644 0.8180681 0.9932328 0.9434163 0.8290754 #>  [3914] 0.9390361 0.8622503 0.9994060 0.9988699 0.9983696 0.9922209 0.8401339 #>  [3921] 0.9806095 0.9825173 0.9975461 0.8622503 0.8894341 0.9755667 0.9851353 #>  [3928] 0.9785928 0.9984989 0.9884729 0.9939966 0.9834168 0.9890505 0.8235631 #>  [3935] 0.9908574 0.9994060 0.9967602 0.9954485 0.9833336 0.9768079 0.9773093 #>  [3942] 0.9987863 0.8840713 0.9884729 0.9830624 0.9664453 0.9771822 0.9830554 #>  [3949] 0.9765323 0.8125945 0.9830624 0.9768571 0.9202932 0.9000012 0.9973513 #>  [3956] 0.8894341 0.9630385 0.9251449 0.9251449 0.9517481 0.9153448 0.9851090 #>  [3963] 0.9924512 0.9785928 0.9991447 0.9995975 0.9987331 0.9755667 0.9829479 #>  [3970] 0.7598115 0.8180681 0.9961252 0.9727079 0.9991447 0.9996303 0.9922209 #>  [3977] 0.9954485 0.9476566 0.8840713 0.9782328 0.8567344 0.9850002 0.9782465 #>  [3984] 0.9961252 0.9987863 0.8235631 0.9777398 0.9851589 0.9787953 0.9798111 #>  [3991] 0.9766922 1.0041701 0.9849019 0.9908574 0.8180681 0.8401339 0.8894341 #>  [3998] 0.7856794 0.9517481 0.9967602 0.9916576 0.9390361 0.8071463 0.9978893 #>  [4005] 0.8732217 0.9978893 0.8401339 0.9202932 1.0020877 0.9765766 0.9997153 #>  [4012] 0.7963408 0.9298917 0.7856794 0.9778981 0.9476566 0.7598115 0.9774449 #>  [4019] 1.0037431 0.9987863 0.8840713 0.9982020 0.9915635 0.9873832 0.8235631 #>  [4026] 0.9801874 0.9766371 0.9820758 0.7909905 0.9727079 0.9803976 0.9556816 #>  [4033] 0.9766371 0.9872256 0.9765323 1.0043263 0.9764893 0.9769193 0.9852361 #>  [4040] 0.9991447 0.9872256 0.7498311 0.8401339 0.9807495 0.9851548 0.8894341 #>  [4047] 0.9765032 0.9947791 0.9832387 0.9434163 0.9892596 0.9997153 0.9791663 #>  [4054] 0.9806086 0.9764898 0.9345250 0.9390361 0.9842130 0.9842387 0.8346005 #>  [4061] 0.9345250 0.9826328 0.9782465 0.9842130 0.9807495 0.9664453 0.9298917 #>  [4068] 0.8017272 0.9000012 0.8786649 0.9987331 0.9787953 0.9765323 0.8456708 #>  [4075] 0.9807495 0.9840678 0.9907143 0.9947371 0.9915635 0.9984332 0.8947465 #>  [4082] 0.9982020 0.9842499 0.8235631 0.9298917 0.9852361 0.8677481 0.9973513 #>  [4089] 0.9767140 0.9820000 0.9922209 0.9851903 0.9832387 0.7498311 0.9810318 #>  [4096] 0.9556816 0.9000012 0.9824785 0.9850002 0.7498311 0.8180681 0.9830643 #>  [4103] 0.9765323 0.8125945 0.9939966 0.9994060 0.9862272 0.9983696 0.8512060 #>  [4110] 0.9664453 0.7498311 0.9840678 0.8346005 0.8125945 0.9298917 0.9807495 #>  [4117] 0.9995975 0.9768079 0.9801874 0.9967614 0.9991447 0.9924512 1.0046401 #>  [4124] 0.7305888 0.9939966 0.8071463 0.9345250 0.9727079 0.8732217 0.9958395 #>  [4131] 0.9630385 0.9051910 0.9727079 0.8567344 0.9997025 0.9784108 0.9980193 #>  [4138] 0.9153448 0.9434163 0.9842387 0.9785030 0.8677481 0.9975461 0.9630385 #>  [4145] 0.8677481 0.9517481 0.9782340 0.9765766 0.9630385 0.9842387 0.9727079 #>  [4152] 0.9846678 0.9664453 0.9996303 0.9994060 0.9832387 0.9630385 0.9847614 #>  [4159] 0.9390361 0.9784108 0.9797718 0.8894341 0.9812431 0.8786649 0.8677481 #>  [4166] 0.9202932 0.8456708 0.9996303 0.9771967 0.9932328 0.9664453 0.9051910 #>  [4173] 0.9630385 0.9978893 0.9202932 0.8947465 0.9967602 0.9777571 0.9991447 #>  [4180] 0.9766922 1.0009765 0.8677481 0.8071463 0.8732217 0.9994060 0.9806095 #>  [4187] 0.9789710 0.9797718 0.9434163 0.9298917 0.9967602 0.9773638 0.9390361 #>  [4194] 0.9872256 0.9765732 0.9967602 0.9890505 0.9872256 0.9850002 0.8401339 #>  [4201] 0.9997153 0.9987331 0.9839151 1.0046209 0.8346005 0.9830355 0.9051910 #>  [4208] 0.9852361 0.8401339 0.7648848 0.9476566 0.7648848 0.9830554 0.9202932 #>  [4215] 0.9696680 0.9630385 0.9922209 0.9837830 0.8235631 0.9991336 0.9973513 #>  [4222] 0.9994419 0.9696680 0.9765323 0.8512060 0.9153448 0.9051910 0.9829412 #>  [4229] 0.8235631 0.9630385 0.8512060 0.9766267 0.7353054 0.8401339 0.9812431 #>  [4236] 0.9664453 0.8346005 0.7909905 1.0008254 0.9815100 0.9837555 0.8180681 #>  [4243] 0.9696680 0.9869513 0.9791104 0.9768079 0.9841310 0.9764893 0.9848710 #>  [4250] 0.9782340 0.9517481 0.9987863 0.9982020 0.9767140 0.9556816 0.9830624 #>  [4257] 0.9664453 0.9847099 0.8622503 0.7856794 0.7963408 0.8456708 0.8290754 #>  [4264] 0.9780630 0.9997153 0.8512060 1.0008254 0.7804105 0.9939966 0.8786649 #>  [4271] 0.8567344 0.9975461 0.8947465 0.8512060 0.9947371 0.9837555 0.9987863 #>  [4278] 0.9434163 0.9825173 0.9837652 0.9975461 0.9784108 0.8456708 0.9779844 #>  [4285] 0.7400856 0.7909905 0.8401339 0.7700107 0.9973513 0.9765322 0.9991336 #>  [4292] 0.8677481 0.9935744 0.8125945 0.9390361 0.9808202 0.8894341 0.9994419 #>  [4299] 0.9810467 0.9872256 0.8512060 0.8071463 0.8125945 0.9202932 0.7804105 #>  [4306] 0.9810318 0.9869513 0.9801978 0.9892596 0.9153448 0.9765032 0.9832387 #>  [4313] 0.8786649 0.8786649 0.8894341 0.9782328 0.9787953 0.8235631 0.9810318 #>  [4320] 0.9765032 0.9848485 1.0010789 0.7909905 0.8401339 0.8512060 0.9983696 #>  [4327] 0.9907143 0.9298917 0.9935744 0.9801978 0.9594481 0.9847099 0.9982020 #>  [4334] 0.9594481 0.9202932 0.7547929 0.8512060 0.8677481 0.9517481 0.9556816 #>  [4341] 0.9848710 0.9251449 0.9939966 0.9727079 0.9848203 0.9924512 0.8235631 #>  [4348] 0.9830784 0.9820000 0.9782465 0.8071463 0.9924512 0.9594481 0.9961252 #>  [4355] 0.9843502 0.9799787 0.9892596 0.9153448 0.9807495 0.9954485 0.9989365 #>  [4362] 0.9051910 0.7547929 0.8346005 0.9958395 0.9984828 0.9916576 0.9775886 #>  [4369] 0.9765323 0.9517481 0.9991336 0.9556816 0.9765766 0.8567344 0.9845685 #>  [4376] 0.9872256 0.9777571 0.8622503 0.9830784 0.9806095 0.8786649 0.9848710 #>  [4383] 0.9973513 0.9727079 0.7856794 0.9994060 0.9764893 0.9935744 0.9434163 #>  [4390] 0.9961252 0.7804105 1.0016438 0.7909905 0.9935744 0.7598115 0.9851589 #>  [4397] 0.9777571 0.8290754 0.8732217 0.9916576 0.8622503 0.9836675 0.9967614 #>  [4404] 0.9967602 0.9755667 0.9775504 0.9774449 0.8567344 0.9103081 0.9884729 #>  [4411] 0.9794489 0.9769193 0.9051910 0.7598115 0.9785030 0.9798111 0.7598115 #>  [4418] 0.9991336 0.9810467 0.9782340 0.8180681 0.9961252 0.9801874 0.9987331 #>  [4425] 0.9815100 0.9872256 0.9947791 0.9947791 0.8401339 0.9779844 0.9765323 #>  [4432] 0.9825173 0.8567344 0.9803976 0.9000012 0.9975461 0.7547929 0.9764893 #>  [4439] 0.9947371 0.9908574 0.9849821 0.8125945 0.9773638 0.9994060 0.9916576 #>  [4446] 0.9947371 0.9967614 0.7963408 0.9848110 0.9764898 0.9727079 0.9782465 #>  [4453] 0.9994419 0.9982020 0.9787797 0.9935744 0.9947371 0.9476566 0.8732217 #>  [4460] 0.9848110 0.9390361 0.9153448 0.9869513 0.9103081 0.9777571 0.8180681 #>  [4467] 1.0029811 0.9827949 0.8840713 0.9767140 0.8290754 0.9907143 0.9947371 #>  [4474] 0.9822786 0.9770641 0.9298917 0.9755667 0.8786649 0.9973513 0.9939966 #>  [4481] 0.9900562 0.9848710 0.9995975 0.9807495 0.9900967 0.8346005 0.8947465 #>  [4488] 0.9820000 0.8677481 0.9855336 0.7648848 0.9987863 0.9848110 0.9973513 #>  [4495] 0.9556816 0.8947465 0.8677481 0.9767140 0.8732217 0.8894341 0.7498311 #>  [4502] 0.9794489 0.9630385 0.9793652 0.8677481 0.8401339 0.9839963 0.9991447 #>  [4509] 0.8622503 0.9810467 0.9967614 0.7449281 0.7598115 0.9251449 0.9051910 #>  [4516] 0.9869513 0.9986360 0.9390361 0.8894341 0.8456708 0.9787797 0.9975461 #>  [4523] 0.9947791 0.9987863 0.9771967 0.9987863 0.9202932 0.9826748 0.9830784 #>  [4530] 0.9000012 0.9950893 0.9835571 0.9517481 0.8401339 0.9770641 0.8947465 #>  [4537] 0.9958395 0.9848710 0.9810318 0.9345250 0.9884729 0.9768571 0.7353054 #>  [4544] 0.9994419 0.9765322 0.7498311 0.7400856 0.9476566 0.9849821 0.9000012 #>  [4551] 0.9727079 0.9839151 0.9841310 0.9954485 0.9922209 0.9051910 0.7449281 #>  [4558] 0.9434163 0.7400856 0.9877017 0.9826770 0.9771967 0.9958395 0.9852361 #>  [4565] 0.7449281 0.8346005 0.7449281 0.9922209 0.9967614 0.9000012 0.9847614 #>  [4572] 0.9755667 0.9920623 0.9900562 0.9345250 0.9806086 0.8786649 0.9051910 #>  [4579] 0.9153448 0.9434163 0.7856794 0.9153448 0.9829479 0.9765732 0.9892596 #>  [4586] 0.9434163 0.9769556 0.9787953 0.9818704 0.9768571 0.9869513 0.9000012 #>  [4593] 0.9782465 0.9517481 0.7305888 0.9820000 0.9594481 0.9967614 0.9298917 #>  [4600] 0.9810467 0.7305888 0.9994060 0.8840713 0.9987863 0.7909905 0.9556816 #>  [4607] 0.9922209 0.9784108 0.9785030 0.9764898 0.8456708 0.9202932 0.8894341 #>  [4614] 0.9947791 0.8180681 0.9987331 0.9803976 0.9855336 0.9630385 0.8786649 #>  [4621] 0.8290754 0.9825976 0.9834168 0.9961252 0.9298917 0.9922209 0.9000012 #>  [4628] 0.9778981 0.9826748 0.9939966 0.9785030 0.9390361 0.9967602 0.9862272 #>  [4635] 0.9890505 0.9807495 0.9787953 0.9890505 0.8512060 0.9777571 0.7751867 #>  [4642] 0.9975461 0.9434163 0.9877017 0.8180681 0.9787953 0.7963408 0.9476566 #>  [4649] 0.9852361 0.9877017 0.8947465 0.9767140 0.9807495 0.9900562 0.8840713 #>  [4656] 0.9916576 0.9954485 0.9892596 0.9836360 0.9947371 1.0041232 0.9830784 #>  [4663] 0.9390361 0.8180681 0.9782340 0.8567344 0.9842449 0.8840713 0.9390361 #>  [4670] 0.9835571 0.9771822 0.9765766 0.9476566 0.9987331 0.7909905 0.9594481 #>  [4677] 0.9820758 0.9975461 0.9766922 0.9982020 0.9849821 0.9820758 0.9517481 #>  [4684] 0.9862272 0.8840713 0.8622503 0.9995975 0.9847099 0.9664453 0.9851881 #>  [4691] 0.8786649 0.9810318 0.9890505 0.9556816 0.9967602 0.9900562 1.0046401 #>  [4698] 0.8235631 0.9995975 0.7909905 0.9727079 0.9852086 0.8125945 0.9872256 #>  [4705] 0.9975461 0.9967602 0.9967602 0.9892596 0.8732217 0.9785928 0.8346005 #>  [4712] 0.8180681 0.9947791 0.9991447 1.0046382 0.9996303 0.8622503 0.9794489 #>  [4719] 0.9390361 0.9869513 0.8180681 0.8567344 0.7498311 0.9994419 0.9807495 #>  [4726] 0.9924512 0.9556816 0.9103081 0.9764898 0.9830784 0.9775504 0.9476566 #>  [4733] 0.9872256 0.9778981 0.9842387 0.7700107 0.9987331 0.8840713 0.9806086 #>  [4740] 0.9890505 0.8401339 0.9775504 0.9997813 0.9842130 0.9842449 0.9978893 #>  [4747] 0.9947791 0.8071463 0.9842499 0.9973513 0.9782465 1.0031225 0.9153448 #>  [4754] 0.8235631 0.9861882 0.9768079 0.9994060 0.9773093 0.9766267 0.9769193 #>  [4761] 0.9777571 0.9434163 0.8235631 1.0013943 0.9000012 0.7856794 0.9845991 #>  [4768] 0.9833336 0.8401339 0.9862272 0.7700107 0.9833714 0.9806095 0.9907143 #>  [4775] 0.9997025 0.9476566 0.9834420 0.9664453 0.9932328 0.8180681 0.9852361 #>  [4782] 0.8512060 0.9837652 0.9810467 0.9851090 0.9947371 0.9476566 0.7751867 #>  [4789] 0.7909905 0.7909905 0.8456708 0.8180681 0.9920623 0.9991336 0.8180681 #>  [4796] 0.8947465 0.9251449 0.7804105 0.9782328 0.9892596 0.9774449 0.7598115 #>  [4803] 0.9664453 0.9975461 0.9862272 0.9801978 0.9862272 0.9991447 0.8622503 #>  [4810] 0.9907143 0.9997025 0.8732217 0.9851881 0.9771967 0.9884729 0.9782328 #>  [4817] 0.9935744 0.9997025 0.8346005 0.7856794 0.9815100 0.9975461 0.9773638 #>  [4824] 0.8456708 0.9727079 0.9782465 0.9476566 0.9967614 0.9844791 0.9764893 #>  [4831] 0.9390361 0.9785928 0.9932328 0.9995975 0.9390361 0.9982020 0.9922209 #>  [4838] 0.7498311 0.8786649 0.8567344 0.9987331 0.9820000 0.9755667 0.9476566 #>  [4845] 0.9851162 0.9843563 0.9978893 0.8840713 0.8894341 0.9922209 0.8840713 #>  [4852] 0.9787953 0.9832387 0.9801978 0.9987331 0.9434163 0.9824785 0.9787797 #>  [4859] 0.9825173 0.9298917 0.9978089 0.9812431 0.7700107 0.9997050 0.9869513 #>  [4866] 0.9848710 0.9794489 0.9840678 0.8947465 0.9835892 0.9830784 0.9991447 #>  [4873] 0.9727079 0.9202932 0.8290754 0.9862272 0.9935744 0.9839151 0.9842387 #>  [4880] 0.9774449 0.8346005 0.8786649 0.9768079 0.8017272 0.9886946 0.9051910 #>  [4887] 0.8180681 0.9837652 0.8732217 0.9872256 0.7598115 0.9664453 0.8290754 #>  [4894] 0.8947465 0.9984828 0.9836360 0.7700107 0.9842499 0.9815100 0.9594481 #>  [4901] 0.9997025 0.7353054 0.9994419 0.8622503 0.8840713 0.9835571 1.0044814 #>  [4908] 0.9251449 0.9000012 0.9922209 0.9000012 0.9727079 0.8071463 0.9774449 #>  [4915] 0.9820000 0.9768079 0.9916576 0.8125945 0.8290754 0.7700107 0.8567344 #>  [4922] 0.9892596 0.8840713 0.9996303 0.8401339 0.9849821 0.8786649 0.9836360 #>  [4929] 0.9922209 0.9855336 0.9845991 0.9834420 0.8622503 0.9851353 0.9843502 #>  [4936] 0.9766267 0.7498311 0.9850002 0.9818704 0.9991447 0.8125945 0.9727079 #>  [4943] 0.9000012 0.9810467 1.0032879 0.9798111 0.9935744 0.9664453 0.8017272 #>  [4950] 0.9837830 0.9967614 0.9664453 0.9830554 0.8840713 0.9975461 0.9987863 #>  [4957] 0.9978893 0.9780630 0.9696680 0.8947465 0.7648848 0.8840713 0.7804105 #>  [4964] 0.9630385 0.8622503 0.9922209 0.9390361 0.9774449 0.9900562 0.9890505 #>  [4971] 0.8071463 0.9947791 0.9664453 0.8894341 0.9820758 0.9782465 0.9798111 #>  [4978] 0.9556816 0.9765732 0.9202932 0.9935744 0.8840713 0.9834168 0.9852159 #>  [4985] 0.9991336 1.0037431 0.9835535 0.9997025 0.9803976 0.9954485 0.9852361 #>  [4992] 0.9814536 0.9852361 0.9924512 0.9997025 0.9872256 0.7700107 0.9907143 #>  [4999] 0.9799787 0.9869513 0.9996303 0.9842387 0.9727079 0.9983696 0.9973513 #>  [5006] 0.9765732 0.9900562 0.9696680 0.9997025 0.9849019 0.9842449 0.9845991 #>  [5013] 0.9787953 0.9798111 1.0008670 0.9844791 0.9922209 0.9836360 0.9517481 #>  [5020] 0.9773638 0.9775886 0.9769556 0.9849284 0.8401339 0.9877017 0.9476566 #>  [5027] 0.9907143 0.8235631 0.9594481 0.9664453 0.9862272 0.9812431 0.8786649 #>  [5034] 0.9939966 0.9991447 0.9967602 0.9986322 0.9877017 0.9434163 0.9517481 #>  [5041] 0.8290754 0.9793652 0.9997025 0.8456708 0.9251449 0.9765322 0.9922209 #>  [5048] 0.9727079 0.9892596 0.9434163 0.9869513 0.8512060 0.9202932 0.8456708 #>  [5055] 0.9153448 0.9954485 0.8456708 0.9994060 0.7400856 0.9801874 0.9782465 #>  [5062] 0.9780630 0.9996303 0.9791663 0.9994060 0.8401339 0.9820000 0.9973513 #>  [5069] 0.9900562 0.7804105 0.9900562 0.8071463 0.9000012 0.9820758 0.8180681 #>  [5076] 1.0008690 0.7498311 0.9765732 0.9517481 0.9782465 1.0010213 0.7856794 #>  [5083] 0.9975461 0.9862272 0.9997153 0.9771967 0.9775886 0.9872256 0.9696680 #>  [5090] 0.9975461 0.8125945 0.8456708 0.9820000 0.9975461 0.9664453 0.8732217 #>  [5097] 0.9845685 0.9777398 0.7353054 0.9815100 0.9298917 0.8125945 0.9298917 #>  [5104] 0.8017272 0.8180681 0.9779844 0.9991336 0.9766267 0.9835535 0.9000012 #>  [5111] 0.8512060 0.9837555 0.9202932 0.9765732 0.9993529 0.9476566 0.9829479 #>  [5118] 0.9153448 0.9000012 0.9755667 0.9843502 0.9961252 0.9103081 0.9958395 #>  [5125] 0.9767691 0.9958395 0.9755667 0.9787953 0.9630385 0.9842449 0.9973513 #>  [5132] 0.9769556 0.9766371 0.9978893 0.9807495 0.9768571 0.9967602 0.8567344 #>  [5139] 0.9770641 0.9947791 0.9594481 0.9997025 0.9961252 0.9630385 0.9842387 #>  [5146] 0.9773638 0.9825776 0.9983696 0.9848485 0.9298917 0.9994419 0.9766922 #>  [5153] 0.7909905 0.9787953 0.9978893 0.9778981 0.9848710 0.9825720 0.9770488 #>  [5160] 0.9961252 0.9765323 0.9766922 0.9791104 0.9908574 0.9935744 0.9816628 #>  [5167] 0.9476566 0.9827312 0.9983696 0.9775504 0.9764898 0.9973513 0.8290754 #>  [5174] 0.9696680 0.9298917 0.9890505 0.9845991 0.9830784 0.9978893 0.9978893 #>  [5181] 0.9103081 0.9983696 0.7449281 0.9770488 0.9852361 0.9825173 0.9779844 #>  [5188] 0.9771967 0.9825173 0.9825173 0.9997025 0.8622503 0.9932328 0.9793652 #>  [5195] 0.9996303 0.9892596 0.9782328 0.9803976 0.9780630 0.9434163 0.9995975 #>  [5202] 0.9907143 0.9795671 0.8732217 0.9773093 0.9051910 0.9769556 1.0031225 #>  [5209] 0.9987331 0.7751867 0.8622503 0.9851881 0.9869513 0.8235631 0.7648848 #>  [5216] 0.9000012 0.9975470 0.9798111 0.9755667 1.0006323 0.9916576 0.9434163 #>  [5223] 0.9103081 0.9556816 0.9991447 0.8071463 0.9782328 0.9839151 0.7804105 #>  [5230] 0.9791663 0.8567344 0.7804105 0.9727079 0.9765732 0.9826770 0.9851548 #>  [5237] 0.9829412 0.9975461 0.9830554 0.9755667 0.9994060 0.9825976 0.9828674 #>  [5244] 0.9818704 0.9345250 0.9630385 0.9630385 0.8732217 0.8947465 0.9851589 #>  [5251] 0.9854689 0.9768079 0.9852159 0.7751867 0.9779844 0.9594481 0.9845685 #>  [5258] 0.9961252 0.8947465 0.9434163 0.8346005 0.9995975 0.9954485 0.9390361 #>  [5265] 0.9830624 0.9967602 0.9517481 0.9434163 0.8456708 0.9830554 0.9798111 #>  [5272] 0.9935744 0.9785030 0.9828673 0.9837555 0.9153448 0.8346005 0.9978893 #>  [5279] 0.9798111 0.8235631 0.9815100 0.9836675 0.9773638 0.9839151 0.9991447 #>  [5286] 0.9973513 0.9770488 0.9947791 0.9851903 0.9476566 0.9830784 0.9997153 #>  [5293] 0.9476566 1.0010601 0.7909905 0.9773093 0.9907143 0.9815100 0.8732217 #>  [5300] 0.7648848 0.8677481 0.9476566 0.7751867 0.9051910 0.9298917 0.9770641 #>  [5307] 0.7547929 0.8401339 0.9991447 0.8017272 0.9987863 0.8180681 0.9766267 #>  [5314] 0.9779844 0.7804105 0.9345250 0.8677481 0.9727079 0.9476566 0.9939966 #>  [5321] 0.9812431 0.9345250 0.8401339 0.9630385 0.9997025 0.9773638 0.9958395 #>  [5328] 0.8947465 0.8567344 0.9793652 0.8290754 0.9872256 0.7700107 0.9983696 #>  [5335] 0.8401339 0.9978893 0.7353054 0.8017272 0.9153448 0.8567344 0.9798111 #>  [5342] 0.9755667 0.8894341 0.9807495 0.7449281 0.8017272 0.9939966 0.8894341 #>  [5349] 0.9298917 0.9434163 0.9994060 0.9872256 0.9766371 0.9476566 0.9770641 #>  [5356] 0.9807495 0.7498311 0.8401339 0.7353054 0.8840713 0.7751867 0.9664453 #>  [5363] 0.7547929 0.9840156 0.8456708 0.9892596 0.9765732 0.9780630 0.9153448 #>  [5370] 0.7400856 0.9994419 0.8290754 0.8017272 0.8125945 0.9830784 0.9807495 #>  [5377] 0.9773638 0.9947371 0.7700107 0.9982020 0.9807495 0.9869513 0.8732217 #>  [5384] 0.9932328 0.9877017 0.9755667 0.7498311 0.8947465 0.9556816 0.8017272 #>  [5391] 0.9947791 0.9476566 0.9517481 0.7305888 0.9815100 0.9103081 0.8180681 #>  [5398] 0.9991336 0.8732217 0.7305888 0.9869513 0.8071463 0.9877017 0.9768079 #>  [5405] 0.7353054 0.9982020 0.7700107 0.9890505 0.8456708 0.8401339 0.9051910 #>  [5412] 0.9932328 0.7751867 0.9630385 0.9476566 0.9847614 0.7498311 0.8677481 #>  [5419] 0.7449281 0.8071463 0.9810318 0.7400856 0.8346005 0.9782465 0.9862272 #>  [5426] 0.9872256 0.9967614 0.7498311 0.8290754 0.7498311 0.7498311 0.9807495 #>  [5433] 0.9630385 0.9298917 0.7547929 0.9298917 0.8840713 0.9808202 0.9967614 #>  [5440] 0.9815100 0.9839151 0.9765322 0.9922209 0.9345250 0.7598115 0.7804105 #>  [5447] 0.7400856 0.9935744 0.9803976 0.9798111 0.9958395 0.9251449 0.9838993 #>  [5454] 0.9932328 0.9799787 0.8512060 0.8456708 0.9771822 0.9935744 0.9994419 #>  [5461] 0.9835892 0.8125945 0.8456708 0.7498311 0.9767140 0.9594481 0.7547929 #>  [5468] 0.9664453 0.9848203 0.9517481 0.8786649 0.7449281 0.7804105 0.9924512 #>  [5475] 0.9844791 0.9994419 0.9775886 0.9916576 0.7804105 0.9892596 0.9789710 #>  [5482] 0.9594481 0.9202932 0.9978893 0.9851353 0.8732217 0.9103081 0.9298917 #>  [5489] 0.8567344 0.8346005 0.9836360 0.8401339 0.9769193 0.8677481 0.9390361 #>  [5496] 0.9787953 0.9051910 0.9806086 1.0011784 0.9830784 0.8677481 0.8180681 #>  [5503] 0.9855336 1.0043969 0.7700107 0.9594481 0.9848710 0.9755667 0.9806095 #>  [5510] 0.9848710 0.9390361 0.9153448 0.8512060 0.9982020 0.8071463 0.7804105 #>  [5517] 0.9594481 0.9153448 0.9826748 0.7498311 0.8071463 0.9978893 0.9051910 #>  [5524] 0.9594481 0.9824785 0.9345250 0.9794489 0.9947791 0.9765732 0.9630385 #>  [5531] 0.9907143 0.7700107 0.9997153 1.0041232 0.9780630 0.9954485 0.9907143 #>  [5538] 0.9836360 0.7804105 0.8840713 0.9777398 0.8894341 0.9789710 0.8017272 #>  [5545] 0.9967602 0.9996303 0.9594481 0.8840713 0.9051910 0.9815100 0.8622503 #>  [5552] 0.9844644 0.9991336 0.8290754 0.9755667 0.9994060 0.8840713 0.7449281 #>  [5559] 0.9947791 0.9476566 0.9153448 0.9517481 0.9696680 0.9630385 0.8567344 #>  [5566] 0.8677481 0.8622503 0.9764898 0.9996303 0.9855336 0.9987331 0.9981811 #>  [5573] 0.8947465 0.9824785 0.9630385 0.9345250 0.9835892 0.9815100 0.9791104 #>  [5580] 0.9815100 0.9849821 0.9000012 0.8235631 0.9812431 0.7751867 0.9773093 #>  [5587] 0.9830784 0.8894341 0.9908574 0.9251449 0.9855336 0.8456708 0.9996303 #>  [5594] 0.9958395 0.9789710 0.9696680 0.9771967 0.9982020 0.9939966 1.0032356 #>  [5601] 0.9390361 0.7547929 0.7804105 0.9831296 0.9825173 0.7856794 0.9954485 #>  [5608] 0.9298917 0.9517481 0.8894341 0.9298917 0.8346005 0.9843563 0.9830624 #>  [5615] 0.8180681 0.9954485 0.9997153 0.9967602 0.9978893 0.7648848 0.9826005 #>  [5622] 0.9764898 0.7598115 0.9890505 0.9755667 0.9991447 0.7751867 0.9153448 #>  [5629] 0.9991336 0.9556816 0.9994419 0.8346005 0.9967614 0.9994419 0.8512060 #>  [5636] 0.7700107 0.9997025 0.9727079 0.9935744 0.9827519 0.8947465 0.9997153 #>  [5643] 0.9517481 0.8290754 0.9978893 0.9791104 0.7700107 0.9849284 0.9862272 #>  [5650] 0.9975461 0.9947791 0.7804105 0.9556816 1.0282042 0.9298917 0.9973513 #>  [5657] 0.9884729 0.9768571 0.9727079 0.9877017 0.9890505 0.9765323 0.8125945 #>  [5664] 0.9630385 0.9051910 0.9664453 0.9755667 0.8622503 0.9787953 0.9807495 #>  [5671] 0.8512060 0.7449281 0.9862272 0.7700107 0.9556816 0.9801978 0.9947791 #>  [5678] 0.8947465 0.9390361 0.9390361 0.9855336 0.9997025 0.8786649 0.9848710 #>  [5685] 0.9775504 0.8622503 0.9784108 0.9820000 0.9973513 0.8235631 0.8180681 #>  [5692] 0.9298917 0.8290754 0.9967614 0.9766922 0.9847099 0.9434163 0.9153448 #>  [5699] 0.9801978 0.9556816 0.9842387 0.9765032 0.9434163 0.9696680 0.9782340 #>  [5706] 0.7353054 0.9978076 1.0034469 0.9795671 0.9832387 0.9103081 0.9251449 #>  [5713] 0.9807495 0.8840713 0.9820000 0.8071463 0.9967602 0.7547929 0.8732217 #>  [5720] 0.7598115 0.9298917 0.8567344 0.9839151 0.9997153 0.9997025 0.9973513 #>  [5727] 0.9766267 0.7498311 0.9556816 0.9777571 0.8786649 0.9298917 0.9900562 #>  [5734] 0.9727079 0.8017272 0.9835892 0.8732217 0.9434163 0.9202932 0.9779844 #>  [5741] 0.9779844 0.9916576 0.9807495 0.7856794 0.9556816 0.9877017 0.9103081 #>  [5748] 0.9517481 0.9556816 0.9987331 0.9982020 0.8071463 0.9103081 0.8290754 #>  [5755] 0.9696680 0.9755667 0.9390361 0.8017272 0.9837555 0.9828674 0.9845248 #>  [5762] 0.9782465 0.9997153 0.9935744 0.9785030 0.8401339 0.9831296 0.7804105 #>  [5769] 0.9851548 0.9832387 0.9831296 0.9103081 0.9910690 0.9822786 0.9830784 #>  [5776] 0.9202932 0.9390361 0.9251449 0.7909905 0.9922209 0.9982020 0.9892596 #>  [5783] 0.8180681 0.7751867 0.8567344 0.9907143 0.9390361 0.9815100 0.7598115 #>  [5790] 0.9987863 0.7449281 0.7700107 0.8567344 0.9767140 0.7648848 0.9789710 #>  [5797] 0.9850513 0.9820000 0.9390361 0.9818704 0.8894341 0.9935744 0.9594481 #>  [5804] 0.9907143 0.9298917 0.7598115 0.9997153 0.9848203 0.9773638 0.9877017 #>  [5811] 0.8947465 0.7547929 0.9852361 0.9996303 0.8894341 0.9000012 0.9836360 #>  [5818] 0.9696680 0.9987331 0.9837830 0.9766371 0.8894341 0.9994060 0.9517481 #>  [5825] 0.9795671 0.9852086 0.8456708 0.9476566 0.9830624 0.9922209 0.9982020 #>  [5832] 0.9202932 0.9434163 0.9925644 0.9767691 0.9907143 0.8125945 0.8456708 #>  [5839] 0.9997025 0.8947465 0.9768571 0.9916576 0.8622503 0.8125945 0.8840713 #>  [5846] 1.0003433 0.9806095 0.9869513 0.7400856 0.8180681 0.9434163 0.9826332 #>  [5853] 0.9834168 0.8290754 0.7700107 0.8125945 1.0045952 0.9476566 0.9872256 #>  [5860] 0.9848710 0.7547929 0.8512060 0.7353054 0.9345250 0.8290754 0.9807495 #>  [5867] 0.9994060 0.8125945 0.8786649 0.9594481 1.0045952 0.9298917 0.9852086 #>  [5874] 0.8401339 0.9954485 0.9848203 0.9975461 0.9958395 0.9908574 0.9794489 #>  [5881] 0.8456708 0.8567344 0.9814536 0.8290754 0.8512060 0.9803976 0.8125945 #>  [5888] 0.9784108 0.9967602 0.9785928 0.9954485 0.8786649 0.7598115 0.8456708 #>  [5895] 0.7353054 0.9664453 0.9907143 0.9839151 0.9832387 0.9345250 0.8894341 #>  [5902] 0.9975461 0.9908574 0.9696680 0.9784108 0.7909905 0.9994419 0.9755667 #>  [5909] 0.9939966 0.9051910 0.9983696 0.9848485 0.9345250 0.7449281 0.9924512 #>  [5916] 0.8456708 0.8125945 0.7963408 0.9916576 0.9978893 0.9890505 0.8235631 #>  [5923] 0.9907143 0.9890505 0.9727079 0.9801978 0.9664453 0.9939966 0.9892596 #>  [5930] 0.9251449 0.7498311 0.9975461 0.9770488 0.9852361 0.7305888 0.7856794 #>  [5937] 0.8732217 0.9997153 0.7353054 0.9251449 0.9153448 0.7598115 0.9556816 #>  [5944] 0.7498311 0.9251449 0.8677481 0.9997025 0.9769193 0.9103081 0.9850513 #>  [5951] 0.7963408 0.9390361 0.9947371 0.8290754 0.9814536 0.9782328 0.9890505 #>  [5958] 0.7648848 0.9851090 0.7547929 0.7498311 0.8677481 0.8346005 0.9852361 #>  [5965] 0.9787797 0.9848710 0.7353054 0.7305888 0.7804105 0.9890505 0.9825976 #>  [5972] 0.9153448 0.9994060 0.9982020 0.8840713 0.9766267 1.0027043 0.9000012 #>  [5979] 0.9664453 0.9771967 0.7498311 0.9390361 0.7751867 0.9727079 0.9947371 #>  [5986] 1.0014012 0.7305888 0.8456708 0.9947371 0.8947465 0.9838993 0.9769193 #>  [5993] 0.9664453 0.8732217 0.9345250 0.9664453 0.7909905 0.9594481 0.9982020 #>  [6000] 0.9755667 0.8125945 0.8894341 0.9251449 0.9777398 0.8290754 0.9556816 #>  [6007] 0.9767140 0.9000012 0.9845685 0.8622503 0.9594481 0.9961252 0.9847614 #>  [6014] 0.9997153 0.7751867 0.7547929 0.7598115 0.8567344 0.8840713 0.9862272 #>  [6021] 0.9153448 0.9556816 0.7648848 0.9434163 0.9000012 0.9806095 0.9975461 #>  [6028] 0.7547929 0.7547929 0.9251449 0.8346005 0.9916576 0.9766371 0.9298917 #>  [6035] 0.8346005 0.7598115 0.9051910 0.9837555 0.8125945 0.9997153 0.9766922 #>  [6042] 0.7353054 0.9967602 0.8840713 0.9153448 0.9696680 0.9820000 0.9830784 #>  [6049] 0.7804105 0.7305888 0.9556816 0.9998103 0.9836675 0.7751867 0.8622503 #>  [6056] 0.9801978 0.9298917 0.8512060 0.9251449 0.9872256 0.9932328 0.9842387 #>  [6063] 0.9892596 0.8235631 0.9932328 0.9967602 0.9907143 0.9202932 0.8456708 #>  [6070] 0.9390361 0.7751867 0.9849019 0.8071463 0.9997153 0.9954485 0.9826332 #>  [6077] 0.7909905 0.9991447 0.9799787 1.0002283 0.9153448 0.9345250 0.9907143 #>  [6084] 0.7498311 0.9997153 0.9770488 0.9869513 0.7751867 0.9803976 0.9830784 #>  [6091] 0.7856794 0.9825173 0.7547929 0.9832387 0.8290754 0.8840713 0.9865720 #>  [6098] 0.9785928 0.7963408 1.0001452 0.9825173 0.9991377 0.9872256 0.9835535 #>  [6105] 1.0032245 0.7751867 0.9994419 0.8947465 0.9767140 0.9995975 0.9994060 #>  [6112] 0.9807495 0.9594481 0.9907143 0.8401339 0.9947791 0.9947791 0.9987863 #>  [6119] 0.7598115 0.7751867 0.9791104 0.9787953 0.8456708 0.9765043 0.9907143 #>  [6126] 0.9890505 0.9825799 0.9884729 0.7648848 0.8947465 0.8180681 0.9769556 #>  [6133] 0.9298917 0.8071463 0.9773093 0.9872256 0.9824785 0.9251449 0.7400856 #>  [6140] 0.9767140 0.9798111 0.9434163 0.8290754 0.9987863 0.8346005 0.9843563 #>  [6147] 0.8947465 0.9765732 0.9390361 0.9765322 0.9782465 0.7353054 0.9987331 #>  [6154] 0.8567344 0.9794489 0.9828673 0.9982020 0.9932328 0.9922209 0.7909905 #>  [6161] 0.9298917 0.9784108 0.9727079 0.9828673 0.9696680 0.9991336 0.9920623 #>  [6168] 0.9995975 0.9103081 0.9766371 0.9852361 0.9869513 0.8947465 0.7547929 #>  [6175] 0.7400856 0.9773638 0.9826839 0.9939966 0.8786649 0.8786649 0.9298917 #>  [6182] 0.8346005 0.8786649 0.9987331 0.9815100 0.9251449 0.7700107 0.9872256 #>  [6189] 0.9973513 0.9983696 0.9822786 0.7449281 0.9947791 0.9842387 0.9967602 #>  [6196] 0.8894341 0.9987331 0.8947465 0.9961252 0.8290754 0.8017272 0.7449281 #>  [6203] 0.9798111 0.9764898 0.9994419 0.9345250 1.0042934 0.9825173 0.9945857 #>  [6210] 0.7498311 0.9390361 0.9908574 0.9908574 0.8732217 0.9892596 0.9884729 #>  [6217] 0.9850631 0.8401339 0.9815100 0.9773638 0.8947465 0.9877017 0.9872256 #>  [6224] 0.8622503 0.8125945 0.9846678 0.8567344 0.8622503 0.9908574 0.9767691 #>  [6231] 0.9835535 0.9775886 0.9556816 0.9852159 0.9764893 0.9986360 0.8017272 #>  [6238] 0.9770488 0.7400856 0.7353054 0.8894341 0.8894341 0.9997153 0.7856794 #>  [6245] 0.9994060 0.9390361 0.9924512 0.9987331 0.9815100 0.9768079 0.9812431 #>  [6252] 0.9765032 0.9476566 0.9803976 0.9967602 0.9995975 0.7305888 0.9103081 #>  [6259] 0.8235631 0.9995975 0.9696680 0.9768079 0.9765043 0.9830784 0.9770641 #>  [6266] 0.9994060 0.7700107 0.8456708 0.9793652 0.9476566 0.7804105 0.8456708 #>  [6273] 0.8894341 0.9836360 0.9770641 0.9973513 0.8290754 0.9434163 0.9997153 #>  [6280] 0.8947465 0.9828673 0.9830784 0.9807495 0.9987331 0.9696680 0.7648848 #>  [6287] 0.8732217 0.7751867 0.9839963 0.9932328 0.8732217 0.9794489 0.7353054 #>  [6294] 0.9987863 0.9877017 0.9153448 0.9517481 0.9764893 0.9997025 0.9630385 #>  [6301] 0.9785030 0.9798111 0.9696680 0.9345250 0.7498311 0.8840713 0.7305888 #>  [6308] 0.9773638 0.9765732 0.7498311 0.9922209 0.8512060 0.9768079 0.9851548 #>  [6315] 0.9766267 0.8290754 0.9998103 0.9434163 0.8567344 0.9791663 0.7547929 #>  [6322] 0.9997025 0.8840713 0.9517481 0.8456708 1.0010601 0.8401339 0.7547929 #>  [6329] 0.7449281 0.9769556 0.8290754 0.8567344 0.7648848 0.8947465 0.7909905 #>  [6336] 0.8567344 0.9806095 0.9981133 0.9768079 0.9298917 0.9947791 0.9925644 #>  [6343] 0.9996596 0.8512060 0.9000012 0.9051910 0.9517481 0.8125945 0.9298917 #>  [6350] 0.9103081 0.9815100 0.9803976 0.8622503 0.9842387 0.9862272 0.8290754 #>  [6357] 0.7547929 0.9390361 0.9556816 0.9996303 0.8786649 0.8017272 0.8677481 #>  [6364] 0.8677481 0.7305888 0.9939966 0.9935744 0.8235631 0.9051910 0.9830784 #>  [6371] 0.9982502 0.9907143 0.8071463 0.9852361 0.9814536 0.9958395 0.8017272 #>  [6378] 0.7856794 0.9768571 0.9434163 0.9991336 0.8071463 0.9755667 0.7598115 #>  [6385] 0.8786649 0.9831296 0.9202932 0.9916576 0.9773638 0.9345250 0.7400856 #>  [6392] 0.7804105 0.8622503 0.9916576 0.9939966 0.9594481 0.9884729 0.9771822 #>  [6399] 0.9922209 0.7700107 0.8401339 0.9476566 0.7700107 0.9755667 0.9782465 #>  [6406] 0.9983696 0.9801978 0.9851589 0.9298917 0.8346005 0.9517481 0.9848485 #>  [6413] 0.9890505 0.9777571 0.9987863 0.9390361 0.8125945 0.8071463 0.9390361 #>  [6420] 0.9975461 0.9836360 0.8071463 0.9785030 0.9862272 0.9908574 0.9991447 #>  [6427] 0.9820000 0.9768571 0.8401339 0.9825976 0.9799787 0.8567344 0.9826748 #>  [6434] 0.9830784 0.9848110 0.9769556 0.9051910 0.7353054 0.9806086 0.8290754 #>  [6441] 0.8235631 0.9877017 0.7598115 0.7449281 0.9556816 0.9773638 0.7547929 #>  [6448] 0.9975461 0.8732217 0.9767691 0.9810467 0.9812431 0.7353054 0.7498311 #>  [6455] 0.9830784 0.8947465 0.9830624 0.9847614 0.9803976 0.9517481 0.9830784 #>  [6462] 0.9907143 0.9765043 0.9954485 0.9932328 0.9594481 0.8622503 0.9991336 #>  [6469] 0.9878087 0.8840713 0.9916576 0.9766371 0.9298917 0.8401339 0.9890505 #>  [6476] 0.9922209 0.9922209 0.8071463 0.9922209 0.9840678 0.9769556 0.9872256 #>  [6483] 0.7909905 0.9782465 0.9836360 0.9848710 0.9834168 0.9807495 0.9782328 #>  [6490] 0.9961252 0.9727079 0.9664453 0.9872256 0.9939966 1.0043969 0.7305888 #>  [6497] 0.9877017 1.0004156 0.9785928 0.9987331 0.9795671 0.9766371 0.9848710 #>  [6504] 0.9849019 0.9852086 0.9755667 0.9994419 0.7751867 0.9782465 0.9476566 #>  [6511] 0.9922209 0.9765732 0.9782465 0.9960875 0.9827519 0.9765032 0.9922209 #>  [6518] 0.9830624 0.9849284 0.9755667 0.9798111 0.7804105 0.9153448 0.7498311 #>  [6525] 0.9848710 0.9842387 0.8346005 0.9791104 0.9983696 1.0020877 0.9000012 #>  [6532] 0.9908574 0.9922209 0.9773093 0.9997153 0.8567344 0.8346005 0.9103081 #>  [6539] 0.8947465 0.9797718 0.9845991 0.8840713 0.9807495 0.9768079 0.9771967 #>  [6546] 0.8456708 0.9831296 0.9825173 0.8947465 0.7700107 0.9696680 0.9765043 #>  [6553] 0.9830784 0.8894341 0.7400856 0.8290754 0.9103081 0.8947465 0.9810467 #>  [6560] 0.8235631 0.9825976 0.9840156 0.9994419 0.9476566 0.7963408 0.8125945 #>  [6567] 0.9767140 0.9103081 0.9908574 0.8677481 0.9994419 1.0156733 0.8947465 #>  [6574] 0.9815100 0.9000012 0.7751867 0.9852361 0.7353054 0.9251449 0.8512060 #>  [6581] 0.9839151 0.9967614 0.8512060 0.9810318 0.7856794 0.9755667 0.7909905 #>  [6588] 0.9791663 0.9664453 0.8017272 0.8894341 0.9995503 0.9051910 0.9947371 #>  [6595] 0.9766371 0.9594481 0.9950893 0.9594481 0.9594481 0.8346005 0.8456708 #>  [6602] 0.9814536 0.7856794 0.9765732 0.9830784 0.8677481 0.9842387 0.9820000 #>  [6609] 0.9000012 0.9345250 0.9993794 0.8622503 0.9764893 0.9812431 0.9153448 #>  [6616] 0.9843563 0.9434163 0.9773093 0.9556816 0.9890505 0.9852086 0.9825776 #>  [6623] 0.9103081 0.9820000 0.8567344 0.9825776 0.7909905 0.9930687 0.8017272 #>  [6630] 0.9767691 0.9801978 0.9983696 0.9978893 0.9153448 0.7909905 0.9924512 #>  [6637] 0.9755667 0.9103081 1.0013943 0.9922209 0.9830554 0.8180681 0.8456708 #>  [6644] 0.9782465 0.7648848 0.9954485 0.9251449 0.8401339 0.8456708 0.8125945 #>  [6651] 0.9991447 0.9958395 0.9848710 0.8180681 1.0024092 0.9795671 0.9973513 #>  [6658] 0.9765032 0.9947791 0.9997153 0.9727079 0.9955903 0.7648848 0.9803976 #>  [6665] 0.8512060 0.9990964 0.9801978 0.9476566 0.9696680 0.9795671 0.9851548 #>  [6672] 0.9983696 0.8677481 0.9251449 0.8512060 0.8235631 0.9630385 0.9000012 #>  [6679] 0.9997153 0.9890505 0.9765032 0.9476566 0.9794489 0.9766371 0.9769193 #>  [6686] 0.9202932 0.9807495 0.9862272 0.9852086 0.9996303 0.9251449 0.8401339 #>  [6693] 0.9476566 0.9832387 0.8346005 0.9434163 0.9872256 0.9845685 0.9973513 #>  [6700] 0.9991447 0.9884729 0.9978477 0.9991336 0.9782465 0.8346005 0.9777398 #>  [6707] 0.9844644 0.9825173 0.9884729 0.8732217 0.9787953 1.0043235 0.9806095 #>  [6714] 0.9848110 0.7648848 0.9727079 0.8677481 0.9770641 0.9844791 0.7909905 #>  [6721] 0.7963408 0.9345250 0.9769556 0.9594481 0.9807495 0.8622503 0.8894341 #>  [6728] 0.9696680 0.9806086 0.8071463 0.9830784 0.9000012 0.8235631 1.0036754 #>  [6735] 0.8071463 0.9251449 0.9932328 0.8401339 0.9806095 0.9476566 0.9755667 #>  [6742] 0.9766267 0.7400856 0.9755667 0.9777571 0.9967614 0.9765032 0.9696680 #>  [6749] 0.9434163 0.9782328 0.9202932 0.8290754 0.9664453 0.9812431 0.9816628 #>  [6756] 0.8622503 0.9967602 0.9766922 0.9939966 0.8017272 0.8017272 0.9814536 #>  [6763] 0.9830554 0.8180681 0.9765766 0.7751867 0.9984332 0.9852361 0.8401339 #>  [6770] 0.9961252 0.9996303 0.9839151 0.9782465 0.9830784 0.9820000 0.9202932 #>  [6777] 0.9935744 0.9844791 0.9872256 0.9727079 0.8622503 0.9797718 0.9345250 #>  [6784] 0.8401339 0.9251449 0.9994060 0.9850631 0.7804105 0.9967602 0.9787797 #>  [6791] 0.7700107 0.9947791 0.9630385 0.9767140 0.8947465 1.0002283 0.9978893 #>  [6798] 0.9907143 0.9773638 0.9830643 0.9877017 0.9900562 0.8947465 0.9798111 #>  [6805] 0.9900562 0.8947465 0.8567344 0.9767140 0.9967614 0.9908574 0.9900562 #>  [6812] 0.9991447 0.9994419 0.9787797 0.8622503 0.9767691 0.9202932 0.8456708 #>  [6819] 0.9961252 0.8290754 0.9995975 0.7751867 0.9922209 0.9765322 0.9765043 #>  [6826] 0.9832075 0.9869513 0.9954485 0.9782465 0.9767691 0.8235631 0.9848110 #>  [6833] 0.9771822 0.7751867 0.9947371 0.9807495 0.9997153 0.9978893 0.9103081 #>  [6840] 0.9991336 0.9810467 0.9994060 0.9973513 0.7305888 0.9958395 0.8180681 #>  [6847] 0.9845991 0.8180681 0.9727079 0.9975461 0.9782465 0.9935744 0.9782465 #>  [6854] 0.9826748 0.9851162 0.9771822 0.9825173 0.9298917 0.9842387 0.9556816 #>  [6861] 0.9987863 0.9908574 0.8786649 0.7909905 0.8840713 0.8125945 0.9782328 #>  [6868] 0.9835535 0.9202932 0.9476566 0.9900562 0.9958395 0.9782328 0.9807495 #>  [6875] 0.9872256 0.9787953 0.8290754 0.9298917 0.8456708 0.9932328 0.9988681 #>  [6882] 0.9991336 0.8456708 0.9767140 0.7909905 0.9818704 0.9997025 0.9916576 #>  [6889] 0.9987331 0.9051910 0.8840713 0.9664453 0.9556816 0.9664453 0.9755667 #>  [6896] 0.7856794 0.9954485 0.9298917 0.9810467 0.9517481 0.9801978 0.9664453 #>  [6903] 0.9836360 0.9771967 0.9932328 1.0022211 0.9766267 0.9922209 0.9830624 #>  [6910] 0.7963408 0.8894341 0.9939966 0.7804105 0.9791104 0.9556816 0.9103081 #>  [6917] 0.9907143 0.9978893 0.9987863 0.8512060 0.8840713 0.9825720 0.9851090 #>  [6924] 0.8947465 0.9801874 0.9978935 0.9935744 0.8346005 0.9830784 0.9806086 #>  [6931] 0.9900562 0.9890505 0.8017272 0.8235631 0.9801874 0.9795671 0.9825173 #>  [6938] 0.9828673 0.8622503 0.9994393 0.9872256 0.9994060 0.8677481 0.7963408 #>  [6945] 0.9807495 0.8071463 0.9892596 0.9251449 0.9793652 0.9872256 0.9851903 #>  [6952] 0.9844644 0.9594481 0.9777398 0.9922209 0.9778981 0.9991336 0.8071463 #>  [6959] 0.9775504 0.7498311 0.9983696 0.9835892 1.0022211 0.9877017 0.9765032 #>  [6966] 0.9830784 0.9764898 0.8401339 1.0006163 0.9810318 0.9696680 0.9807495 #>  [6973] 0.9251449 0.9820000 0.9843563 0.9696680 0.9476566 0.9997153 0.9987331 #>  [6980] 0.9556816 0.9939966 0.9769193 0.9869513 0.9872256 0.9991336 0.8947465 #>  [6987] 0.8512060 0.8456708 0.8567344 0.8947465 0.9999409 0.9975461 0.9764893 #>  [6994] 0.9987331 0.9836360 0.9791104 1.0038617 0.7963408 0.9892596 0.9892596 #>  [7001] 0.9767691 0.9839151 0.9994060 0.9996303 0.8456708 0.7909905 0.9967614 #>  [7008] 0.9103081 0.9839151 0.9990818 0.9153448 0.9854689 0.8786649 0.9594481 #>  [7015] 0.9764898 0.9983696 1.0005779 1.0032356 0.9947791 0.9997680 0.8947465 #>  [7022] 0.8894341 0.9973513 0.9994060 0.9848710 0.9987331 0.9872256 0.9932328 #>  [7029] 0.9836360 0.9884729 0.9851090 0.8677481 0.9000012 0.9777398 0.9997153 #>  [7036] 0.9476566 0.9924512 0.9961252 0.9862272 0.9782340 0.9784108 0.8840713 #>  [7043] 0.9884729 0.8732217 0.9987331 0.7909905 0.9997153 0.9766371 0.9982020 #>  [7050] 0.9908574 0.7804105 0.9782328 0.9051910 0.8786649 0.9810318 0.8346005 #>  [7057] 0.9861882 0.9843502 0.8947465 0.9890505 0.9869513 0.9826748 1.0003009 #>  [7064] 0.9476566 0.9517481 0.9890505 0.9807495 0.9630385 0.9390361 0.9890505 #>  [7071] 0.9773638 0.9696680 0.9153448 0.9782465 0.9769556 0.9851162 0.9960875 #>  [7078] 0.9947371 0.9862272 0.9982020 0.9771822 0.9982020 0.7547929 0.8456708 #>  [7085] 0.8622503 0.7353054 0.9345250 0.8235631 0.8180681 0.9845991 0.8512060 #>  [7092] 0.9989076 0.8622503 0.9973513 0.9961252 0.8732217 0.9900562 0.9794489 #>  [7099] 0.9775886 0.9390361 0.8947465 0.9852361 0.9908574 1.0043969 0.9822786 #>  [7106] 0.8125945 1.0008254 0.9840678 0.9852361 0.9997025 0.9939966 0.9774449 #>  [7113] 0.9770488 0.8125945 0.8567344 0.9907143 0.8125945 0.9774449 0.9878087 #>  [7120] 0.9807495 0.8894341 0.9994419 0.9939966 0.9967614 0.9916576 0.9967602 #>  [7127] 0.9991336 0.9958395 0.9975461 0.9390361 0.9973513 0.8786649 0.8017272 #>  [7134] 0.9797718 0.9997153 0.8180681 0.9987331 0.9997025 0.7648848 0.9958395 #>  [7141] 0.9345250 0.9807495 0.9818704 0.9770488 0.9978893 0.9900562 0.7400856 #>  [7148] 0.9517481 0.9877017 0.9955903 1.0035989 0.9766922 0.7449281 0.9298917 #>  [7155] 0.9782465 0.9793652 0.9251449 0.9766371 0.7700107 0.9837555 0.9298917 #>  [7162] 0.8567344 0.9979616 0.9855336 0.7856794 0.8567344 0.8512060 0.9837830 #>  [7169] 0.8346005 0.9768571 0.9251449 0.8732217 0.9848203 0.9978893 0.9594481 #>  [7176] 0.9994419 0.9818704 0.9832387 0.9775886 0.9803976 0.8786649 0.8125945 #>  [7183] 0.9390361 0.9997025 0.9785030 0.9973513 0.9153448 0.9103081 0.9517481 #>  [7190] 0.9810318 0.9829479 0.9784108 0.9983696 0.9779844 0.9434163 0.9924512 #>  [7197] 0.9000012 0.9849019 0.9960875 0.9782465 1.0044832 0.9973513 0.9808202 #>  [7204] 0.9820000 0.9594481 0.9900562 0.8401339 0.8786649 0.9771822 0.9826332 #>  [7211] 0.9787797 0.8235631 0.9816628 0.9051910 0.8947465 0.9767691 0.9727079 #>  [7218] 0.9103081 0.9982020 0.8567344 0.8567344 0.9851090 0.9872256 0.9806095 #>  [7225] 0.8180681 0.9872256 0.9996303 0.9996303 0.9997025 0.9797718 0.9390361 #>  [7232] 0.9785030 0.9769556 0.8512060 0.9765043 0.9476566 0.8125945 0.8894341 #>  [7239] 0.9298917 0.9826748 0.9773638 0.9973513 0.9202932 0.9769193 0.9982020 #>  [7246] 0.9961252 0.9890505 0.9852361 0.7498311 0.9696680 0.7804105 0.7598115 #>  [7253] 0.9153448 0.9696680 0.9847614 0.9996303 0.9765322 0.9975461 0.8512060 #>  [7260] 0.9774449 0.9779844 0.9994419 0.9826748 0.9886946 0.9837555 0.9517481 #>  [7267] 0.9779844 0.9785030 0.9954485 0.8567344 0.9801874 0.9768079 0.9298917 #>  [7274] 0.9664453 0.9900562 0.7598115 0.9978893 0.9916576 0.9782328 0.9807495 #>  [7281] 0.9769556 0.9696680 0.9298917 0.9799787 0.9855336 0.8840713 0.9810467 #>  [7288] 0.9947791 0.9996303 0.9843563 0.7498311 0.7751867 0.9434163 0.9987863 #>  [7295] 0.7751867 0.9924512 0.7804105 0.9727079 1.0044814 0.8401339 0.9862272 #>  [7302] 0.9997025 0.9755667 0.9777398 0.9782465 0.9801978 0.9830624 0.8235631 #>  [7309] 0.8235631 0.9939966 0.8732217 0.9842449 0.9852361 0.9825173 0.9849019 #>  [7316] 0.9808202 0.8840713 0.9900562 0.9958395 0.9782465 0.7547929 0.9770488 #>  [7323] 0.9841310 0.9818704 0.9890505 1.0046401 0.7353054 0.9807495 0.7963408 #>  [7330] 0.8180681 0.9517481 0.9877017 0.9908574 0.9810467 0.9812431 0.9801978 #>  [7337] 0.7963408 0.8235631 0.9766267 0.9696680 0.9892596 0.9996303 0.9791663 #>  [7344] 0.9932328 0.9982020 0.9773638 0.9727079 0.9830355 0.9664453 0.8180681 #>  [7351] 0.9922209 0.7963408 0.7498311 0.9852095 0.9995975 0.9922209 0.9791104 #>  [7358] 0.7963408 0.9982020 0.8947465 0.9476566 0.8567344 0.9556816 0.9967614 #>  [7365] 0.8786649 0.7909905 0.9764898 0.9807495 0.9908574 0.9835892 0.9847099 #>  [7372] 0.9775504 0.9947371 0.9841310 0.9967614 0.9958395 0.9825720 0.9696680 #>  [7379] 0.9798111 0.9975461 0.9797718 0.9830643 0.9773093 0.9932328 0.9973513 #>  [7386] 0.9851162 0.9810318 0.9852159 0.9825799 0.9855336 0.8786649 0.8071463 #>  [7393] 0.9847614 0.9852361 0.9977926 0.9825776 0.9815100 1.0046382 0.9755667 #>  [7400] 0.9924512 0.9517481 0.8401339 0.9810467 0.9958395 0.9630385 0.9251449 #>  [7407] 0.9836360 0.8071463 0.9810467 0.8622503 0.9994060 1.0044832 0.9826748 #>  [7414] 0.8894341 0.9153448 0.9476566 0.9924512 0.9836360 0.9806095 0.8732217 #>  [7421] 0.9153448 0.9775504 0.9820758 0.9696680 0.9995975 0.9780630 0.7498311 #>  [7428] 0.9932328 0.9768079 0.8894341 0.9924512 0.8456708 0.9807495 0.9773093 #>  [7435] 0.9978893 0.9843563 0.9824785 0.9767140 0.9886946 0.8894341 0.9852159 #>  [7442] 0.9924512 0.9987331 0.8180681 0.8567344 0.9782465 0.9862272 0.9251449 #>  [7449] 0.9766267 0.9847099 1.0007798 0.9153448 0.9770641 0.9434163 1.0045472 #>  [7456] 0.8290754 0.9845248 0.9869513 0.8071463 0.9755667 0.9828673 0.9842387 #>  [7463] 0.9630385 0.9791663 0.8180681 0.9844791 0.9153448 0.9830784 0.9251449 #>  [7470] 0.9837555 0.9980193 0.9835892 0.9825776 1.0040059 0.9967614 0.9777398 #>  [7477] 0.8401339 0.9820000 0.9994419 0.8786649 0.9825173 0.9390361 0.7963408 #>  [7484] 0.9825173 0.9907143 0.8071463 0.9517481 0.9766267 0.9000012 0.9434163 #>  [7491] 0.9847099 0.9935744 0.8071463 0.8622503 0.7856794 0.8017272 0.9997153 #>  [7498] 0.9789710 0.8512060 1.0043969 0.8786649 0.7856794 0.9806095 0.8567344 #>  [7505] 0.9791104 0.9434163 0.8017272 0.8947465 0.9820758 0.9967602 1.0013252 #>  [7512] 0.9782465 0.7400856 0.9820758 0.9815100 0.9390361 0.9825173 0.9850513 #>  [7519] 0.9826328 0.8732217 0.9978893 0.9051910 0.9852095 0.9812431 0.9842387 #>  [7526] 0.9594481 0.9765323 0.9947371 0.9862272 0.9907143 0.8017272 0.9782465 #>  [7533] 0.9777571 0.9995975 0.9556816 0.9801978 0.9908574 0.9850513 0.9984828 #>  [7540] 0.9345250 0.9816628 0.9848110 0.7305888 0.9773638 0.9987331 0.7353054 #>  [7547] 0.8894341 0.9808202 0.9810467 0.9995975 0.8947465 0.9987331 0.8512060 #>  [7554] 0.8456708 0.9795671 0.8346005 0.9907143 0.8622503 0.9782465 0.8622503 #>  [7561] 1.0027749 0.9103081 0.9980914 0.9765043 0.8401339 0.9827949 0.9892596 #>  [7568] 0.9973513 0.8125945 0.9978893 0.9862272 0.9051910 0.8125945 0.8622503 #>  [7575] 0.7804105 0.9987863 0.7963408 0.9975461 0.7498311 1.0040059 0.9997153 #>  [7582] 0.8290754 0.9884729 0.9991336 0.9434163 0.9664453 0.7963408 0.9837830 #>  [7589] 0.9051910 0.9890505 0.8456708 0.9994060 0.9594481 0.9924512 0.9855336 #>  [7596] 0.9848710 0.9877017 0.9851881 0.7648848 0.7648848 0.9770488 0.9766371 #>  [7603] 0.8456708 0.9991336 0.8017272 0.9999409 0.9771967 0.8947465 0.9727079 #>  [7610] 0.8235631 0.9872256 0.8677481 0.9251449 0.9765043 0.7648848 0.9922209 #>  [7617] 0.9987863 0.9556816 0.9967602 0.9630385 0.9983698 0.9775504 0.9630385 #>  [7624] 0.7700107 0.9830624 0.9251449 0.9517481 0.9765032 0.8235631 0.9872256 #>  [7631] 0.9865720 0.7498311 0.9051910 0.9830554 0.8290754 0.8401339 0.7598115 #>  [7638] 0.9764898 0.8677481 0.9594481 0.9997153 0.9773638 0.9991377 0.9766371 #>  [7645] 0.8512060 0.9764893 0.9770488 0.7804105 0.8947465 0.9935744 0.9935744 #>  [7652] 0.8401339 0.9664453 0.9773638 0.9517481 0.9764893 0.9765732 0.8786649 #>  [7659] 0.9877017 0.9103081 0.9771822 0.9696680 0.9991336 0.9995975 0.9997025 #>  [7666] 0.8894341 0.7700107 0.7804105 0.7598115 1.0029513 0.7963408 0.7963408 #>  [7673] 0.8017272 0.9476566 0.9967614 0.7700107 0.8235631 0.9765766 0.9995975 #>  [7680] 0.9807495 0.8401339 0.8290754 0.9630385 0.7648848 0.9630385 0.9298917 #>  [7687] 0.9991336 0.9202932 0.9845685 0.8622503 0.8125945 0.9848485 0.9932328 #>  [7694] 0.7353054 0.9390361 0.8456708 0.9815100 0.9810467 0.9103081 0.8456708 #>  [7701] 0.9892596 0.8235631 0.9000012 0.8071463 0.8677481 0.9939966 0.9782465 #>  [7708] 0.7909905 0.7400856 0.7498311 0.9390361 0.7449281 0.9987863 0.9801874 #>  [7715] 0.7400856 0.9787953 0.7963408 0.7400856 0.8677481 0.8071463 0.7751867 #>  [7722] 0.8567344 0.9947371 0.9696680 0.7598115 0.8840713 0.9476566 0.9922209 #>  [7729] 0.9947371 0.9975461 0.9967602 0.9975461 0.9967614 0.9843563 0.9967614 #>  [7736] 0.9939966 0.8786649 0.8017272 0.8401339 0.8180681 0.9051910 0.9997025 #>  [7743] 0.9202932 0.7909905 0.9696680 0.8456708 0.8235631 0.9983698 0.9434163 #>  [7750] 0.9900562 0.9345250 0.9797718 0.9476566 0.7498311 0.8567344 0.8732217 #>  [7757] 0.9765732 0.8017272 0.8622503 0.9787953 0.7751867 0.8894341 0.8732217 #>  [7764] 0.9801978 0.7400856 0.9517481 0.9816628 0.9251449 0.8235631 0.9975461 #>  [7771] 0.9771822 0.9799787 0.8732217 0.9997153 0.9832292 0.9987331 0.9907143 #>  [7778] 0.9153448 0.7700107 0.9153448 0.9251449 0.9807495 0.9907143 0.8017272 #>  [7785] 0.8235631 0.9782328 0.9787797 0.8125945 0.9051910 0.8346005 0.9434163 #>  [7792] 0.8071463 0.9782465 0.9932328 0.9517481 0.7963408 0.8180681 0.8290754 #>  [7799] 0.9630385 0.9869513 0.9765766 0.8235631 0.9789710 0.9958395 0.9991447 #>  [7806] 0.9998103 0.7547929 0.9696680 0.9816628 0.8894341 0.7700107 0.9765766 #>  [7813] 0.9769556 0.8786649 0.9000012 0.9664453 0.9983696 0.8125945 0.8840713 #>  [7820] 0.9996303 0.9973513 0.9842449 0.7700107 0.7353054 0.9594481 0.8180681 #>  [7827] 0.9967602 0.9594481 0.9825799 0.9987331 0.9782340 0.8401339 0.9807495 #>  [7834] 0.7963408 0.8235631 0.9994419 0.9778981 0.9848485 0.9000012 0.7400856 #>  [7841] 0.9924512 0.9799787 0.9771822 0.9842387 0.9830624 0.9978893 0.8894341 #>  [7848] 0.9920623 0.9935744 0.9789710 0.9989365 0.9830624 0.9795671 0.9051910 #>  [7855] 0.9202932 0.9517481 0.8071463 0.9826770 0.9855336 0.9773638 0.9051910 #>  [7862] 0.9345250 0.8840713 0.8235631 0.9773638 0.8677481 0.9202932 0.9787953 #>  [7869] 0.9789710 0.7856794 0.9787797 0.9991336 1.0024061 0.9982020 0.9947791 #>  [7876] 0.8732217 0.9768571 0.9850513 0.8180681 0.9820000 0.8786649 0.8786649 #>  [7883] 0.9153448 0.9727079 0.9987863 0.9298917 0.9973513 0.9803976 0.9994419 #>  [7890] 0.9202932 0.9476566 0.9476566 0.9810467 0.9829479 0.9795671 1.0006323 #>  [7897] 0.9922209 0.9839963 0.9840678 0.8567344 0.9696680 0.9997025 0.8622503 #>  [7904] 0.9755667 0.8622503 0.9594481 0.9975461 0.9768079 0.9766922 0.9836360 #>  [7911] 0.8017272 1.0010601 0.8180681 0.9806086 0.9825173 0.9922209 0.9961252 #>  [7918] 0.9983696 0.7700107 0.9847614 0.9434163 0.9877017 0.9769193 0.9434163 #>  [7925] 0.9807495 0.9908574 0.9771967 0.8840713 0.9977927 0.9907143 0.9727079 #>  [7932] 0.9996303 0.8125945 0.8732217 0.9434163 0.8840713 0.9932328 0.8235631 #>  [7939] 0.9833336 0.9782340 0.8894341 0.8512060 0.9975461 0.9997025 0.9890505 #>  [7946] 0.8346005 1.0022211 0.9434163 0.9815100 0.7963408 0.9765322 0.9987863 #>  [7953] 0.9765032 0.7751867 0.9051910 0.8125945 1.0037431 0.9517481 0.7856794 #>  [7960] 0.8840713 0.9932328 0.9851353 0.9251449 0.9825173 0.9987331 0.9924512 #>  [7967] 0.9820000 0.8947465 0.9820000 0.9994060 0.8786649 0.9773638 0.9824785 #>  [7974] 0.8840713 0.9877017 0.9935744 0.9051910 0.8732217 0.9991336 0.9994060 #>  [7981] 0.9153448 1.0013072 0.9843502 0.9991447 0.9877017 0.8401339 0.9961252 #>  [7988] 0.9852361 0.9877017 1.0009107 0.9852361 0.9777398 0.7909905 0.9848485 #>  [7995] 0.9767691 0.9630385 0.9768079 0.9855336 0.9958395 0.9824785 0.8071463 #>  [8002] 0.9973513 0.9556816 0.9997025 0.9810467 0.8180681 0.9476566 0.9390361 #>  [8009] 0.9872256 0.9869513 0.9202932 0.9991447 0.9808202 0.9779844 0.9872256 #>  [8016] 0.8401339 0.9991447 0.8894341 0.9779844 0.9961252 0.9832387 0.9996303 #>  [8023] 0.8456708 0.9103081 0.8622503 0.9995975 0.7498311 0.8180681 0.8346005 #>  [8030] 0.9916576 0.8071463 0.9799787 0.8290754 0.8456708 0.9845991 0.9967602 #>  [8037] 0.9815100 0.9202932 0.9771967 0.8180681 0.9843563 0.9908574 0.8622503 #>  [8044] 0.9851881 0.8180681 0.9782340 0.9051910 0.8017272 0.9664453 0.9987331 #>  [8051] 0.9845248 0.9851548 0.8290754 0.8732217 0.9770488 0.9939966 0.9791104 #>  [8058] 1.0037431 0.9958395 0.9987863 0.9997025 0.8180681 0.8786649 0.9924512 #>  [8065] 0.9922209 0.8732217 0.9825720 0.9820000 0.9153448 1.0032879 0.9793652 #>  [8072] 0.8235631 0.8512060 0.9967614 0.9869513 0.9785030 0.9848710 0.9924512 #>  [8079] 0.9434163 0.9755667 0.9298917 0.7547929 0.9932328 0.8125945 0.9556816 #>  [8086] 0.9872256 0.8401339 0.9836360 0.9807495 0.9051910 0.9103081 0.9766922 #>  [8093] 0.7547929 0.9768571 0.8125945 0.8235631 0.7498311 0.9998566 0.9664453 #>  [8100] 0.9153448 0.9664453 0.8235631 0.9765032 0.9815100 0.9908574 0.9202932 #>  [8107] 0.9939966 0.9973513 0.9696680 0.9830624 0.9766371 0.9924512 0.9793652 #>  [8114] 0.9839151 0.9845685 0.9801978 0.9954485 1.0004868 0.9782328 0.8840713 #>  [8121] 0.9825799 0.9822786 0.9961252 0.9830554 0.9765322 0.9764898 0.8622503 #>  [8128] 0.9994419 0.9977926 0.9810467 0.7963408 0.9810318 0.9922209 0.9980193 #>  [8135] 0.7648848 0.9820758 0.9994060 0.9983696 0.9849821 0.8401339 0.9877017 #>  [8142] 0.8622503 0.9696680 0.9153448 0.9975461 0.9842387 0.9842387 0.9908574 #>  [8149] 0.8732217 0.9103081 0.9982020 0.9390361 0.9476566 0.9978893 0.9801978 #>  [8156] 0.9696680 0.9773638 0.9103081 0.9869513 0.9982020 0.9765732 0.9892596 #>  [8163] 0.9987331 0.8567344 0.9877017 0.7909905 0.9982020 0.9202932 0.9842387 #>  [8170] 0.8235631 0.7700107 0.9434163 0.8346005 0.8346005 0.7963408 0.7598115 #>  [8177] 0.7305888 0.9996303 0.9850002 0.8786649 0.9765323 1.0046260 0.7400856 #>  [8184] 0.8401339 0.9991336 0.9771967 0.9826328 0.9831296 0.7751867 0.9830554 #>  [8191] 0.9775504 0.9995975 0.9782465 0.9844791 0.9932328 0.9556816 0.9769193 #>  [8198] 0.8840713 0.9983696 0.9890505 0.9967614 0.9973513 0.7305888 1.0036754 #>  [8205] 0.9954485 0.9476566 1.0027043 0.9807495 0.9884729 0.9852361 0.9837555 #>  [8212] 0.7751867 0.9855336 0.9476566 0.9978893 0.8732217 0.9877017 0.8894341 #>  [8219] 0.9848110 0.8125945 0.8677481 0.8346005 0.9997093 0.7648848 0.9991336 #>  [8226] 0.9845991 0.8125945 0.9995975 0.9476566 1.0032356 0.7305888 0.9987863 #>  [8233] 0.9000012 0.9594481 0.9791104 0.7305888 0.8894341 0.9765766 0.9852361 #>  [8240] 0.9967614 0.9298917 0.8071463 0.9848710 0.9965801 0.8071463 0.8677481 #>  [8247] 0.9390361 0.7305888 0.9517481 0.9808202 0.9907143 0.8235631 0.9664453 #>  [8254] 0.9997153 0.9755667 0.9967614 0.9764898 0.9298917 0.9841310 0.8235631 #>  [8261] 0.7751867 0.7498311 0.9851548 0.9935744 0.9924512 0.8290754 0.9892596 #>  [8268] 0.9852086 0.8235631 0.9841310 0.9251449 0.9782328 0.7305888 0.9922209 #>  [8275] 0.9838993 0.9773093 0.9994060 0.9780630 0.8622503 0.9822786 0.9771822 #>  [8282] 0.9848110 0.8622503 0.9991447 0.8894341 0.8401339 0.9000012 0.8947465 #>  [8289] 0.7963408 0.9839151 0.9727079 0.9766922 0.8840713 0.7498311 0.9051910 #>  [8296] 0.9849284 0.9836360 0.9777398 0.9987331 0.9961252 0.9851881 0.9630385 #>  [8303] 0.9815100 0.9846678 0.9298917 0.9869513 0.9924512 0.9987331 0.9594481 #>  [8310] 0.9764893 0.9801978 0.9765043 0.9807495 0.9153448 0.8894341 0.9994722 #>  [8317] 0.9727079 0.9991336 0.9298917 0.9836360 0.9807495 0.9989365 0.9797718 #>  [8324] 0.8346005 0.9839151 0.7648848 0.8840713 0.7963408 0.7700107 0.9769556 #>  [8331] 0.9850002 1.0013502 1.0013615 0.9950893 0.9727079 0.9852361 0.9815100 #>  [8338] 0.9810467 0.8401339 0.9958395 0.9000012 0.8401339 0.7353054 0.9768571 #>  [8345] 0.8180681 0.9982020 0.9000012 0.9696680 0.9907143 0.9773638 0.9872256 #>  [8352] 0.7400856 0.9782465 0.8894341 0.9848710 0.9900562 0.9932328 0.9051910 #>  [8359] 0.9834168 0.9765322 0.9996303 0.8732217 0.9995975 0.9764898 0.8180681 #>  [8366] 0.7449281 0.9922209 0.9985265 0.7856794 0.9390361 0.9967614 0.9517481 #>  [8373] 0.7700107 0.9997153 0.8677481 0.9882461 0.9806095 0.9202932 0.8456708 #>  [8380] 0.8732217 0.9000012 0.9770641 0.7963408 0.8786649 0.7498311 1.0001452 #>  [8387] 0.9826748 0.9826839 0.9153448 0.7856794 0.9994060 0.9967614 0.9939966 #>  [8394] 0.9298917 0.8456708 0.9842130 0.9907143 0.7547929 0.9556816 0.9973513 #>  [8401] 0.9947791 0.9797718 0.9997153 0.9795671 0.9764898 0.9991336 0.9848485 #>  [8408] 0.9997153 0.9900562 0.9782465 0.8125945 0.9877017 0.7648848 0.8786649 #>  [8415] 0.9982020 0.9390361 0.8622503 0.9983696 0.9973513 0.9825173 0.7598115 #>  [8422] 0.9947371 0.9828673 0.9594481 0.8840713 0.9773638 0.8512060 0.9820758 #>  [8429] 0.9837652 0.9727079 0.8840713 0.7498311 0.9991336 0.9556816 0.9900562 #>  [8436] 0.9845991 0.9594481 0.8947465 0.9808202 0.9000012 0.9777571 0.7449281 #>  [8443] 0.9855336 0.9103081 0.9795671 0.9958395 0.8567344 0.8180681 0.9997025 #>  [8450] 0.9958395 0.9877017 0.9814536 0.9390361 0.9884729 0.9852095 0.9782465 #>  [8457] 0.8840713 0.9696680 0.9973513 0.7751867 0.8786649 0.9967614 0.8235631 #>  [8464] 0.9977976 0.9345250 0.7751867 0.9103081 0.8401339 0.9995975 0.9996303 #>  [8471] 0.7449281 0.9945857 0.9051910 0.9765732 0.8017272 0.9994419 0.9766922 #>  [8478] 0.7598115 0.9997025 0.9556816 0.9517481 0.9991336 0.9995975 0.9978893 #>  [8485] 0.8290754 0.8786649 0.9890505 0.8512060 0.8677481 0.9836360 0.9251449 #>  [8492] 0.7449281 0.9848710 0.7909905 0.9051910 0.9051910 0.8677481 0.9810318 #>  [8499] 0.8017272 0.9916576 0.9869707 0.7751867 0.8512060 0.9808202 0.9995975 #>  [8506] 0.8512060 0.9696680 0.9980914 0.9855336 0.9774449 0.9932328 0.9884729 #>  [8513] 0.9978893 0.9768571 0.8947465 0.8456708 0.9828673 1.0013947 0.7963408 #>  [8520] 0.9103081 0.9973513 0.8125945 0.9251449 0.9806095 0.9801978 0.8017272 #>  [8527] 0.9782465 0.8235631 0.9958395 0.9000012 0.8290754 0.9935744 0.7700107 #>  [8534] 0.9782465 0.9765732 0.8235631 0.8677481 0.9997025 0.9764898 0.9852095 #>  [8541] 0.9855336 0.9298917 0.9556816 0.9967602 0.7700107 0.8071463 0.9806095 #>  [8548] 0.8786649 0.8346005 0.8840713 0.9202932 0.8786649 0.9922209 0.9872256 #>  [8555] 0.9900562 0.9696680 0.8401339 0.7963408 0.9845685 1.0008254 0.9787953 #>  [8562] 0.8840713 0.9202932 0.8512060 0.9838993 0.9865720 0.9664453 0.9782465 #>  [8569] 0.9983696 0.9814536 0.9987863 1.0013943 0.9961252 0.9958395 0.9782328 #>  [8576] 0.9764893 0.9727079 0.9345250 0.9051910 0.9556816 0.7963408 0.9345250 #>  [8583] 0.7648848 0.8180681 0.7751867 0.9862272 0.9848710 0.9825173 0.9103081 #>  [8590] 0.9828673 0.9153448 0.9815100 0.9777398 0.9852361 0.9994060 0.8512060 #>  [8597] 0.9806095 0.8401339 0.9872256 0.9594481 0.8567344 0.9907143 0.9922209 #>  [8604] 0.9765732 0.9852086 0.8786649 0.8512060 0.9994393 0.9770488 0.9103081 #>  [8611] 0.8622503 0.7700107 0.9850513 0.9916576 0.7909905 0.9434163 0.9983696 #>  [8618] 0.9795671 0.9890505 0.9824785 0.9556816 0.7400856 0.9791663 0.8622503 #>  [8625] 0.9825173 0.7305888 0.9825173 0.7598115 0.8456708 0.8512060 0.9051910 #>  [8632] 0.9767140 0.9975461 0.7856794 0.9390361 0.9779844 0.9765323 0.9991447 #>  [8639] 0.9845685 0.8622503 0.9830554 0.9818704 0.9852361 0.9779844 0.9594481 #>  [8646] 0.9630385 0.9994060 0.9987331 0.9820000 0.9984332 0.9978893 0.9782328 #>  [8653] 0.9251449 0.9517481 0.9997153 0.9775504 0.9782465 0.9851090 0.9051910 #>  [8660] 0.8346005 0.8732217 0.8071463 0.9852361 0.9847099 0.8677481 0.9997153 #>  [8667] 0.9630385 0.9890505 0.8567344 0.9777571 0.9947791 0.8401339 0.9773093 #>  [8674] 0.9836360 0.9814536 0.9801978 0.9782340 0.9517481 0.7648848 0.9797718 #>  [8681] 0.9791104 0.8235631 0.9780630 0.9935744 0.9630385 0.9851353 1.0008670 #>  [8688] 0.9779844 0.9973513 0.9967614 0.9908574 0.9854689 0.9995975 0.9872256 #>  [8695] 0.7547929 0.9954485 0.9794489 0.8677481 0.9768079 0.9727079 0.7449281 #>  [8702] 0.9987863 0.9390361 0.9973513 0.9818704 0.9476566 0.9824785 0.9850002 #>  [8709] 0.8125945 0.9789710 0.9862272 0.7547929 0.9852086 0.9345250 0.9830784 #>  [8716] 0.9981413 0.9051910 0.9727079 0.9767140 0.9978089 0.9991336 0.9826005 #>  [8723] 0.9932328 0.9848710 0.9594481 0.9664453 0.9773638 0.9345250 0.9345250 #>  [8730] 0.7856794 0.9861882 0.9978893 0.8180681 0.9664453 1.0116383 0.8456708 #>  [8737] 0.9851548 0.9630385 0.7400856 0.9830784 0.9765323 0.9251449 0.8567344 #>  [8744] 0.8894341 0.9767140 0.9996303 0.8290754 0.9298917 0.9852361 0.8346005 #>  [8751] 0.9983696 0.9103081 0.8071463 0.9935744 0.9251449 0.9997153 0.7909905 #>  [8758] 0.9939966 0.9789710 0.9755667 0.9967614 0.9765322 0.9812431 0.8677481 #>  [8765] 0.7547929 0.9982020 0.9922209 0.8017272 0.9785030 0.8677481 0.9791663 #>  [8772] 0.9696680 0.7909905 0.9967602 0.9594481 0.9832292 0.9727079 0.8894341 #>  [8779] 0.8840713 0.8235631 0.7400856 0.9924512 0.9298917 0.9991336 0.9852361 #>  [8786] 0.9434163 0.8346005 0.8894341 0.9892596 0.7547929 0.8840713 0.9000012 #>  [8793] 0.9830784 0.9994419 0.9877017 0.9801874 0.8622503 0.8346005 0.9806086 #>  [8800] 0.9779844 0.8786649 0.9771822 0.7598115 0.9664453 0.7598115 0.8622503 #>  [8807] 0.9916576 0.9251449 0.8235631 0.9799787 0.9908574 0.8346005 0.9794489 #>  [8814] 0.9696680 0.9791104 0.9997025 0.9967602 0.9869513 0.8947465 0.9820758 #>  [8821] 0.9815100 0.9434163 0.9476566 0.9810467 0.9947791 0.8567344 0.9517481 #>  [8828] 0.9770641 0.9890505 0.8071463 0.8512060 0.9900562 0.9771822 0.9987331 #>  [8835] 0.8017272 0.8235631 0.9766371 0.8346005 0.9794489 0.7449281 0.9810467 #>  [8842] 0.9991447 0.8840713 0.9727079 0.9851353 0.9848485 0.9832387 0.9840156 #>  [8849] 0.8622503 0.9916576 0.9832387 0.9935744 0.9727079 0.8786649 0.9890505 #>  [8856] 0.9852361 0.7400856 0.9782340 0.9345250 0.9202932 0.8401339 0.9556816 #>  [8863] 0.7598115 0.9916576 0.9782465 0.9696680 0.9907143 0.8894341 0.9852361 #>  [8870] 0.9815100 0.9954485 0.8180681 0.9987331 0.9345250 0.9782328 0.9765322 #>  [8877] 0.9764893 0.8732217 0.8017272 0.9961252 0.9153448 0.8456708 0.9820758 #>  [8884] 0.7598115 0.9852361 0.9994419 0.8071463 0.9765323 0.9991336 0.8017272 #>  [8891] 0.7963408 0.7804105 0.9782465 0.9476566 0.9765732 0.9908574 0.9476566 #>  [8898] 0.7648848 0.8947465 0.9848710 0.9103081 0.9251449 0.8401339 0.8017272 #>  [8905] 0.7598115 0.9825173 0.9345250 0.7909905 0.9815100 0.8180681 0.9345250 #>  [8912] 0.7963408 0.8786649 0.8947465 0.8567344 0.8512060 0.9833336 0.9807495 #>  [8919] 0.9975461 0.9939966 0.8456708 0.9434163 0.8622503 0.9202932 0.9967602 #>  [8926] 0.9766371 0.9771967 0.9961252 0.8346005 0.8840713 0.9103081 0.8290754 #>  [8933] 0.9835535 0.8677481 0.9832292 0.9855336 0.9434163 0.9947791 0.9791663 #>  [8940] 0.9848710 0.7963408 0.9932328 0.9884729 0.8290754 0.9785928 0.9829479 #>  [8947] 0.9298917 0.9967614 0.8622503 0.9982020 0.8840713 0.8125945 0.9768571 #>  [8954] 0.8840713 0.9765043 0.9994419 0.9828674 0.9345250 0.8567344 0.9961252 #>  [8961] 0.9630385 0.9982020 0.9975461 0.9908574 0.9994060 0.7648848 0.9390361 #>  [8968] 0.9947371 0.7963408 0.9696680 0.9872256 0.9051910 0.9251449 0.8401339 #>  [8975] 0.9975461 0.9051910 0.8071463 0.9830784 0.8840713 0.9556816 0.9782465 #>  [8982] 0.9991447 0.9832387 0.9696680 0.9202932 0.9997025 0.8346005 0.9830643 #>  [8989] 0.8346005 0.9791104 0.9517481 0.9892596 0.9476566 0.9202932 0.9773638 #>  [8996] 0.9476566 0.9785928 0.7353054 0.8567344 1.0010601 0.7353054 0.9390361 #>  [9003] 0.8786649 0.9836360 0.8456708 0.9390361 0.9765323 0.9890505 0.9994419 #>  [9010] 0.9836360 0.9825173 0.8180681 0.7547929 0.7449281 0.8677481 0.9828374 #>  [9017] 0.9797718 0.9816628 0.8622503 0.9855336 0.8567344 0.9153448 0.9345250 #>  [9024] 0.9777398 0.9922209 0.8567344 0.8840713 0.8732217 0.9852361 0.8840713 #>  [9031] 0.9924512 0.8180681 0.8840713 0.7751867 0.9958395 1.0044109 0.8512060 #>  [9038] 0.9594481 0.8180681 0.8125945 0.9890505 0.9994060 0.9825173 0.7449281 #>  [9045] 0.7909905 0.8512060 0.9862272 0.9822786 0.9664453 0.9810318 0.9767140 #>  [9052] 0.8017272 0.9594481 0.9774449 0.8512060 0.9785928 0.9947791 0.7856794 #>  [9059] 0.9828673 0.9916576 0.9782465 0.9556816 0.8622503 0.9830784 0.8125945 #>  [9066] 0.9845685 0.8017272 0.9825799 0.9787797 0.7400856 0.9517481 0.9251449 #>  [9073] 0.9769193 0.9995975 0.7856794 0.9978893 0.9845991 0.9051910 0.9939966 #>  [9080] 0.7449281 0.9830784 0.9696680 0.9947791 0.9924512 0.9967602 0.9727079 #>  [9087] 0.8456708 0.8840713 0.9434163 0.8346005 0.9947791 0.9794489 0.8840713 #>  [9094] 0.8346005 0.9994419 0.9801978 0.8401339 0.9997025 0.9839151 0.9850513 #>  [9101] 0.8180681 0.9991336 0.9991447 0.7547929 0.9987331 0.8677481 0.9769556 #>  [9108] 0.8017272 0.7856794 0.9000012 0.8840713 0.9825173 0.9836360 0.9892596 #>  [9115] 0.9939966 0.7598115 0.7598115 1.0196271 0.9768571 0.9787953 0.9434163 #>  [9122] 0.8840713 0.8840713 0.9961252 0.7305888 0.8235631 0.9202932 0.9807495 #>  [9129] 0.8456708 0.7856794 0.7909905 0.8786649 0.9517481 0.8567344 0.9727079 #>  [9136] 0.9830624 0.8017272 0.8071463 0.9765732 0.8786649 0.9794489 0.7963408 #>  [9143] 0.8622503 0.8732217 0.9947791 0.7547929 0.9755667 0.9298917 0.9298917 #>  [9150] 0.8947465 0.7547929 0.8786649 0.9727079 0.9932328 0.9892596 0.9982020 #>  [9157] 0.9967614 0.8732217 0.8512060 0.8456708 0.7353054 0.9476566 0.9630385 #>  [9164] 0.9251449 0.9793652 0.8840713 0.9202932 0.8512060 0.9987863 0.8840713 #>  [9171] 0.9153448 0.9807495 0.9908574 0.9958395 0.9664453 0.9773638 0.9872256 #>  [9178] 0.8017272 0.9476566 0.8732217 0.8346005 0.9924512 0.9775504 0.8235631 #>  [9185] 0.7909905 0.9869513 0.9517481 0.9907143 0.8180681 0.9771822 0.9907143 #>  [9192] 0.7547929 0.9727079 0.9994060 0.7909905 0.8071463 0.8125945 0.9973513 #>  [9199] 0.8017272 0.7400856 0.9755667 0.8017272 0.8235631 0.9835892 0.9947791 #>  [9206] 0.9987331 0.8947465 0.9848485 0.8180681 0.7353054 0.9869513 0.8180681 #>  [9213] 0.9862272 0.9995975 0.9630385 0.9202932 0.9664453 0.8290754 0.9939966 #>  [9220] 0.9987863 0.8732217 0.8677481 0.8894341 0.9954485 0.9832387 0.8786649 #>  [9227] 0.9787797 0.9995975 0.9251449 0.8947465 0.9765732 0.7804105 0.9782465 #>  [9234] 0.8071463 1.0043969 0.7449281 0.9664453 0.9826748 0.9807495 0.9664453 #>  [9241] 0.9869513 0.9390361 0.9852361 0.7751867 0.9784108 0.9907143 0.8125945 #>  [9248] 0.9982020 0.7751867 0.9852361 0.9345250 0.9983696 0.9869707 0.9975461 #>  [9255] 0.9837555 0.9847099 0.9153448 0.9991447 0.9907143 0.9795671 0.9556816 #>  [9262] 0.9807495 0.9987863 0.9994060 0.9768079 0.9345250 0.9967614 0.8290754 #>  [9269] 0.9988891 0.9922209 0.9476566 0.9103081 0.9851548 0.8947465 0.9664453 #>  [9276] 0.8894341 0.9556816 0.8840713 0.9935744 0.9298917 0.9345250 0.7751867 #>  [9283] 0.9947791 0.9696680 0.9907143 0.8180681 0.9991336 0.9973513 0.7856794 #>  [9290] 0.8840713 0.9884729 0.9771967 0.9517481 0.9847099 0.9594481 1.0006323 #>  [9297] 0.9987863 0.7909905 0.9810318 0.9767691 0.9390361 0.8456708 0.9807495 #>  [9304] 0.9251449 0.9922209 1.0046209 0.9891532 0.7498311 0.9967602 0.9820000 #>  [9311] 0.8180681 0.9994419 0.9826748 0.9847614 0.9787953 1.0042934 0.7598115 #>  [9318] 0.9842130 0.9983696 0.9202932 0.7804105 0.9807495 0.9664453 0.9770641 #>  [9325] 0.8401339 0.9826332 0.7449281 0.9961252 0.8017272 0.9844644 0.8071463 #>  [9332] 0.9251449 0.9973513 0.9345250 0.8512060 0.9878087 0.9916576 0.9833336 #>  [9339] 0.9843563 0.9153448 0.9298917 0.9103081 0.9846678 0.9785030 0.8290754 #>  [9346] 0.9476566 0.9103081 0.9961252 0.7856794 0.9830784 0.9967614 0.9773638 #>  [9353] 0.9878087 0.8017272 0.9832387 0.7856794 0.9390361 0.7804105 0.9777398 #>  [9360] 0.8512060 0.9766371 0.9995975 0.8947465 0.9765032 0.7598115 0.7648848 #>  [9367] 0.9727079 0.9851162 0.9153448 0.9815100 0.9434163 0.9556816 0.9807495 #>  [9374] 0.9775886 1.0022211 0.9836360 0.8622503 0.9767691 0.7498311 0.9939966 #>  [9381] 0.9908574 0.9765323 0.9826839 0.9958395 0.8017272 0.9997153 0.9476566 #>  [9388] 0.8947465 0.7700107 0.9774449 0.9839151 0.9848710 0.9000012 0.9993794 #>  [9395] 0.9765032 0.8017272 0.7963408 0.7449281 0.7909905 0.9994060 0.8235631 #>  [9402] 0.8456708 0.7856794 0.9777571 0.9664453 0.9390361 0.9997025 0.9983696 #>  [9409] 0.8894341 0.7700107 0.9766371 0.9830355 0.9845991 0.9848710 0.8840713 #>  [9416] 0.8071463 0.9847099 0.9810467 0.9782465 0.8786649 0.9770641 0.9916576 #>  [9423] 0.8401339 0.8512060 0.9779844 0.9000012 0.9846678 0.9978893 0.9987331 #>  [9430] 0.8401339 0.9973513 0.9630385 0.7353054 0.9051910 0.9298917 0.9842387 #>  [9437] 0.7305888 0.9991336 0.9935744 0.8071463 0.7700107 0.9051910 0.7598115 #>  [9444] 0.7449281 0.8947465 0.9983387 0.9982020 0.8235631 0.9755667 0.9000012 #>  [9451] 0.8346005 0.9869513 0.8894341 0.9830784 0.9755667 0.9797718 0.9979616 #>  [9458] 0.9985665 0.9987331 0.8235631 0.9830554 0.9251449 0.7498311 0.9251449 #>  [9465] 0.8401339 1.0091882 0.9664453 0.9997025 0.9345250 0.9996924 0.9983696 #>  [9472] 0.8017272 0.9847099 0.9766922 0.9994419 0.9825976 0.9855336 0.9153448 #>  [9479] 1.0005835 0.9789710 0.9298917 0.8401339 0.8840713 0.9996303 0.9995975 #>  [9486] 0.9476566 0.9765043 0.8567344 0.8840713 0.7700107 0.9556816 0.9476566 #>  [9493] 0.9765043 0.9476566 0.9997153 0.9476566 0.9994419 0.9818704 0.9727079 #>  [9500] 0.9935744 0.9987863 0.8512060 0.9755667 0.9907143 0.9841310 0.9517481 #>  [9507] 0.9051910 0.9755667 0.9798111 0.7648848 0.7751867 0.9784108 0.9869513 #>  [9514] 0.7648848 0.7751867 0.8125945 0.9960875 0.9594481 0.9517481 0.9947791 #>  [9521] 0.9816628 0.7700107 0.9630385 0.9886946 0.9782465 0.8622503 0.9775504 #>  [9528] 0.9848710 0.9967614 0.9476566 0.9765323 0.9947791 0.9967602 0.9807495 #>  [9535] 0.9202932 0.9994419 0.9907143 0.9000012 0.8622503 0.9975461 0.9000012 #>  [9542] 0.9852159 0.8017272 0.9994419 1.0017501 0.9830784 0.9664453 0.9829412 #>  [9549] 0.9978893 0.9390361 0.7449281 0.9827949 0.8947465 0.9764893 0.9983696 #>  [9556] 0.8512060 0.9782465 0.9791663 0.8567344 0.9000012 0.9051910 0.8894341 #>  [9563] 0.9777571 0.9932328 1.0010589 0.9850513 0.8786649 0.8677481 0.9785928 #>  [9570] 0.9153448 0.9814536 0.8290754 0.9967614 0.9771822 0.8235631 0.9807495 #>  [9577] 0.9837652 0.9791104 0.7648848 0.9765322 0.7598115 0.9996303 0.9981811 #>  [9584] 0.9836360 0.9051910 0.9884729 0.8947465 0.9806095 0.8894341 0.9916576 #>  [9591] 0.9982020 0.7449281 0.9824785 0.7547929 0.8512060 0.9298917 0.9822786 #>  [9598] 0.7353054 1.0034469 0.8677481 0.9696680 0.8894341 0.8456708 0.9890505 #>  [9605] 0.9849284 0.9773638 0.8622503 0.7598115 0.9777398 0.7804105 0.9764898 #>  [9612] 0.8401339 0.9824785 0.9862272 0.9787797 0.8180681 0.9892596 0.9812431 #>  [9619] 0.9987331 0.9922209 0.9801978 1.0008690 0.9556816 0.9345250 0.9994419 #>  [9626] 0.9832387 0.9298917 0.9862272 0.9997025 0.9298917 0.9799787 0.9958395 #>  [9633] 0.9851903 0.9836360 0.7400856 0.9932328 0.8456708 0.9892596 0.9103081 #>  [9640] 0.9993939 0.8622503 0.9784108 0.9202932 0.8290754 0.9852159 0.8346005 #>  [9647] 0.9932328 0.9000012 0.8947465 0.9766371 0.9907143 0.9991447 0.9987863 #>  [9654] 0.9935744 0.9825720 0.9845685 0.9727079 0.9103081 0.9727079 0.9994419 #>  [9661] 0.7751867 0.9996303 0.9830784 0.9826770 0.8840713 0.9153448 0.9991447 #>  [9668] 0.9789710 0.9556816 0.9886946 0.8235631 0.9517481 0.7909905 0.8290754 #>  [9675] 0.9766267 0.9961252 0.9900562 0.9153448 0.9594481 0.9848203 0.7547929 #>  [9682] 0.9991336 0.9991447 0.9825173 0.7547929 0.7598115 0.9997025 0.9826748 #>  [9689] 0.9782340 0.9000012 0.9996303 0.9973513 0.8017272 0.9807495 1.0002283 #>  [9696] 0.8456708 0.9820000 0.9994419 0.9798111 0.9947371 0.9892596 0.9997025 #>  [9703] 0.7400856 0.9664453 0.9765732 0.9727079 0.9872256 0.9996303 0.8677481 #>  [9710] 0.9892596 0.9851903 0.9434163 0.9991336 0.9978893 0.9973513 0.8290754 #>  [9717] 0.8401339 0.9996303 0.9766922 0.9890505 0.8894341 1.0029513 0.9664453 #>  [9724] 0.9815100 0.9696680 0.9932328 0.9890505 0.9872256 0.8947465 0.9806095 #>  [9731] 0.9727079 0.9995975 0.7449281 0.9848710 0.9768571 0.9815100 0.9991336 #>  [9738] 0.8786649 0.9773093 0.9991447 0.9785030 0.9755667 0.9153448 0.8456708 #>  [9745] 0.8732217 0.9852361 0.9664453 0.9517481 0.9789710 0.8512060 0.8840713 #>  [9752] 0.9922209 0.8567344 0.7353054 0.8071463 0.9820000 0.7909905 0.9764893 #>  [9759] 0.9922209 0.9852086 0.7700107 0.9517481 0.8235631 0.9851162 0.7305888 #>  [9766] 0.9835535 0.9836675 0.9991336 0.9830355 0.9784108 0.9935744 0.9202932 #>  [9773] 0.9782465 0.8512060 0.8071463 0.8071463 0.8290754 0.8786649 0.8290754 #>  [9780] 0.9843563 0.9755667 0.9922209 0.9994419 0.7700107 0.9051910 0.9900562 #>  [9787] 0.8456708 0.9973513 0.9769556 0.9803976 0.9774449 0.9390361 0.9785030 #>  [9794] 1.0017501 1.0024061 0.9769193 0.9434163 0.8840713 0.8180681 0.9939966 #>  [9801] 0.9768079 1.0043263 0.9755667 0.9987331 0.9696680 0.7751867 0.8947465 #>  [9808] 0.9779844 0.9777571 0.8456708 0.9836360 0.8346005 0.9967602 0.9345250 #>  [9815] 0.9832387 0.9820000 0.7751867 0.7449281 0.9820000 0.7498311 0.9765732 #>  [9822] 0.9983696 0.9939966 0.9476566 0.9251449 0.9997153 0.9892596 0.9767140 #>  [9829] 0.8622503 0.9345250 0.9791104 0.9767140 0.9103081 0.8346005 0.9939966 #>  [9836] 0.8947465 0.9994419 0.8677481 0.7598115 0.9842387 0.8840713 0.9848710 #>  [9843] 0.9997153 0.9935744 0.9801978 0.9826332 0.8894341 0.7353054 0.9961252 #>  [9850] 0.9961252 0.9801978 0.9994419 0.9594481 0.9766371 0.9836360 0.9991594 #>  [9857] 0.9768571 0.9991336 0.9779844 0.9767691 0.9830554 0.9755667 0.9848485 #>  [9864] 0.9755667 0.9922209 0.9830784 0.9846678 0.9782328 0.9251449 0.9967614 #>  [9871] 0.9852361 0.8567344 0.9806095 0.7547929 0.9838993 0.9769193 0.9851903 #>  [9878] 0.8512060 0.9848110 0.9782465 0.9476566 0.9947371 0.9862272 1.0024061 #>  [9885] 0.9202932 0.9967602 0.9820758 0.7498311 0.9947791 0.9980193 0.9832292 #>  [9892] 0.9932328 0.8401339 0.9890505 1.0011221 0.9982020 0.9842387 0.8017272 #>  [9899] 0.9765322 0.9973513 0.9696680 0.9345250 0.9390361 0.9947371 0.9390361 #>  [9906] 0.8786649 0.9975461 0.9982020 0.9935744 0.9851881 0.9997813 0.9556816 #>  [9913] 0.9793652 0.8622503 0.9766371 0.9935744 0.8017272 0.9766922 0.9830624 #>  [9920] 0.9793652 0.7305888 0.9973513 0.9995975 0.8840713 0.9345250 0.9825720 #>  [9927] 0.9476566 0.9848710 0.8235631 0.9696680 0.9793652 0.9987331 0.7449281 #>  [9934] 0.9847614 0.9773638 0.9844791 0.9869513 0.8512060 0.8947465 0.9851881 #>  [9941] 0.9777571 0.9955903 0.9775504 0.9822786 0.9987331 0.7353054 0.9826328 #>  [9948] 0.9778981 0.9103081 0.9847614 0.9787953 0.9785030 0.9830624 0.8567344 #>  [9955] 0.9782465 0.9833336 0.9765032 0.9794489 0.9775886 0.9842387 0.9787953 #>  [9962] 0.9989365 0.9847614 0.9103081 0.9958395 0.9832292 0.9755667 0.9664453 #>  [9969] 0.9793652 0.9950893 0.9884729 0.9935744 1.0017501 0.7305888 0.9830624 #>  [9976] 0.9997153 0.8894341 0.9771967 0.9884729 0.8456708 0.9844644 0.9916576 #>  [9983] 0.9839151 0.9987331 0.8346005 0.9825976 0.9997025 0.9843502 0.9770488 #>  [9990] 0.9815100 0.9476566 0.9771822 0.7400856 0.9961252 0.8017272 0.9932328 #>  [9997] 0.9848710 0.8290754 0.9965801 0.9829479 0.9770488 0.9770488 0.9836360 #> [10004] 0.9787953 0.9782465 0.9766371 0.7751867 0.9791663 0.8456708 0.9153448 #> [10011] 0.9991336 0.9994060 0.8947465 0.9851353 0.9829412 0.9890505 0.8346005 #> [10018] 0.9556816 0.9517481 0.9830784 1.0010589 0.9907143 0.9807495 0.8180681 #> [10025] 0.9825776 1.0002793 0.9908574 0.9390361 0.9908574 0.9696680 0.9900967 #> [10032] 0.9882461 0.8401339 0.9890505 0.9983696 0.9834168 0.9764893 0.9696680 #> [10039] 0.9862272 0.9877017 0.9973513 0.9000012 0.9051910 0.8947465 0.9807495 #> [10046] 0.9847099 0.9830624 0.9843563 0.9767691 0.9978893 0.9153448 1.0029513 #> [10053] 0.9806086 0.9630385 0.9987331 0.9787953 0.9935744 0.9778981 0.9390361 #> [10060] 0.9390361 0.9298917 0.9810467 0.9815100 0.9836360 0.9829479 0.9851903 #> [10067] 0.9872256 0.9594481 0.9815100 0.9843563 0.9935744 0.9801978 0.8947465 #> [10074] 0.9202932 0.8125945 0.8786649 0.9820000 0.8456708 0.9890505 0.9345250 #> [10081] 0.9855336 0.9967602 0.9767140 0.9958395 0.9975461 0.8125945 0.9696680 #> [10088] 0.9794489 0.9810318 0.9832387 0.9994060 0.9807495 0.9994419 0.9556816 #> [10095] 0.7449281 0.9997153 0.9947791 0.9877017 0.9939966 0.9765032 0.9793652 #> [10102] 0.9594481 0.7498311 0.9780630 0.9825776 0.9995975 0.9767691 0.8290754 #> [10109] 0.9785928 0.7547929 0.9517481 0.8894341 0.9791663 0.9834168 0.8180681 #> [10116] 0.9945857 0.9594481 0.9777571 0.9770488 0.9807495 0.9877017 0.9794489 #> [10123] 0.9298917 0.9202932 0.9765032 0.9872256 0.9970669 0.9978893 0.9850002 #> [10130] 0.7751867 0.8786649 0.9916576 0.9954485 0.8290754 0.9768079 0.9855336 #> [10137] 0.9961252 0.9827519 0.9865720 0.9822786 0.8071463 0.9848110 0.9764893 #> [10144] 0.9997025 0.9947371 0.9989987 0.9787953 0.9000012 0.9807495 0.8677481 #> [10151] 0.9810318 0.8894341 0.9877017 0.8732217 0.9828674 0.9997153 0.9807495 #> [10158] 0.8125945 0.9873832 0.9982020 0.7963408 0.9994060 0.9991336 1.0038790 #> [10165] 0.9765043 0.8677481 0.7804105 0.9764893 0.9770641 0.9825799 0.9765732 #> [10172] 0.9594481 0.9872256 0.9782465 0.9345250 0.8235631 0.9961252 0.9892596 #> [10179] 0.9967614 0.9980193 0.9770641 0.9103081 0.9630385 1.0002283 0.9890505 #> [10186] 0.9202932 0.9872256 0.9202932 0.9787953 0.9850513 0.8894341 0.9916576 #> [10193] 0.9958395 0.8401339 0.9954485 0.8732217 0.9997680 0.9594481 0.9997025 #> [10200] 0.9630385 0.9696680 0.9816628 0.7305888 0.9829412 0.9775886 0.9815100 #> [10207] 0.7305888 0.7909905 0.9932328 0.9995975 0.8622503 0.9556816 0.9967602 #> [10214] 0.9765322 0.9852086 0.9982020 0.9785928 0.9807495 0.9103081 0.9765032 #> [10221] 0.9824785 0.9810318 0.9991447 0.9825173 0.9345250 0.9996303 0.9849284 #> [10228] 0.9810467 0.9830784 0.9997025 0.9842387 0.8840713 0.9869707 0.9777571 #> [10235] 0.9958395 0.9767691 0.9766922 0.9345250 0.9854689 0.9900562 0.9051910 #> [10242] 1.0014014 0.9850631 0.9767140 0.9791104 0.8786649 0.9775886 0.9939966 #> [10249] 0.7648848 0.9991447 1.0045472 0.8894341 0.8456708 0.9476566 0.8512060 #> [10256] 0.7598115 0.9630385 0.9975461 0.9517481 0.9844791 0.9994419 0.9830624 #> [10263] 0.8947465 0.9862272 0.7449281 0.7963408 0.8346005 1.0043969 0.9766267 #> [10270] 0.8235631 0.9851353 0.9153448 0.9807495 0.9727079 0.9556816 0.9807495 #> [10277] 0.9994722 0.9664453 0.9935744 0.9970669 0.9994419 0.9826748 0.9845685 #> [10284] 0.9851090 0.9890505 0.9995975 0.9907143 0.9807495 0.9907143 0.9791104 #> [10291] 0.9765766 0.9932328 0.9771822 0.9434163 0.9630385 0.9850513 0.9782328 #> [10298] 0.9862272 0.9848710 0.8677481 0.9153448 0.9390361 0.9852361 0.8512060 #> [10305] 0.9967614 0.9696680 0.9892596 0.9905798 0.9202932 0.9967614 0.9777571 #> [10312] 0.9994060 0.9890505 0.9051910 0.9727079 0.8456708 0.8180681 0.9967614 #> [10319] 0.8622503 0.9978893 0.8947465 0.9777398 0.9696680 0.9556816 0.9051910 #> [10326] 0.9801874 0.9830784 0.9390361 0.7400856 0.8567344 0.9594481 0.9556816 #> [10333] 0.9810467 0.9865720 0.9153448 1.0027749 0.8947465 0.9594481 0.9051910 #> [10340] 0.9251449 0.9987863 0.7804105 0.9798111 0.9773638 0.8456708 0.9986322 #> [10347] 0.7909905 0.9961252 0.9727079 0.9852095 0.9812431 0.8947465 0.8346005 #> [10354] 0.9983696 0.9991447 0.9947791 0.9852361 0.8235631 0.9797718 0.9767140 #> [10361] 0.9103081 0.8622503 0.9765323 0.9967602 0.9835535 0.8180681 0.9932328 #> [10368] 0.9000012 0.8840713 0.9785030 0.8947465 0.8456708 0.9884729 0.9153448 #> [10375] 0.9825173 0.9848710 0.9806095 0.8677481 0.8786649 0.9900562 0.9907143 #> [10382] 0.9967614 0.7700107 0.7598115 0.9785030 0.9922209 0.9982020 0.9851162 #> [10389] 0.9051910 0.9773093 0.9771967 0.9852361 0.9814536 0.9947371 1.0041701 #> [10396] 0.9765323 0.9434163 0.9872256 0.7547929 0.9630385 0.9202932 0.9765323 #> [10403] 0.8677481 0.8290754 0.8622503 0.7498311 0.9806095 0.9814536 0.9855336 #> [10410] 0.9907143 0.9850631 0.9820000 0.9916576 0.9664453 0.8401339 0.9630385 #> [10417] 0.9965801 0.9852361 0.8786649 0.9836360 0.7963408 0.9782328 0.9997153 #> [10424] 0.8235631 0.9594481 0.8180681 0.9153448 0.9476566 0.9630385 0.7856794 #> [10431] 0.8732217 0.9975461 0.7700107 0.8786649 0.9997153 0.8180681 0.9830624 #> [10438] 0.9801978 0.9852361 0.9000012 0.9997153 0.9967602 0.7804105 0.8017272 #> [10445] 0.8346005 0.9727079 0.8346005 0.9517481 0.9997153 0.8947465 0.9842387 #> [10452] 0.9830643 0.9987331 0.9815100 0.8290754 0.9861882 0.8071463 0.9997153 #> [10459] 0.9434163 0.9890505 0.9995975 0.7909905 0.9782340 0.9829479 0.9935744 #> [10466] 0.8947465 0.8401339 0.9991336 0.9995975 0.9768571 0.9987863 0.9922209 #> [10473] 0.9798111 0.9765043 0.9594481 0.9991377 0.9517481 0.9000012 0.9782465 #> [10480] 0.9820000 0.8125945 0.9826328 0.9773638 0.8401339 0.8840713 0.9770488 #> [10487] 0.7751867 0.9997025 0.8622503 0.9779844 0.9764893 0.8401339 0.9434163 #> [10494] 0.8894341 0.9755667 0.8732217 0.9808202 0.8456708 0.9845991 0.9872256 #> [10501] 0.9556816 0.8180681 0.9000012 0.8290754 0.9434163 0.9958395 0.9767140 #> [10508] 0.9997025 0.8894341 0.9806086 0.9791104 0.9830784 0.9298917 0.9890505 #> [10515] 0.9630385 0.9798111 0.9630385 0.9153448 0.7963408 0.7909905 0.9907143 #> [10522] 0.9935744 0.8622503 0.8840713 0.8840713 0.8947465 0.8622503 0.7400856 #> [10529] 0.8677481 0.7648848 0.9907143 0.8290754 0.8017272 0.9907143 0.7400856 #> [10536] 0.7598115 0.7449281 0.8180681 0.9978893 0.8786649 0.9988538 0.7498311 #> [10543] 0.8290754 0.8456708 0.9000012 0.9967602 0.7353054 0.9630385 0.8401339 #> [10550] 0.7648848 0.9982020 0.8071463 0.9000012 0.9908574 0.7353054 0.9982020 #> [10557] 0.7648848 0.9664453 0.9967614 0.9830784 0.7598115 0.7498311 0.9345250 #> [10564] 0.9765766 0.8786649 0.9785928 0.7400856 0.8071463 0.7305888 0.8622503 #> [10571] 0.8017272 0.9872256 0.9907143 0.7498311 0.9801978 0.7305888 0.7449281 #> [10578] 0.8235631 0.9908574 0.9251449 0.9820000 0.9954485 0.9851162 0.9727079 #> [10585] 0.7400856 0.8401339 0.7400856 0.9973513 0.9851090 0.7751867 0.7598115 #> [10592] 0.7856794 0.7648848 0.8180681 0.9807495 0.9630385 0.9967602 0.7804105 #> [10599] 0.9967614 0.9807495 0.7547929 0.8512060 0.9696680 1.0038790 0.9696680 #> [10606] 0.8512060 0.9967614 0.7400856 0.9935744 0.8894341 0.9935744 0.9476566 #> [10613] 0.8180681 0.9103081 0.7353054 0.8512060 0.8622503 0.7856794 0.7700107 #> [10620] 0.9298917 0.9390361 0.9696680 0.9765043 0.9991447 0.9983696 0.7400856 #> [10627] 0.8125945 0.9298917 0.9345250 0.7498311 0.9907143 0.8290754 0.8567344 #> [10634] 0.9877017 0.9967602 0.9967602 0.8840713 0.7498311 0.8401339 0.7498311 #> [10641] 0.7353054 0.9202932 0.9594481 0.7700107 0.8732217 0.9345250 0.7963408 #> [10648] 0.9987863 0.7449281 0.7353054 0.9000012 0.8125945 0.7498311 0.9997153 #> [10655] 0.8235631 0.7498311 0.9890505 0.8125945 0.8401339 0.8456708 0.9982020 #> [10662] 0.7547929 0.9153448 0.8622503 0.7856794 0.9961252 0.8567344 0.9202932 #> [10669] 0.8894341 0.8071463 0.8346005 0.7700107 0.9202932 0.9782465 0.8456708 #> [10676] 0.7449281 0.7751867 0.8346005 0.7449281 0.8512060 0.8235631 0.7700107 #> [10683] 0.9767691 0.7353054 0.8290754 0.9251449 0.7498311 0.9630385 0.9794489 #> [10690] 0.7856794 0.7547929 0.8512060 0.9872256 0.7648848 0.8456708 0.7353054 #> [10697] 0.9954485 0.9051910 0.9345250 0.7700107 0.9983696 0.7400856 0.7400856 #> [10704] 0.8677481 0.8732217 0.9983696 0.9830784 0.9825173 0.8290754 0.7909905 #> [10711] 0.9390361 0.9837555 0.7700107 0.8235631 0.7751867 0.7804105 0.9852095 #> [10718] 0.9806095 0.7598115 0.9434163 0.8622503 0.8401339 0.9785928 0.8290754 #> [10725] 0.9852361 0.7498311 0.9939966 0.9345250 0.7449281 0.7449281 0.9815100 #> [10732] 0.8456708 0.9801978 0.9991336 0.9843502 0.9850513 0.9922209 0.7598115 #> [10739] 0.9973513 0.7449281 0.8732217 0.9251449 0.9978893 0.9768079 0.9766371 #> [10746] 0.9755667 0.9994419 0.9978223 0.9848710 0.9727079 0.9785928 1.0012543 #> [10753] 0.7498311 0.7963408 0.9806095 0.9517481 0.9765043 0.9850513 0.9818704 #> [10760] 0.8567344 0.7498311 0.9849821 0.9202932 0.9935744 0.9807495 0.9806095 #> [10767] 0.7547929 0.7751867 0.8947465 0.7598115 0.8346005 0.8346005 0.9848710 #> [10774] 0.9924512 0.9947791 0.9766371 0.9967614 0.9991447 0.9830554 0.9994419 #> [10781] 0.8512060 0.8894341 0.9982020 0.9765032 0.9434163 0.9000012 0.9775504 #> [10788] 0.8840713 0.9845248 0.7400856 0.9298917 0.9345250 0.9935744 0.8180681 #> [10795] 0.9828673 0.8346005 0.7598115 0.8732217 0.9991336 0.9807495 0.9947791 #> [10802] 0.7353054 0.9908574 0.9982020 0.7547929 0.9153448 0.9794489 0.9907143 #> [10809] 0.9782465 0.7598115 0.9855336 0.9202932 0.8235631 0.9202932 0.8401339 #> [10816] 0.9852361 0.8840713 0.8456708 0.9696680 0.9594481 0.8512060 0.9766922 #> [10823] 0.9153448 0.8840713 0.9983696 0.9997153 0.9476566 0.9908574 0.7498311 #> [10830] 0.9975461 0.9997153 0.7648848 0.9390361 0.9850631 0.9202932 0.9841310 #> [10837] 0.9924512 0.9820000 0.9795671 0.9848710 0.9517481 0.9390361 0.9852361 #> [10844] 0.9251449 0.9997025 0.9991336 0.9153448 0.8786649 0.9345250 0.9816628 #> [10851] 0.9727079 0.9755667 0.8456708 0.9987863 0.9476566 0.7498311 0.9973513 #> [10858] 0.9808202 0.8071463 0.9973513 0.9765323 0.9939966 1.0012040 0.9845991 #> [10865] 0.9434163 0.8947465 0.9782340 0.9979512 0.9935744 0.7400856 0.9834168 #> [10872] 0.9826770 0.7449281 0.8894341 0.9775504 0.9251449 0.9848710 0.9780630 #> [10879] 0.7353054 0.9907143 0.9000012 0.9983696 0.9556816 0.9251449 0.8456708 #> [10886] 0.9768079 0.9842130 0.7963408 0.9797718 0.9594481 0.9935744 0.9994060 #> [10893] 0.9978893 0.9774449 0.9797718 0.9784108 0.8732217 0.9830784 0.9765043 #> [10900] 0.8290754 0.9820000 0.8512060 0.9630385 0.8947465 0.7909905 0.7400856 #> [10907] 0.8017272 0.8235631 0.9782465 0.9787953 0.9765732 0.9996303 0.9848710 #> [10914] 0.8947465 0.9997153 0.9765032 0.9916576 0.9862272 0.9770488 0.8947465 #> [10921] 0.7400856 0.9987863 0.9767691 0.8786649 0.7353054 0.9773638 0.7353054 #> [10928] 0.9664453 0.9836360 0.9517481 0.9801978 0.9801978 0.7547929 0.9765043 #> [10935] 0.9770488 0.8567344 0.9476566 0.9771967 0.9862272 0.9997153 0.9807495 #> [10942] 0.9935744 0.7598115 0.9051910 0.9855336 0.9000012 0.9766371 0.9390361 #> [10949] 0.9785928 0.9000012 0.7547929 0.9770641 0.9434163 0.9727079 0.8235631 #> [10956] 0.8732217 0.9884729 0.9954485 0.9994060 0.8017272 0.8290754 0.9872256 #> [10963] 0.9780630 0.8786649 0.9787953 0.9890505 0.9594481 0.8732217 0.9434163 #> [10970] 0.9987331 0.7400856 0.9994419 0.9851162 0.9810467 0.9884729 0.9989185 #> [10977] 0.9843502 0.8456708 0.8401339 0.9051910 0.9922209 0.8786649 0.8456708 #> [10984] 0.9807495 0.9755667 0.9768571 0.8235631 0.9908574 0.7804105 0.9806095 #> [10991] 0.7804105 0.9765043 0.9975461 0.9785928 0.9844791 0.9774449 0.8235631 #> [10998] 0.9994060 0.9764898 0.9850002 0.9799787 0.7498311 0.8512060 0.9806086 #> [11005] 0.9390361 0.9842449 0.8840713 0.9932328 0.7700107 0.9434163 0.8894341 #> [11012] 0.8346005 0.9975461 0.9696680 0.9696680 0.7498311 0.9517481 0.7963408 #> [11019] 0.9987331 0.9922209 0.8125945 0.9850513 0.9000012 0.9907143 0.8512060 #> [11026] 0.9967602 0.8512060 0.9202932 0.9664453 0.9851881 0.9556816 0.7547929 #> [11033] 0.8346005 0.9797718 0.9988681 0.9777398 0.9869513 0.9517481 0.9922209 #> [11040] 0.9908574 0.8346005 0.9000012 0.9664453 0.8567344 0.9995975 0.7700107 #> [11047] 0.9251449 0.9978417 0.9852361 0.9773638 0.9845248 0.9000012 0.9900562 #> [11054] 0.9851090 0.9967602 0.9877017 0.9771967 0.8125945 0.8512060 0.8732217 #> [11061] 0.9842499 0.8401339 0.9995975 0.7598115 0.8125945 0.8622503 0.9768079 #> [11068] 0.8180681 0.9852361 0.9855336 0.8017272 0.9882461 0.9770488 0.9851881 #> [11075] 0.7598115 0.7909905 0.8125945 0.9594481 0.9916576 0.9908574 0.9961252 #> [11082] 0.9664453 0.9298917 0.9251449 0.8290754 0.9755667 0.9935744 0.9153448 #> [11089] 0.8894341 0.9390361 0.8894341 0.7305888 0.8732217 0.8622503 0.9434163 #> [11096] 0.9890505 0.9556816 0.9997153 0.7305888 0.9787953 0.7648848 0.7700107 #> [11103] 0.8017272 0.7449281 0.9766922 0.7909905 0.9997025 0.9777571 0.9958395 #> [11110] 0.8622503 1.0044814 0.9755667 0.9892596 0.8512060 0.9967614 0.9922209 #> [11117] 0.9202932 0.9900562 0.9755667 0.7909905 0.7648848 0.9848710 0.9153448 #> [11124] 0.9517481 0.9153448 0.9997153 0.9997025 0.9884729 0.8567344 0.9837652 #> [11131] 0.9764898 1.0045472 0.9755667 0.9850002 0.9103081 0.9947791 0.9961252 #> [11138] 0.9782465 0.9924512 0.9896209 0.8235631 0.9987863 0.8346005 0.9782465 #> [11145] 0.9517481 0.7648848 0.9630385 0.9826748 0.8290754 0.8786649 0.9103081 #> [11152] 0.8456708 0.9782328 0.9843563 0.8567344 0.9994419 0.8180681 0.7751867 #> [11159] 0.7400856 0.9947791 0.7598115 0.9991447 0.9830624 0.9803976 0.8401339 #> [11166] 0.8512060 0.9791104 0.8290754 0.9818704 0.8567344 0.9993249 0.9995975 #> [11173] 0.8071463 0.9793652 0.9967614 0.9755667 0.9994060 0.9907143 0.7598115 #> [11180] 0.8071463 0.9850631 0.9997680 0.7498311 0.9873832 0.9765766 0.8401339 #> [11187] 0.7305888 0.8290754 0.7305888 0.9983696 0.7449281 0.9664453 0.9434163 #> [11194] 0.8622503 0.9837555 0.9947791 0.9947371 0.9967614 0.9907143 0.9755667 #> [11201] 0.9828674 0.8512060 0.9900562 0.9051910 0.7700107 0.9836360 0.9251449 #> [11208] 0.9987331 1.0013841 0.7598115 0.9967602 0.9925644 0.7305888 0.9755667 #> [11215] 0.9996303 0.9664453 0.9916576 0.9664453 0.7400856 0.9967602 0.9922209 #> [11222] 0.9000012 0.8180681 0.9764898 0.8017272 0.9982020 0.9907143 0.8947465 #> [11229] 0.8071463 0.9997153 0.9987863 0.7547929 0.8622503 0.9997025 0.7648848 #> [11236] 0.9767691 0.9103081 0.9000012 0.9773638 0.9765322 0.9995975 0.9765732 #> [11243] 0.9476566 0.9850513 0.9773638 0.9727079 0.9780630 0.9982020 0.8947465 #> [11250] 0.9517481 0.9978893 0.9831296 0.9892596 0.8622503 0.7449281 0.8622503 #> [11257] 1.0032245 0.9890505 0.7498311 0.7449281 1.0002793 0.9907143 0.9848710 #> [11264] 0.9991336 0.9771822 0.9153448 0.9153448 0.9835892 0.9978893 0.9900562 #> [11271] 0.9434163 0.8786649 0.9843502 0.9935744 0.9982020 0.9830554 0.9000012 #> [11278] 0.9820000 0.8290754 0.7498311 0.9852361 0.8512060 0.8567344 0.9877017 #> [11285] 0.9982020 0.9922209 0.9345250 0.9935744 0.9791104 0.9842387 0.9826328 #> [11292] 0.8456708 0.8512060 0.9851090 0.8235631 0.9767691 0.8125945 0.9900562 #> [11299] 0.9842387 0.9594481 0.7700107 0.9791104 0.9755667 0.9836360 0.8456708 #> [11306] 0.8125945 0.8235631 0.8894341 0.9476566 0.9852159 0.9997153 0.9872256 #> [11313] 0.9799787 0.9852361 0.9830784 0.9922209 0.7547929 0.9769193 0.9994060 #> [11320] 0.8125945 0.9830355 0.9390361 0.9872256 0.9967602 0.7400856 0.8894341 #> [11327] 0.9476566 0.9825173 0.7648848 0.9982020 0.8180681 0.8840713 0.8947465 #> [11334] 0.7449281 0.8622503 0.8180681 0.9840156 0.9345250 0.8180681 0.9594481 #> [11341] 0.7353054 0.8456708 0.9476566 0.9799787 0.9807495 0.9994060 0.9825976 #> [11348] 0.9791663 0.9978893 0.9994419 0.9939966 0.9345250 0.8840713 0.9000012 #> [11355] 0.9847099 0.9947371 0.9390361 0.9810467 0.8840713 0.9298917 0.9961252 #> [11362] 0.8512060 0.9820000 0.9770641 0.9771967 0.7909905 0.9996303 0.9298917 #> [11369] 0.8456708 0.9769193 0.8840713 0.9390361 0.7598115 0.9782340 0.9994419 #> [11376] 0.9103081 0.9103081 0.9769193 0.7353054 0.7305888 0.9774449 0.9907143 #> [11383] 0.9815100 1.0005171 0.9000012 0.9924512 0.8677481 0.7909905 0.7547929 #> [11390] 0.9932328 0.9967602 0.9830624 0.9922209 0.8567344 0.9916576 0.7305888 #> [11397] 0.8732217 0.9799787 0.8180681 0.9890505 0.9795671 0.9765322 0.9051910 #> [11404] 0.8732217 0.9947371 0.9251449 0.9935744 0.9935744 0.8622503 0.9727079 #> [11411] 0.9991700 0.9779844 0.9862272 0.7400856 0.9987863 0.9896209 0.9996303 #> [11418] 0.9298917 0.9958395 0.9791104 0.9103081 0.8894341 0.9975461 0.9935744 #> [11425] 0.9764893 0.9787953 0.9828673 0.9947791 0.9202932 0.9153448 0.8512060 #> [11432] 0.9892596 0.9815100 0.8017272 0.9830784 0.9390361 0.8947465 0.8786649 #> [11439] 0.8840713 0.8125945 0.8786649 0.9978893 0.7305888 0.9827949 0.9825173 #> [11446] 0.9765043 0.9766267 0.7547929 0.9298917 0.9771967 0.7648848 0.8840713 #> [11453] 0.8346005 0.7963408 0.9967602 0.9807495 0.9103081 0.9845685 0.9298917 #> [11460] 0.9996279 0.7498311 0.9153448 0.9983696 0.8512060 0.9828674 1.0046401 #> [11467] 0.8677481 0.8947465 0.9947371 0.9765766 0.8456708 0.9556816 0.9807495 #> [11474] 0.9892596 0.8567344 0.7449281 0.9924512 0.8947465 0.7909905 0.9907143 #> [11481] 0.8947465 0.9782465 0.9791104 0.8235631 0.9517481 0.7305888 0.9298917 #> [11488] 0.9835571 0.9907143 0.9755667 0.9830784 0.9390361 0.7449281 0.7856794 #> [11495] 0.8622503 0.9251449 0.9782465 0.9997153 0.7400856 0.9987863 0.9771967 #> [11502] 0.9785030 0.9818704 0.9517481 0.9877017 0.9832387 0.9842449 0.7547929 #> [11509] 0.8677481 0.9991336 0.8071463 0.9869513 0.7963408 0.9825799 0.9771822 #> [11516] 1.0024061 0.8235631 0.8947465 0.9841310 0.7804105 0.9773638 0.9051910 #> [11523] 0.9556816 0.9958395 0.9851162 0.9884729 0.9983696 0.9794489 0.9826748 #> [11530] 0.9784108 0.9808202 0.7598115 0.9991336 0.8346005 0.9153448 0.9834168 #> [11537] 0.9103081 0.9848710 0.7353054 0.9765032 0.7598115 0.9877017 0.9830784 #> [11544] 0.7400856 0.9983696 0.8840713 0.9916576 0.9764893 0.7305888 1.0045952 #> [11551] 0.9517481 0.9900562 0.9829412 0.9764898 0.9765323 0.9843563 0.9390361 #> [11558] 0.9434163 0.7305888 0.9907143 0.7400856 0.8290754 0.7400856 0.9793652 #> [11565] 0.9995975 0.8017272 0.9994419 0.8071463 0.9855336 0.7598115 0.8401339 #> [11572] 0.9890505 0.9556816 0.7353054 0.9973513 0.8786649 0.9664453 0.7305888 #> [11579] 0.9664453 0.9390361 0.8017272 0.9829412 0.9994419 0.8622503 0.7547929 #> [11586] 0.9994060 0.9852159 0.9777398 0.9765323 0.9947791 0.9958395 0.9833336 #> [11593] 0.9765323 1.0024092 0.9997153 0.7909905 0.9975461 0.9834168 0.7305888 #> [11600] 0.7353054 0.9830624 0.9862272 0.9884729 0.9958395 0.9434163 0.9390361 #> [11607] 0.9807495 1.0046401 0.9825173 0.8840713 0.9390361 0.9997025 0.9103081 #> [11614] 0.9994419 0.9900562 0.8071463 0.9051910 0.9000012 0.9251449 0.7804105 #> [11621] 0.8346005 0.9051910 0.9831296 0.8786649 0.8346005 0.7909905 0.9202932 #> [11628] 0.9830784 0.8512060 0.8622503 0.7700107 0.8180681 0.9793652 0.9556816 #> [11635] 0.8071463 0.8894341 0.9755667 0.7449281 0.9848203 0.8180681 0.9820000 #> [11642] 0.9000012 0.7963408 0.9983387 0.9988699 0.9251449 0.9908574 0.9973513 #> [11649] 0.9935744 0.9890505 0.7598115 0.9983696 0.9932328 0.9630385 0.9947791 #> [11656] 0.9826332 0.9884729 0.8567344 0.9996303 0.9696680 1.0001188 0.9840678 #> [11663] 0.8180681 0.9907143 0.8947465 0.9782465 0.9939966 0.8512060 0.9978893 #> [11670] 0.9780630 0.9696680 0.7700107 0.9847614 0.9851548 0.9848203 0.9835892 #> [11677] 0.9770641 0.9978893 0.9998103 0.9967602 0.9820000 0.9855336 0.7909905 #> [11684] 0.9434163 0.9967602 0.9298917 0.7449281 0.9517481 0.9771822 0.9947791 #> [11691] 0.9785928 0.9961252 0.9995975 0.7400856 0.9051910 0.9995975 0.7963408 #> [11698] 0.9755667 0.9755667 1.0045472 0.9983696 0.9517481 0.8894341 0.9997025 #> [11705] 0.7305888 0.9995975 0.9390361 0.8732217 0.9830784 0.9476566 0.9991336 #> [11712] 0.9051910 0.9787953 0.9770641 0.9755667 0.8290754 0.9994060 0.9153448 #> [11719] 0.7449281 0.9794489 0.9852361 0.9777571 0.9755667 0.9769556 0.9000012 #> [11726] 0.7305888 0.8017272 0.9000012 0.9801978 0.7400856 0.8180681 0.9977927 #> [11733] 0.7751867 0.9791104 0.7648848 0.8125945 0.9773093 0.9345250 0.7498311 #> [11740] 0.9768079 0.7909905 0.9727079 0.8947465 0.9782465 0.9476566 0.7700107 #> [11747] 0.8786649 0.9630385 0.9476566 0.9807495 0.9766267 0.8180681 0.8512060 #> [11754] 0.7449281 0.8235631 0.7700107 0.7598115 0.7449281 0.9982020 0.7598115 #> [11761] 0.9807495 0.8622503 0.9390361 0.9476566 0.8512060 0.8840713 0.7856794 #> [11768] 0.7963408 0.9945857 0.8290754 0.9103081 0.7400856 0.9890505 0.9967614 #> [11775] 0.9765032 0.9782465 0.8125945 0.9696680 0.7598115 0.9835892 0.8456708 #> [11782] 0.7856794 0.7700107 0.9103081 0.9965801 0.9987331 0.7751867 0.9777571 #> [11789] 0.9815100 0.9983696 0.7598115 0.9202932 0.8125945 0.8512060 0.9103081 #> [11796] 0.9826770 0.9828673 0.7498311 0.8017272 0.9967614 0.7856794 0.7751867 #> [11803] 0.9795671 0.7751867 0.9630385 0.9775886 0.9958395 0.9967614 0.9820758 #> [11810] 0.9830624 0.9907143 0.9770641 0.9975461 0.8017272 0.9594481 0.7498311 #> [11817] 0.9770641 0.8235631 0.9825976 0.9769556 0.9782465 0.7804105 0.9997153 #> [11824] 0.9850631 0.9884729 0.8290754 0.9830784 0.9852361 0.7598115 0.9987331 #> [11831] 0.9803976 0.9830624 0.7963408 0.8622503 0.9820000 0.9833714 0.9892596 #> [11838] 0.9801978 0.8346005 0.9844791 0.7498311 0.9935744 0.9771822 0.9202932 #> [11845] 0.9852361 0.9153448 0.9517481 0.8346005 0.9390361 0.9924512 0.7648848 #> [11852] 0.9251449 0.9153448 0.8622503 0.8125945 0.7700107 0.7700107 0.7498311 #> [11859] 0.9877017 0.7498311 0.8401339 0.9556816 0.8677481 0.7498311 0.7856794 #> [11866] 0.7400856 0.9390361 0.9345250 0.8894341 1.0027043 0.7963408 0.9755667 #> [11873] 0.8017272 0.8456708 0.9556816 0.8732217 0.9785928 0.9947791 0.9390361 #> [11880] 0.9967614 0.8677481 0.9103081 0.8947465 0.7400856 0.9987331 0.9103081 #> [11887] 0.9842387 0.8512060 0.9826328 0.8622503 0.9765766 0.9556816 0.8622503 #> [11894] 0.9766371 0.9755667 0.8125945 0.9908574 0.7648848 0.9782328 0.9630385 #> [11901] 0.9787797 0.9908574 0.7909905 0.9852361 0.8017272 0.7751867 0.9345250 #> [11908] 0.9202932 0.9983696 0.8732217 0.9202932 0.9847614 0.7751867 0.8290754 #> [11915] 0.7856794 0.9975461 0.7498311 0.9755667 0.8235631 0.9996303 0.7353054 #> [11922] 0.8947465 0.7598115 0.9830784 0.9000012 0.9884729 0.9978893 0.8180681 #> [11929] 0.8235631 0.8346005 0.7804105 0.9837652 0.9051910 0.7648848 0.7353054 #> [11936] 0.8622503 0.9767140 0.9782465 0.8622503 0.9987071 0.9594481 0.9755667 #> [11943] 0.9892596 0.8677481 0.8732217 0.7353054 0.9476566 0.9842387 0.7547929 #> [11950] 0.7547929 0.9816628 0.8840713 0.9784108 0.9849821 0.9298917 0.9434163 #> [11957] 0.9872256 0.9769556 0.9202932 0.7305888 0.8567344 0.7648848 0.9251449 #> [11964] 0.9153448 0.9995975 0.7856794 0.9630385 0.9987331 0.9774449 0.8235631 #> [11971] 0.7498311 0.8125945 0.9983696 0.8840713 0.7856794 0.9771967 0.9810318 #> [11978] 0.9991447 0.9771822 0.9696680 0.8512060 0.7400856 0.9696680 0.9769556 #> [11985] 0.9973513 0.8235631 0.9967614 0.7598115 0.9782340 0.7498311 0.7305888 #> [11992] 0.9852361 0.9996303 0.9836360 0.9476566 0.9727079 0.9476566 0.9556816 #> [11999] 0.9848485 0.9517481 0.9978893 0.7648848 0.9830784 0.9769193 0.9984332 #> [12006] 0.8456708 0.9843563 0.9967602 0.7751867 0.9202932 0.9782465 0.9298917 #> [12013] 0.9994060 0.9834168 0.9996303 0.9836675 0.9958395 0.8732217 0.8017272 #> [12020] 0.8622503 0.9764893 0.8290754 0.9994060 1.0012279 0.9939966 0.9848710 #> [12027] 0.9826748 0.8894341 0.9051910 0.9907143 0.9103081 0.9390361 0.8894341 #> [12034] 0.9991447 0.9765323 0.9833336 0.9991336 0.7963408 0.8786649 0.9795671 #> [12041] 0.8456708 0.9755667 0.8677481 0.9967602 0.9773638 0.9850513 0.8840713 #> [12048] 0.9103081 0.7498311 0.9251449 0.9051910 0.8786649 0.9799787 0.8567344 #> [12055] 0.9916576 0.7963408 0.8125945 0.8456708 0.7498311 0.9815100 0.9775504 #> [12062] 0.9594481 0.7648848 0.8894341 0.9958395 0.9785928 0.9769556 0.7598115 #> [12069] 0.9594481 0.9000012 0.8290754 0.9835535 0.9994419 0.8567344 0.7449281 #> [12076] 0.9000012 0.9051910 0.8071463 0.9051910 1.0233834 0.8732217 0.9153448 #> [12083] 0.9982020 0.8235631 0.8401339 0.9103081 0.8947465 0.9947791 0.9872256 #> [12090] 0.8677481 0.9000012 0.9202932 0.7700107 0.8125945 0.9961252 #>  #> $adjusted #>     [1]  0.98523608  0.94765660  1.19177826  1.31316132  0.71673211  1.30766602 #>     [7]  0.74433841  1.31457906  0.60552462  0.32576975  0.73422826  0.97621656 #>    [13]  0.97691931  0.85382158  0.79931574  2.92235528  0.99888913  2.93870137 #>    [19]  1.07886143  1.71947085  0.92029316  1.53800381  1.00458890  3.90595912 #>    [25]  0.44800317  0.98060862  0.58693970  0.75432580  0.57340896  0.98487099 #>    [31]  0.97997870  1.18347264  1.17804577  1.04210668  1.69416021  0.79740910 #>    [37]  1.42816470  1.39629189  0.98363599  2.46212134  1.66619215  0.78148568 #>    [43]  1.40573864  0.81039867  0.78272864  1.32532881  0.71036635  1.32980180 #>    [49]  0.66420834  0.80099821  0.97944887  1.96962192  0.65537027  1.11587000 #>    [55]  0.72000098  1.44933388  0.72643167  0.33225341  0.64202567  1.38989635 #>    [61]  1.09894499  0.55430376  0.99165755  0.83128839  1.73678963  0.49276682 #>    [67]  0.72610551  1.95472753  1.50228094  0.49168572  1.63867912  0.99245122 #>    [73]  1.96400001  1.95315325  1.34421429  0.49250009  0.93022409  1.96495691 #>    [79]  0.83206708  0.47910952  0.98104670  1.20717676  1.08092659  0.65216432 #>    [85]  1.10156073  0.74978647  1.25627904  2.21988580  0.91646029  0.91977177 #>    [91]  0.48838456  0.97730925  1.47401223  0.96416451  0.99222090  1.24736167 #>    [97]  0.98459912  0.59805613  2.70156932  1.95353825  1.38442295  1.97390268 #>   [103]  0.93903610  0.97736376  0.95568160  1.32431036  0.94142667  0.36412324 #>   [109]  0.97556670  0.35690552  1.93289063  0.97685710  1.22105595  0.97650324 #>   [115]  1.63846404  1.46411221  2.49899369  1.20238353  0.67210714  0.91450549 #>   [121]  0.88355254  1.07004278  1.48270936  0.90530725  1.49375927  0.36304348 #>   [127]  0.98452483  1.13200705  0.99971529  0.98019784  1.20994268  1.12260415 #>   [133]  0.63177107  0.98905049  3.75614440  0.98487099  1.22593690  1.00000136 #>   [139]  0.90614670  1.39771739  1.30736947  0.79931574  0.74983115  0.97719673 #>   [145]  0.94765660  1.37881939  0.74374317  0.64357906  0.98470990  1.46479828 #>   [151]  0.65114265  0.42224404  0.77001066  1.32631610  1.30345142  2.00719776 #>   [157]  2.97735365  0.81799762  0.74969811  0.93452496  0.73556214  0.50020254 #>   [163]  0.98553363  0.65771470  0.74841700  1.32778602  0.74877717  0.49133849 #>   [169]  1.95472753  0.74969811  1.32095238  1.07514180  0.82341044  0.82101610 #>   [175]  0.98279489  1.70312811  1.09335306  1.19368449  0.97657663  1.00323560 #>   [181]  0.65320743  0.98849800  0.48948551  1.30345142  1.14080230  0.83334160 #>   [187]  0.76985572  1.06732093  1.31246694  1.66526081  0.82924224  0.73058882 #>   [193]  1.49871701  0.89421485  0.16167193  1.00102134  0.70113377  1.25257713 #>   [199]  1.12746217  1.01036717  0.85673436  0.39065482  0.78141530  0.93138678 #>   [205]  1.52909056  0.99490680  3.68624737  1.46582935  1.18467076  1.74644333 #>   [211]  1.49210561  0.81340589  0.98307843  0.49094148  0.97944887  1.23027641 #>   [217]  1.08738801  1.46899688  1.31231820  0.96966798  1.38179231  0.94341628 #>   [223]  0.49136558  0.84535606  0.73058882  0.72960516  1.11014849  0.96644532 #>   [229]  1.33021206  1.99926058  0.99571005  1.25204813  1.78889249  0.44737324 #>   [235]  1.78452761  0.95599354  1.46579510  1.71193133  0.65506508  0.49985765 #>   [241]  2.00882172  1.40005730  0.54318519  0.79705000  0.87415403  1.24196802 #>   [247]  0.74958144  1.00139427  1.01480494  1.05781961  0.65146449  0.62297514 #>   [253]  0.97773981  0.74869374  0.65403113  1.07118736  1.44850678  1.23368513 #>   [259]  1.58408991  0.80172722  0.65100216  1.67244280  0.65099284  0.98575597 #>   [265]  1.01588624  0.39852500  1.02857282  0.96572033  0.50572672  0.69499501 #>   [271]  1.00386172  0.79898652  2.24633151  0.89474648  0.82690246  1.11707987 #>   [277]  1.61153211  0.51918053  1.02828766  0.65616325  0.85120602  0.98770170 #>   [283]  1.42464649  0.88592771  0.65120526  0.97669216  3.98704550  1.46479828 #>   [289]  1.72450059  0.49361282  0.78415827  1.46684718  0.97736376  0.90831334 #>   [295]  0.98103184  0.92000074  1.76303268  1.25708706  0.98019784  1.32637217 #>   [301]  0.65233531  0.98187037  0.43212368  0.64942453  0.98423865  2.44295541 #>   [307]  0.56842182  1.50303888  0.74977686  2.17905413  0.74008564  1.33073659 #>   [313]  0.71759971  0.98074952  0.99473707  1.47721644  1.65865654  1.71683172 #>   [319]  0.49113931  0.94625450  1.00816072  1.46503824  1.61267645  0.74518081 #>   [325]  1.18018194  1.79180730  0.33074030  0.90530725  0.74972272  2.45765601 #>   [331]  1.95759065  0.97706411  0.99357442  1.97390268  1.22408077  0.62343505 #>   [337]  0.70945536  0.57986719  1.84058632  1.31796388  0.65748480  0.45768810 #>   [343]  0.71154729  0.99323277  1.33536084  1.95338431  1.10483357  0.84474311 #>   [349]  1.14448206  1.48023183  0.77040048  0.79077833  2.30778448  0.83951710 #>   [355]  2.99743402  0.49212244  1.65839905  1.25523556  1.03141951  1.49602702 #>   [361]  1.46904773  0.84013393  0.58938085  0.87322166  0.98511625  0.82381035 #>   [367]  0.78520801  0.78666686  1.84058632  1.63545041  1.95758639  3.90819502 #>   [373]  0.99357437  0.42014220  0.99873314  0.48899218  0.98151001  1.62934372 #>   [379]  0.56856185  0.74972272  1.55101649  1.38320978  2.49550504  1.19094146 #>   [385]  0.66674421  1.15583333  1.18457075  1.44849384  0.98962090  0.97650324 #>   [391]  0.60085131  1.29281233  2.49190056  1.47123029  0.60698220  1.46494004 #>   [397]  0.44177627  0.98459912  0.97730925  0.98770170  1.66599579  1.31770099 #>   [403]  0.87866489  0.98303553  1.99881192  1.11289459  0.99676022  2.43497265 #>   [409]  1.31630085  0.95568160  0.89913681  0.97912499  0.39698049  0.68383032 #>   [415]  1.24595028  0.78122581  0.97775706  0.76843506  1.68347237  0.98247845 #>   [421]  0.96242785  0.49181800  1.31097223  0.98251727  1.22119495  1.46819299 #>   [427]  1.04082558  0.66163414  0.65120526  0.35663619  0.54368802  0.84581216 #>   [433]  0.92865845  1.08000147  0.93334625  0.83460052  1.21945837  0.65170024 #>   [439]  0.99735135  1.37175824  0.53948209  1.73678963  1.25830455  2.00886716 #>   [445]  2.46217748  1.48045603  0.98257196  1.14681792  1.42111304  1.73678963 #>   [451]  1.68422867  0.47799677  1.48660355  1.43764033  0.65320743  1.06595407 #>   [457]  2.99743402  1.00086898  1.07740886  3.31579025  0.65416208  0.73817899 #>   [463]  0.49072680  1.44158272  2.93042365  1.73875523  0.42787267  1.52329923 #>   [469]  1.23957194  2.29254030  1.50499458  0.98168172  1.30555507  0.78253008 #>   [475]  1.96611080  0.78386390  0.97704875  0.97977178  1.49099491  0.66305345 #>   [481]  1.24056402  1.08996397  1.47563319  0.71189146  1.97038059  0.13634468 #>   [487]  1.19784242  1.50087184  0.99256435  0.98263279  0.82954042  1.86120268 #>   [493]  1.21491710  1.98490243  0.79788108  1.48959506  1.34421429  0.78646274 #>   [499]  0.86774806  1.26850617  0.84197264  1.76814254  0.95283259  1.40022322 #>   [505]  0.79332604  0.47587403  0.64961870  0.96303850  0.99780889  0.24849915 #>   [511]  0.56747068  1.95371420  1.13034342  1.43352240  0.97850297  0.66642019 #>   [517]  1.35179214  1.61051303  0.54977791  1.11778630  1.49233569  1.23154510 #>   [523]  0.72081319  0.98366746  0.98358920  0.76883178  0.78818887  0.99735135 #>   [529]  3.41776133  0.98247845  1.96573457  1.44617496  1.00030095  1.25012202 #>   [535]  1.46473390  0.77043080  0.67063912  0.21349498  1.14966706  1.30806226 #>   [541]  0.74518081  0.97601575  0.66057158  1.30198569  1.07819004  1.64876592 #>   [547]  0.97657323  0.55836080  1.30275215  1.96941981  1.39634983  0.63963208 #>   [553]  1.63752879  0.63963208  0.58615159  1.16281464  1.08579666  1.04136879 #>   [559]  1.24891705  1.30503961  0.81297225  1.06134332  0.55853993  0.97029176 #>   [565]  1.24342134  0.89024056  1.46521183  1.23029832  0.39072315  0.46951805 #>   [571]  0.89588344  0.98268393  0.83716471  0.54610377  1.22951981  1.47727280 #>   [577]  1.39880254  1.29413742  2.93014190  0.87866489  1.35000183  0.95944812 #>   [583]  1.23368918  1.49870046  0.32715120  0.65296591  0.49961866  4.03573150 #>   [589]  1.00421352  1.05097844  0.61815656  1.49514206  0.63676162  0.37488843 #>   [595]  0.77877080  4.92175101  1.08787082  0.43455103  2.30643679  1.13005157 #>   [601]  1.01441211  0.76563715  1.46391134  0.93178812  0.66945896  1.98011239 #>   [607]  0.81520540  1.28859375  1.96717839  0.57126588  1.39052588  0.98060950 #>   [613]  1.18467076  1.48934141  0.53056793  0.40230709  1.08345935  0.50227362 #>   [619]  1.60345445  0.92029316  0.85324157  0.42802849  2.52708426  1.30275215 #>   [625]  0.93584318  0.75122888  0.35826767  0.72415277  1.16844073  1.10976250 #>   [631]  0.86289874  1.97694582  1.22063034  1.32610691  1.62117978  1.48083846 #>   [637]  1.13763232  0.81365521  0.72664265  0.68285497  0.98697069  1.06605346 #>   [643]  0.86899724  0.73688795  1.52171674  2.61096119  1.70595217  0.98375546 #>   [649]  1.96615685  0.65674417  0.98366746  0.71381104  0.98251727  1.22149592 #>   [655]  1.12945799  1.45623215  2.31200052  0.60405056  0.49134197  0.99612517 #>   [661]  0.75859008  0.73695590  0.59343029  1.97047217  0.74757103  0.99544850 #>   [667]  0.49678721  0.65109137  0.16407240  1.28304397  1.41867670  1.47747320 #>   [673]  2.35297713  1.10751264  1.43758671  0.99820201  0.99878625  0.56905115 #>   [679]  0.84962768  0.53916704  0.49902234  0.56134810  0.77133161  0.72491653 #>   [685]  1.45114043  0.58056387  0.99913364  1.18885714  0.65233531  1.03533649 #>   [691]  1.70764316  0.35378111  0.74865151  0.78898176  0.78567941  0.94341628 #>   [697]  1.11078053  1.30367608  1.47484376  1.44310900  0.73817899  1.30310319 #>   [703]  1.02808124  1.25788837  0.99795118  0.87955291  1.17247694  0.36025974 #>   [709]  0.96230079  0.98905049  0.65114265  1.95547962  0.97730925  1.99352275 #>   [715]  1.53511699  0.91450549  0.90127696  0.98446443  1.46917330  0.56633425 #>   [721]  2.61282973  1.71690716  1.60243301  1.62959509  1.99757251  0.29991315 #>   [727]  1.40695856  1.36766063  0.89474648  1.74595425  0.73409650  0.49729284 #>   [733]  0.58912978  0.56884128  0.90519096  1.02677225  0.88931498  1.34690173 #>   [739]  1.02088007  0.53271112  1.02040047  0.59614465  0.83063352  0.39322496 #>   [745]  3.90650677  4.89296414  0.79257143  0.65665475  1.38839689  1.17155319 #>   [751]  0.59948680  0.90398915  4.85995620  0.54576354  0.53621586  2.22358528 #>   [757]  0.98227863  1.46660972  1.24962810  0.99357437  0.66057158  0.97841080 #>   [763]  2.27857511  1.97023250  0.91973365  1.63083828  1.29225152  0.97685710 #>   [769]  0.71214382  0.24978617  0.97511341  1.81038192  0.59982149  0.55799416 #>   [775]  1.55358489  2.31754313  1.47781431  2.44994674  0.49083142  1.97649230 #>   [781]  0.66546801  0.50676235  1.87265324  1.63507783  1.96996426  1.23676442 #>   [787]  0.48828831  1.19535021  0.65373967  0.76673863  0.98306240  1.06186844 #>   [793]  0.73685004  0.48859837  0.76208791  0.97695560  0.49200779  0.82101610 #>   [799]  0.94765660  0.57938855  0.99544850  0.73996193  0.97824648  1.47123029 #>   [805]  0.53720236  2.31200052  0.49203389  0.74549745  3.90977953  1.09292888 #>   [811]  0.99914467  0.99323277  0.81983939  0.66582210  1.43839902  0.84493369 #>   [817]  1.49916288  1.61844626  0.35973075  1.50688335  0.88943411  0.98082019 #>   [823]  0.88484311  2.32115130  1.06202611  0.66582210  1.49317275  0.73330486 #>   [829]  2.93550891  0.94515067  1.36010965  1.16360157  1.47028115  1.23347607 #>   [835]  0.65104882  0.74801351  0.80950178  1.34892922  0.92141724  2.00027651 #>   [841]  1.22206140  0.96644532  1.30228529  1.47485808  0.46113860  0.99256435 #>   [847]  0.97657663  0.82268803  0.42780086  1.61844626  0.93607546  1.21396440 #>   [853]  0.39110282  1.13494136  1.23757025  0.74761997  0.49611045  0.82504683 #>   [859]  1.26454926  1.95472753  1.68106892  0.58811175  1.30693045  0.77043080 #>   [865]  0.84950138  0.94847532  0.59173632  2.45619613  0.99913364  0.79902900 #>   [871]  1.30503961  1.48867682  1.96588249  0.98905049  0.98200000  1.18456390 #>   [877]  0.98847291  0.36332132  0.99944192  1.96974198  3.01122935  0.98371049 #>   [883]  1.62819885  1.30506044  0.85120602  0.66266440  1.50360921  1.32980180 #>   [889]  0.66266440  0.78245041  0.99801931  1.33536084  1.39786138  1.46904773 #>   [895]  0.73915022  1.49955372  1.95338431  0.71300144  1.15564620  0.76154166 #>   [901]  0.65117942  0.79977223  1.71509866  1.62866122  0.78365370  0.96000130 #>   [907]  0.59684224  1.30204292  0.73729680  0.78119141  0.65748480  1.24257255 #>   [913]  0.99477913  0.48322266  1.70595217  0.49603115  0.64291739  1.12351820 #>   [919]  1.19487120  0.53926034  2.97735365  0.69874748  0.77486045  1.04256174 #>   [925]  0.98294787  0.92252466  1.11017387  0.83460052  1.30557767  1.95833261 #>   [931]  0.58534002  0.98406778  0.24449609  0.88407127  0.74865151  1.22705754 #>   [937]  0.97911045  0.98074952  0.85134237  1.96121900  1.26372268  0.66335962 #>   [943]  0.48853206  0.89164888  1.46775445  1.77712052  0.92070257  0.62778046 #>   [949]  0.61903605  5.38028055  0.98283735  1.96641494  0.97789812  0.77587796 #>   [955]  1.16827413  1.32114315  1.98011239  0.58590257  0.98515480  1.85946012 #>   [961]  1.18439341  0.73672606  0.79667161  2.23815842  1.29406021  1.01480494 #>   [967]  1.00279957  1.04817124  1.13218935  0.99071429  2.65452933  0.59892121 #>   [973]  0.52918448  2.28196353  1.22688751  0.65172571  0.49206552  1.74078988 #>   [979]  0.79856161  1.96550370  2.47314888  0.39934782  0.49009892  1.10001522 #>   [985]  0.79976198  1.22167958  1.17944074  0.99788934  0.73915022  0.65748480 #>   [991]  0.97956712  2.45569657  0.74935850  0.74549745  1.16057565  1.38382491 #>   [997]  1.28276356  0.65227386  1.56349146  0.59018160  0.50623393  2.93321943 #>  [1003]  1.25347217  0.70969601  1.27424213  1.32931234  0.98424987  0.68719476 #>  [1009]  0.65104882  1.95361577  1.22882800  0.98267698  1.15176324  1.30198637 #>  [1015]  0.97663705  1.41844047  1.27703545  1.01984637  1.20805664  1.48833135 #>  [1021]  0.97671397  1.86904993  0.99971529  0.86225029  0.44210537  1.27926416 #>  [1027]  1.98142857  2.00917779  1.30218273  0.65721348  1.27926416  0.84567078 #>  [1033]  0.16692010  1.30747933  1.16112773  0.59858946  1.39943647  1.48372982 #>  [1039]  0.78026408  0.85120602  0.55508694  1.31796388  1.56283060  0.92422108 #>  [1045]  1.95439347  0.84293425  0.78711944  0.97823405  1.10435179  3.98704550 #>  [1051]  1.33171500  1.98444180  0.49259407  0.49009892  0.82907539  1.53568432 #>  [1057]  0.48972443  1.96974198  0.53136667  0.64644532  1.16278012  1.77483726 #>  [1063]  1.38467069  0.81297225  1.98490243  0.83241937  1.23191704  0.95944812 #>  [1069]  0.98207579  0.57986719  0.99754607  1.19682162  0.49168572  0.97798437 #>  [1075]  1.12756104  1.18616749  7.05519956  0.73206530  1.73375000  1.75153082 #>  [1081]  0.46004318  0.97719673  1.23154510  0.58862802  0.98484854  1.31294654 #>  [1087]  0.65373908  2.44327313  1.78329776  0.99005620  1.35834481  1.29826748 #>  [1093]  0.51690360  0.66450682  0.49972096  0.61501905  1.44966797  0.98082019 #>  [1099]  1.46475486  0.94663424  1.43410651  0.46981710  1.67611608  1.80889175 #>  [1105]  0.99932971  1.33279663  0.49260477  0.48988589  0.66057158  0.57483353 #>  [1111]  0.58602838  2.92959677  0.84907465  0.99788934  0.67182216  1.31074053 #>  [1117]  0.94341628  1.03775953  1.30933334  0.58653022  0.81297225  0.61873677 #>  [1123]  0.49128880  0.49585603  1.02363478  1.95759065  0.71074245  0.99542605 #>  [1129]  0.62372976  1.04242226  0.63902901  1.07514180  0.99171206  0.97669216 #>  [1135]  0.53890643  1.04763818  4.99702980  0.74935023  1.00086696  0.79298134 #>  [1141]  1.24027612  0.78042308  0.61504118  0.75493286  1.30075560  1.75205979 #>  [1147]  1.48917466  0.66238294  0.59214332  1.63366306  1.30467062  0.19515480 #>  [1153]  0.98423865  0.56711498  1.15564620  0.98401558  0.66421775  0.98151001 #>  [1159]  0.66639832  1.99118052  1.49944544  0.46126429  0.64847191  0.74955447 #>  [1165]  0.97663705  1.23631311  1.10543385  0.98553363  0.97653219  0.84775756 #>  [1171]  0.95785212  0.71253291  0.48831335  0.99735135  0.86424735  0.77001066 #>  [1177]  0.83302524  0.85199709  1.36843579  0.85266782  1.16480824  1.47757702 #>  [1183]  1.96374075  0.65320743  0.78942469  1.47249425  0.74008564  0.94240780 #>  [1189]  0.91813006  0.85688784  1.59268167  0.83077036  0.78253008  0.37195667 #>  [1195]  0.54610377  1.95353825  0.96623386  0.98505134  0.97859283  0.65215522 #>  [1201]  1.46577324  0.78120259  0.99914467  1.10819197  0.87177735  0.32591327 #>  [1207]  0.76021211  1.95700594  1.98799321  0.65583697  0.36198127  0.81365521 #>  [1213]  1.18000029  1.33244728  0.98303553  1.98011239  0.66490090  0.81097979 #>  [1219]  0.56882771  0.48838456  1.03470035  1.19847977  0.49877304  0.82103007 #>  [1225]  1.16587799  0.98247845  1.11487717  1.66573653  1.13055734  0.65346523 #>  [1231]  0.80714630  0.98019784  3.93333429  0.79669560  0.72491653  5.46184857 #>  [1237]  1.63752879  0.83620003  1.66257679  0.98358920  1.23631311  1.06790230 #>  [1243]  1.13149280  0.44300506  0.79640133  0.99323277  0.91625968  0.98506306 #>  [1249]  1.34740629  0.74964257  1.54952805  1.31320247  1.04387089  1.11223761 #>  [1255]  1.30075560  0.86225029  0.48845965  0.49257946  0.82356312  1.46697655 #>  [1261]  0.94918861  0.97755036  0.96357313  1.17969411  1.08498068  0.54368802 #>  [1267]  1.30255908  0.78184740  1.58159680  0.88147338  0.97798437  0.83077036 #>  [1273]  1.30432863  0.74194466  0.65112810  2.93265109  0.98019784  0.99914467 #>  [1279]  0.98166283  0.99307369  1.62755376  0.82356312  0.49113931  1.15917015 #>  [1285]  0.78929273  0.49168572  1.99864977  1.11935614  1.30307900  1.02668087 #>  [1291]  1.30916050  0.99165755  0.73387723  0.73058882  0.49257946  0.98187037 #>  [1297]  0.93035106  0.98267698  1.99828935  0.75432580  0.74935023  0.73623453 #>  [1303]  0.98104670  0.65233531  1.56297136  0.55409599  1.17040828  0.62323001 #>  [1309]  0.98294787  1.16278012  0.25564185  1.23352652  0.73236733  0.65081104 #>  [1315]  0.69031808  0.65650760  0.98273115  0.98406778  0.97850297  0.65675687 #>  [1321]  0.98925955  1.41512442  1.22216798  1.33093602  1.11875479  0.99694483 #>  [1327]  0.78175739  0.65899867  0.65099319  0.73530535  0.98209927  1.19933030 #>  [1333]  0.53093422  0.79856161  0.97916630  0.53061556  0.98060862  0.90831334 #>  [1339]  0.98341680  0.62301664  1.50288197  0.50572672  0.97676912  0.96207267 #>  [1345]  0.57140321  2.36369038  0.75479290  1.11843310  1.09440774  0.98518815 #>  [1351]  0.62778046  0.89566917  0.43864504  0.46571822  0.77142962  1.00462090 #>  [1357]  0.98413104  1.97445127  1.06692308  0.59217081  1.74896043  1.24964411 #>  [1363]  0.76488478  1.42924888  0.48825162  1.62819885  0.49622561  0.84513249 #>  [1369]  0.93299430  0.49936657  1.30367608  0.99913364  0.75513979  1.33115942 #>  [1375]  0.93724255  0.30519326  0.88946160  2.07064346  0.96382616  1.17216946 #>  [1381]  1.10543385  0.98490185  0.66057158  0.98401558  0.97680788  1.08345935 #>  [1387]  1.47461764  0.93480696  0.88215429  1.06202611  1.07244919  0.92857724 #>  [1393]  1.71346873  0.62632254  0.31856053  0.98018743  0.30676439  0.73967040 #>  [1399]  1.47157005  0.33313532  1.30747816  1.69127930  0.49131639  0.72953090 #>  [1405]  0.65383301  0.98275185  1.81038192  0.48968258  0.87177735  1.32532881 #>  [1411]  1.30868001  1.18711146  1.22954499  1.66599579  1.96952280  0.98307843 #>  [1417]  1.16724944  0.39224345  0.97270787  0.78026408  1.24595172  1.27680903 #>  [1423]  0.71854191  0.48151925  1.16619706  0.75473302  1.47091293  1.11731745 #>  [1429]  0.95568160  1.06348854  0.79955353  0.98546893  1.97000035  1.56899766 #>  [1435]  1.96079510  0.98019784  1.00000136  1.95314646  1.52220741  1.16288693 #>  [1441]  1.30641486  1.22111579  0.65127954  0.97650324  1.57971772  1.30044014 #>  [1447]  0.80667783  1.14944210  0.63177107  0.98722564  0.98200000  0.94341628 #>  [1453]  0.97704875  0.59262102  1.95873030  0.88052324  1.30633126  1.25145417 #>  [1459]  0.78956107  1.24515647  1.65789512  0.65542183  1.15133774  1.19500742 #>  [1465]  1.47430109  0.34870938  0.97981115  1.32671924  0.99971529  0.97850297 #>  [1471]  0.98423865  1.97037629  1.99470270  1.17347774  0.78384892  1.19368449 #>  [1477]  0.87853667  0.89793449  1.96374075  0.99085737  1.45906180  1.77202022 #>  [1483]  0.36684243  1.56245161  1.63132555  0.79578966  0.66318609  0.85673436 #>  [1489]  0.49385085  1.25204813  0.98424487  0.97648978  1.86044819  0.74378405 #>  [1495]  1.96941981  1.24775252  0.66786660  0.89682922  1.98613741  1.00073234 #>  [1501]  0.52990635  0.65253022  0.98286728  1.09651213  0.78189101  0.78349212 #>  [1507]  0.58825937  0.97936515  0.74303571  1.30209764  0.79902900  0.58701549 #>  [1513]  0.36212346  0.84567078  1.56289261  1.22045977  1.32637217  1.54712472 #>  [1519]  0.59355573  2.07268846  1.24595172  1.12626335  0.85673436  0.49838011 #>  [1525]  1.37933052  0.99222090  0.41557199  0.86835596  1.13000482  0.62405031 #>  [1531]  0.49972096  0.96303850  0.65198958  0.73650000  0.84949475  0.99206230 #>  [1537]  0.98341680  1.51334621  0.78041055  0.99914467  1.30200570  2.97214286 #>  [1543]  1.31074987  1.96302001  0.89988687  1.28841042  1.01875861  0.88943411 #>  [1549]  1.49783699  1.80991367  1.40564299  0.97789812  0.75662757  0.95433055 #>  [1555]  0.98435627  0.97824648  0.71063604  1.49916288  0.49238070  0.99820201 #>  [1561]  0.97859283  1.02987107  1.31074987  0.42820486  1.25430004  0.97650324 #>  [1567]  0.99977487  0.82907539  0.59902174  1.62959509  1.36205242  1.33219290 #>  [1573]  0.32673261  1.12480275  0.98268393  0.98476140  1.00152063  0.85266782 #>  [1579]  0.97981636  0.48845965  0.69385867  0.33291105  1.49910894  0.94515067 #>  [1585]  1.31074987  0.72486067  0.79519728  0.65570471  1.46475641  1.01015924 #>  [1591]  1.23501601  1.31630085  0.72685275  0.59629750  1.22216798  0.74391334 #>  [1597]  0.57849870  1.97694582  1.63855457  1.46684718  1.96952280  1.53258946 #>  [1603]  0.64255077  8.55175704  0.98413104  1.06312898  0.72507463  0.99754607 #>  [1609]  0.62602407  0.85666450  0.36476545  0.97718216  0.78184740  0.65359837 #>  [1615]  1.47735278  0.98520865  0.88862442  0.65182654  0.16657365  3.65245897 #>  [1621]  0.79976198  0.50740247  0.97736376  1.30204292  0.98905049  0.74709388 #>  [1627]  1.56545727  0.65639942  0.66204913  0.76428801  1.18467076  1.62931428 #>  [1633]  0.41273079  0.45265362  0.99963029  1.18393909  1.17902073  0.49259407 #>  [1639]  0.49172098  0.92414732  1.47545399  0.67689757  1.26395798  0.98166283 #>  [1645]  1.39958347  1.33164419  2.31013112  1.28841042  0.65112810  1.98011239 #>  [1651]  0.64054909  3.47099223  0.49867567  0.98401558  1.23757025  0.98506306 #>  [1657]  0.65274030  1.24775252  1.31630085  1.45379912  0.75655056  0.93649266 #>  [1663]  1.07537143  0.74605281  1.18323406  0.68826652  0.92029316  0.65381773 #>  [1669]  2.25034748  0.66629461  2.95129557  0.95153868  1.16380375  0.60552462 #>  [1675]  1.29337544  1.49036162  0.96303850  0.98286728  0.49037476  0.73211389 #>  [1681]  0.74955447  0.93117560  0.98145360  1.48984916  0.34269375  0.99913364 #>  [1687]  1.31630085  1.24962810  3.27878665  0.46440338  1.46537896  1.07369577 #>  [1693]  0.97841080  0.98523608  1.66920105  0.99970248  1.32078279  2.00879390 #>  [1699]  0.93452496  0.99789347  0.98074952  1.46616732  0.68650862  1.96121900 #>  [1705]  0.91030809  1.68968979  0.78415827  0.71854191  0.65037780  0.42006697 #>  [1711]  0.94872972  1.12433129  0.49661639  1.39715466  0.85845160  1.23750168 #>  [1717]  1.18349849  1.18122024  1.49413128  0.99970248  0.97916630  1.47226501 #>  [1723]  2.98837552  1.22349416  0.99357442  1.08723215  0.61822261  0.97556670 #>  [1729]  0.65658066  1.00298113  1.97540341  0.98019784  0.99357442  0.54167656 #>  [1735]  0.93963420  0.73967040  0.97676912  0.98824615  0.92008742  0.49918478 #>  [1741]  0.52529373  0.59982917  1.65839905  0.69874748  0.79519728  1.20587519 #>  [1747]  0.70259714  0.49553452  0.66163414  0.95283259  1.12756104  1.51745550 #>  [1753]  1.31593512  0.97841080  1.95649295  0.98424987  1.46475641  0.98447907 #>  [1759]  1.47469434  0.98827574  1.00240614  0.65485242  0.78629383  1.25190079 #>  [1765]  0.90299675  0.79902900  1.39771739  0.56378052  0.56143844  0.97662669 #>  [1771]  3.27358595  0.98500017  0.66372684  0.74341947  1.24891705  0.32722094 #>  [1777]  1.40302264  1.47280556  0.61815656  0.99085737  1.26860392  1.02793877 #>  [1783]  1.02409661  0.79640133  0.39399285  0.78798570  1.95461850  1.31873399 #>  [1789]  0.86225029  1.08725098  0.65936699  1.26824716  0.99612517  0.99963029 #>  [1795]  0.49622561  1.60867379  0.53691406  1.39543983  1.24046808  1.31593512 #>  [1801]  1.30075560  1.01902307  0.68532008  1.19854350  0.49030475  1.56519436 #>  [1807]  1.96842591  0.56242182  1.31002303  2.29655686  0.71154729  0.53870443 #>  [1813]  1.30273167  0.32556405  0.83157445  0.65145478  1.23178613  1.39771739 #>  [1819]  0.65172571  0.98389929  0.83859225  0.97685710  0.75043592  0.74757017 #>  [1825]  1.37421502  2.00367564  1.47538380  0.99608752  1.22593690  1.92940031 #>  [1831]  1.05176361  0.90959559  0.84533760  0.97755036  0.96536858  0.84013393 #>  [1837]  1.17749175  1.06692308  1.63434917  0.98286728  0.66238294  0.32749282 #>  [1843]  1.36525943  0.65320743  0.79898652  0.96382616  1.10526342  1.42176511 #>  [1849]  1.19228930  1.68000228  1.77886822  1.49870046  2.46217748  0.53547535 #>  [1855]  0.95568160  0.98145360  0.59355573  0.99583951  0.99754607  0.85682596 #>  [1861]  0.93632662  1.97012612  1.30367608  1.17000159  0.48872244  0.77884942 #>  [1867]  0.74757017  0.66047619  0.97648978  0.55839813  0.65099319  0.98333357 #>  [1873]  1.36579338  1.98019350  0.97806301  0.52055289  0.98323872  0.98622720 #>  [1879]  1.32544048  0.99852653  0.97653219  0.56378052  1.33519236  1.54952805 #>  [1885]  0.98018743  0.49972096  0.63408357  0.97755036  0.82907539  1.46537896 #>  [1891]  0.98498213  0.81227709  0.49250009  0.49125864  0.55524551  0.99963029 #>  [1897]  1.20810112  0.77133161  0.98424987  1.91889624  1.04610838  1.46874946 #>  [1903]  0.65682406  1.14448206  1.23201705  1.70885622  1.72716485  1.44830553 #>  [1909]  0.65137608  0.80172722  1.47730649  2.00657586  0.98446443  1.30548059 #>  [1915]  0.98312956  1.46479828  0.64847191  1.64184665  0.66148060  1.47249425 #>  [1921]  0.99357442  0.21894135  1.00086898  1.49817938  1.05176361  1.99888384 #>  [1927]  1.63843734  1.12017857  1.48171303  0.66897712  0.80130466  1.99919495 #>  [1933]  0.64961870  0.98306435  0.90502344  1.02510904  0.92198231  1.14187963 #>  [1939]  0.65227386  1.07369577  0.65631938  0.83013850  0.71680507  0.74605281 #>  [1945]  0.75787391  0.98166283  1.10280684  1.30431206  1.49647364  1.46660972 #>  [1951]  0.87866489  0.78659098  1.49418776  1.01331436  0.65594342  0.51334044 #>  [1957]  0.85134644  2.39857430  1.96121900  0.77816630  0.79856161  0.77315625 #>  [1963]  0.99071429  3.27227242  1.51310113  1.20153209  0.85032086  0.65099319 #>  [1969]  1.46543339  1.04129767  0.69630074  1.38467069  0.97944887  1.46335005 #>  [1975]  1.26726734  1.30868001  0.89600634  0.55743611  0.83896742  1.60090639 #>  [1981]  0.98181951  0.52193545  0.92989167  3.75614440  1.24796195  0.98391514 #>  [1987]  1.34619721  0.50231298  1.11137303  1.00796765  0.65644520  0.70801741 #>  [1993]  1.43661582  2.39608695  0.49255452  0.44350637  2.46003895  0.79902900 #>  [1999]  1.64616950  1.00139427  0.75940434  1.77306906  0.74709388  0.97773981 #>  [2005]  1.96589574  1.31664139  1.26000171  0.32827032  1.21559800  1.30693045 #>  [2011]  0.74877717  0.74328891  0.71300144  0.91534483  0.98307843  0.61022989 #>  [2017]  1.37653304  1.22710216  1.66455524  1.04753155  0.84533760  1.00086696 #>  [2023]  0.98905049  0.34676342  0.56517171  0.82092332  0.77490973  0.98459912 #>  [2029]  2.27881979  0.39928081  2.44238899  0.59750371  0.97879533  1.02341133 #>  [2035]  0.63158575  0.86150600  1.24431062  1.10656783  1.03805792  0.73491662 #>  [2041]  1.46996805  0.65650760  0.90299675  0.99071429  0.37739645  0.49736854 #>  [2047]  0.93465759  1.40271887  1.39301916  1.45193020  1.09975235  1.27062016 #>  [2053]  1.23278400  0.70117574  1.08056845  1.96535397  0.61108399  1.31077124 #>  [2059]  1.33785261  1.17230317  0.32838493  0.88533944  1.30218273  0.97551319 #>  [2065]  1.32637217  0.97789812  1.96558977  1.00000136  0.65162992  2.00328766 #>  [2071]  1.12971200  0.97956712  1.24515647  2.46556800  1.97390268  0.72684070 #>  [2077]  0.49257740  0.91714561  0.79519728  0.66110504  0.79364984  0.53966785 #>  [2083]  1.20000163  1.76394826  1.10061543  0.50342653  0.33133220  1.68846992 #>  [2089]  1.24628512  1.56965095  2.44299183  2.28051545  0.65508879  0.97691931 #>  [2095]  1.28255924  1.46494004  0.62894419  1.00152063  1.48386824  0.92514489 #>  [2101]  1.69320292  1.11769280  1.99673912  0.79321385  1.49916288  1.47154776 #>  [2107]  1.96526637  1.63752879  1.21600860  0.65562797  0.73613251  0.96966798 #>  [2113]  0.55831357  0.98451248  1.11079477  0.81578405  1.05180185  1.26923609 #>  [2119]  1.78889249  0.68262971  0.49988398  1.29241158  2.23517437  0.73485836 #>  [2125]  0.91450549  0.49194965  0.49147062  0.59343029  1.50336045  1.11798037 #>  [2131]  0.97691931  1.46596388  1.30868001  1.47394918  0.91534483  0.62608781 #>  [2137]  1.52565870  0.92514489  0.65183804  0.98949702  1.74086347  0.97556670 #>  [2143]  1.46638285  0.49622561  0.73556214  1.18947201  1.25523556  1.12069657 #>  [2149]  1.91570424  0.74877717  0.98337144  1.36546214  0.65936699  0.97981115 #>  [2155]  0.78414995  0.61204038  0.65320743  0.74021351  0.85067247  1.00658979 #>  [2161]  0.85284277  1.27882363  0.82268803  1.39269078  0.65142094  0.46494584 #>  [2167]  1.96302001  1.25798817  0.61022989  0.37407978  1.31151466  1.17061582 #>  [2173]  1.26021197  1.24891705  0.72347573  1.77562001  0.72953090  0.65682406 #>  [2179]  1.32652062  0.97977178  0.97657323  1.11821170  1.15831395  0.97657323 #>  [2185]  1.20805664  1.37064017  0.88279482  0.78458128  0.94129819  0.49137593 #>  [2191]  1.18349849  0.99222090  0.74024849  0.49217813  0.49229956  0.76657524 #>  [2197]  1.24668919  0.98251727  1.96615685  0.99085737  0.56288648  1.99661743 #>  [2203]  1.76814254  0.71063604  0.99085737  1.03533649  1.31796388  0.67760938 #>  [2209]  0.78797044  1.17155319  2.00238049  3.01362840  1.37323464  1.98646554 #>  [2215]  0.88943411  0.32573224  0.99222090  0.79919248  1.97031786  1.24615907 #>  [2221]  1.10838452  1.03141648  1.95314646  0.49423645  1.71238019  0.65108446 #>  [2227]  0.98341680  1.17328777  1.06058096  0.55271692  1.68026786  1.28499675 #>  [2233]  0.73485836  0.98849800  1.30454773  1.41892827  0.98267698  0.86225029 #>  [2239]  2.28385576  1.64145165  1.18170257  0.65912976  0.97911045  0.73278657 #>  [2245]  1.47023438  3.29490969  1.64491890  1.01441211  1.12794439  2.11078586 #>  [2251]  1.56711819  0.71381104  0.83710859  1.22630837  0.98283735  1.59268167 #>  [2257]  0.44396060  0.65832070  1.43767724  1.39546431  1.78379554  1.77678563 #>  [2263]  1.95962230  1.47425603  1.00792278  0.98521586  1.03372340  0.74709388 #>  [2269]  0.98847291  4.40006089  0.66585750  1.21841563  0.69385867  1.99509398 #>  [2275]  1.64745485  0.87650154  1.13149280  1.03605582  1.26850617  0.65748480 #>  [2281]  0.99820201  1.32532881  1.15600026  0.86462922  1.31404484  0.97538281 #>  [2287]  1.29289064  1.26918262  0.82548925  1.96870041  1.03579039  0.95568160 #>  [2293]  0.98435020  0.79930691  1.07435474  1.58248078  0.71109604  0.99971529 #>  [2299]  0.24413305  1.95315325  1.71253745  0.98520954  0.98413104  1.96248625 #>  [2305]  0.95174806  1.12379119  1.96904967  1.12971200  0.70293191  0.84763521 #>  [2311]  0.92989167  1.24775252  2.45765601  1.65276259  1.71149068  2.00865260 #>  [2317]  1.49916288  0.72700385  1.20994268  0.87084580  0.93903610  0.99261466 #>  [2323]  1.97445127  1.17068004  0.97669216  0.65650760  1.47602337  1.06088553 #>  [2329]  1.59280267  2.08512349  0.97956712  0.92252858  1.62983020  0.78798570 #>  [2335]  0.70960732  0.97775706  0.99477913  1.27703545  0.78258724  0.98187037 #>  [2341]  0.97662669  1.30307900  0.59964358  1.88683256  1.95409751  1.11166614 #>  [2347]  1.17389577  1.24595028  1.40519428  2.44439264  1.24964411  1.99352275 #>  [2353]  0.32807099  0.59852764  0.49838069  0.89682922  1.39748282  0.49968969 #>  [2359]  0.99735135  1.01740145  0.32648296  0.86225029  0.73817899  2.39001483 #>  [2365]  0.91557977  0.92053426  0.73279809  2.41384255  0.76755849  2.49337837 #>  [2371]  0.65215603  0.65466667  0.55800244  1.18456390  0.99399661  1.30747933 #>  [2377]  2.20228949  0.98520954  0.98251727  0.99357442  0.98358920  1.08771207 #>  [2383]  0.98925955  0.74135468  1.33795590  1.49683400  1.33217819  0.97719673 #>  [2389]  0.73167502  0.46543552  1.06915437  1.12228572  0.48824463  1.55175593 #>  [2395]  1.21367196  0.81162697  0.58920000  1.46788924  0.49245093  0.82546157 #>  [2401]  0.89080803  0.79485953  1.46577324  0.53809753  0.73348828  0.94588059 #>  [2407]  1.25204813  0.98307843  1.18998907  1.17499956  0.39369546  0.74041923 #>  [2413]  0.69686516  1.04824031  0.67500092  0.88565606  1.55633259  2.34136007 #>  [2419]  0.37005796  1.37463616  0.49972096  1.06418305  1.87807220  0.39345440 #>  [2425]  0.96648089  1.13971719  1.74778300  0.49259515  0.32665957  0.49134197 #>  [2431]  1.00693701  0.87322166  1.50885632  0.65430240  1.14209767  1.49809972 #>  [2437]  0.84918367  0.78174573  1.00158034  0.88189994  1.03372340  0.64429688 #>  [2443]  0.18915689  0.74978647  0.74904986  0.73279809  1.41583563  0.43592834 #>  [2449]  2.15558438  1.06802853  1.30184834  1.37502511  0.65318119  1.29120876 #>  [2455]  1.95472753  1.95297853  1.37869754  0.82165659  1.21862538  0.65561120 #>  [2461]  0.86955242  1.95314646  1.21285211  1.44966797  4.28367181  3.21012833 #>  [2467]  1.63888929  0.49936657  1.72450059  0.48840394  1.01740145  0.39662541 #>  [2473]  0.47091920  0.73609020  1.48107483  1.22338044  0.24447453  1.96717839 #>  [2479]  0.93461930  5.60714978  0.99583951  1.98331511  1.18559415  1.09548255 #>  [2485]  0.99792558  1.35796087  1.47345212  0.49738956  0.59923989  0.85111939 #>  [2491]  0.67407543  0.93501294  0.55800244  1.39880254  0.59547073  0.68630260 #>  [2497]  0.50216315  1.05912860  1.24342134  0.58665423  0.65343750  1.33217819 #>  [2503]  0.39508068  0.91914786  0.81806810  3.93791630  1.08435993  0.97936515 #>  [2509]  0.80202321  1.26668610  0.85211793  2.46190350  0.99833871  1.67703961 #>  [2515]  0.28546675  0.49937302  1.33039022  0.98294787  0.39274815  1.95461850 #>  [2521]  0.86774806  1.11428723  1.39546431  0.85689882  1.11777122  1.39960141 #>  [2527]  1.15622505  0.49229956  1.44792509  0.97730925  1.12711680  0.49361282 #>  [2533]  0.96441545  1.32163556  0.95192707  0.86789889  0.86225029  1.11423245 #>  [2539]  0.68826652  0.78589950  0.59686748  0.73593234  0.90530865  0.73933631 #>  [2545]  0.79803686  1.47386641  0.43832320  1.95612603  1.31231820  0.50104386 #>  [2551]  1.62997395  2.29515065  0.69874141  1.31333356  0.63177107  1.24257255 #>  [2557]  1.16476449  1.23567976  1.38211589  1.96779859  0.66238294  0.60497134 #>  [2563]  0.71908228  1.51577697  4.28412982  0.99913364  2.31166667  1.30922567 #>  [2569]  1.63985856  0.81176536  0.74194466  1.30747933  1.30235883  1.62477963 #>  [2575]  0.65674417  0.48911702  2.97969831  0.49423645  0.76324684  2.73429013 #>  [2581]  1.00277486  0.99754607  1.72156618  1.15349619  0.65434000  1.30555507 #>  [2587]  0.49422953  0.63026173  1.04613282  1.67244280  1.27923850  0.53874638 #>  [2593]  0.97956712  1.33415117  1.06122181  0.97676912  0.78956107  1.36954507 #>  [2599]  0.83232188  0.83277955  0.98484854  1.45106163  0.86868522  0.78258626 #>  [2605]  0.82838170  2.44694927  0.73354726  0.72197582  1.36522963  0.99357442 #>  [2611]  2.24933057  0.99963029  0.81381102  0.78776792  0.84064244  1.32218768 #>  [2617]  0.68293534  0.67074007  0.99544850  1.09833111  0.66627064  0.49328602 #>  [2623]  0.86898332  0.77043080  0.76760718  1.51962292  0.99306977  2.95564757 #>  [2629]  0.32835435  0.66363233  1.12354492  0.65936699  0.92810516  1.96733492 #>  [2635]  1.11758718  1.57247182  0.97653219  1.69134156  1.31406220  0.86615827 #>  [2641]  0.97823405  1.97810098  1.11587000  0.50193950  1.17673140  0.97663705 #>  [2647]  0.72685275  1.11970360  0.70374006  1.34566530  1.54002131  0.58829272 #>  [2653]  0.79970423  1.36525943  0.78328836  1.09087647  1.47533560  1.00344694 #>  [2659]  0.65193208  0.78598276  0.98305540  0.78365370  0.84354089  1.99509398 #>  [2665]  1.98613741  2.55402712  1.32046608  0.78135373  2.14339570  0.98344195 #>  [2671]  3.46367316  1.38679683  0.82783737  0.50030669  2.60436547  1.46734924 #>  [2677]  1.16214604  0.63430196  0.55975264  0.39067686  1.05349620  0.99000134 #>  [2683]  1.06186844  2.76676211  1.17969411  1.25656311  2.00858680  1.30868001 #>  [2689]  0.82559524  1.50603961  0.49970298  0.98363599  0.78929273  0.98459912 #>  [2695]  0.91879206  1.40178744  0.67074007  1.39301916  0.79635880  1.31247502 #>  [2701]  0.48322266  1.99413380  0.79071429  1.39830075  0.99256435  0.76926149 #>  [2707]  1.30210217  0.49156478  0.98257987  1.37224186  1.23116049  0.70000095 #>  [2713]  0.16318507  1.90349612  0.79204496  1.22735371  1.23801901  1.17306044 #>  [2719]  1.22409868  0.58578795  1.11672161  0.65524493  0.99913364  0.44431791 #>  [2725]  0.82688585  0.49309412  0.48696316  1.12271357  1.09691737  0.65535702 #>  [2731]  0.65155159  0.77188605  1.22431109  1.17388086  1.47782378  1.16135658 #>  [2737]  1.01480494  0.49228427  1.17347774  1.24056402  0.91030809  0.75122888 #>  [2743]  0.82372742  1.65763363  0.42642139  1.30200570  0.62602407  1.32889156 #>  [2749]  1.04612813  0.79952477  2.23397432  1.09840116  3.93376781  0.98306240 #>  [2755]  0.55507424  1.30310319  3.15275547  0.58606147  1.62594450  0.65702242 #>  [2761]  1.26816714  0.79952477  2.35854070  0.56143844  2.49472334  1.02055326 #>  [2767]  1.13034342  0.73434374  1.58971906  1.00367543  1.72035920  0.93252473 #>  [2773]  0.92281411  0.65146449  1.62825933  1.30890897  0.69229378  0.48778335 #>  [2779]  0.71908228  0.96303850  1.95300647  2.63747148  1.19847977  1.97445127 #>  [2785]  1.62117978  1.29210417  1.49928513  1.96415157  2.26437870  0.93491102 #>  [2791]  0.78193931  0.99820201  0.97270787  0.98283735  0.65511655  1.40462675 #>  [2797]  1.09429635  1.39500611  1.32417794  0.77322510  1.46917330  0.81915566 #>  [2803]  0.65583697  1.30386416  0.90786068  0.70591124  1.47377591  0.75000102 #>  [2809]  0.49255812  1.39650052  0.98660131  0.97824648  0.98060862  0.96303850 #>  [2815]  0.46742959  0.56484166  0.84016958  0.62387626  1.96400001  1.33343792 #>  [2821]  0.74446099  1.96550370  1.30766602  0.94112413  0.78776792  1.06560260 #>  [2827]  1.98302680  0.71017401  0.68617536  0.43876695  0.78483736  3.90654820 #>  [2833]  0.73636464  0.68889946  0.91625968  0.30760076  1.33093602  1.97093786 #>  [2839]  0.32549659  0.84619340  1.07183702  1.68035611  0.97657663  0.65100285 #>  [2845]  1.30983250  1.74144921  0.60888296  0.97744488  1.60033742  1.93772537 #>  [2851]  0.97551319  1.42890818  0.37685245  1.11736980  0.73624712  1.09152708 #>  [2857]  1.19228930  1.72417325  0.97936515  0.78646274  1.38147539  0.99676022 #>  [2863]  0.63103874  0.53358899  0.65383301  1.38943170  0.98582023  0.81084869 #>  [2869]  1.24595028  0.49041010  0.65541971  1.31094330  0.83739051  2.24404053 #>  [2875]  1.01833983  2.27618325  1.30608950  1.65796521  0.47170814  0.80172722 #>  [2881]  0.65274030  1.25289869  2.94968753  1.30747816  0.86680255  1.66401667 #>  [2887]  1.57685381  1.66327936  0.78175739  1.30608950  0.99156353  1.25939612 #>  [2893]  0.92989167  1.30340049  0.48988589  0.77371710  0.60199018  1.63340811 #>  [2899]  0.86800380  1.14221933  2.97016859  1.32631610  1.70230539  0.98521586 #>  [2905]  0.85673436  0.86777318  0.65346523  0.49030475  0.98151001  0.65253022 #>  [2911]  0.99779257  0.62854353  1.48628605  0.99801931  0.81391020  1.36556708 #>  [2917]  0.49979874  1.50101349  1.18968507  0.98082019  0.24630396  2.93870137 #>  [2923]  1.26354213  0.95174806  1.59481820  0.59015352  0.74815955  2.68280842 #>  [2929]  0.99245122  0.65318119  0.99856652  4.89989348  0.74314302  1.13689043 #>  [2935]  0.70151132  1.56796387  0.80192491  0.50024339  0.90930849  0.64285801 #>  [2941]  0.98307843  0.90519096  1.64616950  1.48607143  1.43103175  1.46117764 #>  [2947]  0.99804468  1.74445112  1.14226436  1.09237675  0.98770170  3.91666521 #>  [2953]  0.77873641  2.27847615  0.94918861  1.46557313  2.89933595  1.14795053 #>  [2959]  0.78533983  1.11496187  1.23823387  0.78137117  1.38211589  0.97270787 #>  [2965]  1.48357573  0.97691931  0.98518815  0.82185600  1.29694383  0.97736376 #>  [2971]  0.41076493  0.92029316  1.48042215  0.65721348  0.49075500  0.95976185 #>  [2977]  1.00328793  1.99167903  0.65583697  1.14219718  0.86594740  0.27330049 #>  [2983]  1.19398944  1.28096985  1.04960124  0.79578966  0.65120526  0.86757422 #>  [2989]  0.97879533  0.48826613  1.25204813  0.92810516  1.04586781  1.00387900 #>  [2995]  1.39263190  0.39087287  1.63470032  0.93452496  0.86479826  0.65346523 #>  [3001]  0.73260591  0.98905049  0.56529117  0.78712257  0.55801843  0.99071429 #>  [3007]  0.82907539  0.98925955  1.36692781  1.55420788  0.87177735  0.82378304 #>  [3013]  1.37522198  0.65660124  0.93452496  1.22045977  0.97719673  0.73367554 #>  [3019]  0.61501905  0.94183840  0.99754699  1.22279256  1.73549611  0.98267698 #>  [3025]  0.56042830  1.52561036  0.78882271  1.25494522  0.98515480  1.70241204 #>  [3031]  1.22010883  0.66261107  0.98827574  1.53629528  0.54515014  0.66238294 #>  [3037]  1.00163851  2.46302161  0.65182654  0.98582023  1.03805792  1.62518902 #>  [3043]  0.89600634  0.66629461  1.27498828  1.00448135  0.88197413  1.27352324 #>  [3049]  0.65104882  1.47584894  1.14582695  0.98393796  1.22882800  0.95174806 #>  [3055]  0.53054887  0.96553702  0.48929641  1.51146100  0.92733392  1.09257477 #>  [3061]  1.32726466  0.79578966  0.80450625  0.43371568  0.97841080  0.49582878 #>  [3067]  0.98145360  0.71958609  2.00204268  1.22349416  1.10602894  1.21286470 #>  [3073]  0.95568160  0.65198958  1.96573479  1.07660267  1.00138684  0.96303850 #>  [3079]  1.64470203  0.65524493  0.98019784  1.07367535  0.98375210  6.49738359 #>  [3085]  1.35325769  1.22954499  0.66170957  1.31873399  0.90686007  0.99836956 #>  [3091]  1.47706485  1.22193795  1.99940495  0.74861064  0.62507270  1.97237649 #>  [3097]  1.49932543  0.78702639  1.07000322  1.49036162  1.13859330  1.36710599 #>  [3103]  0.98873814  0.99477913  0.84943023  0.64703010  0.78204029  0.89243793 #>  [3109]  0.54457913  0.93632662  1.77382825  1.22681700  1.41042615  1.69238681 #>  [3115]  0.65153950  0.73342359  1.00458890  0.46319422  1.39771739  1.46874946 #>  [3121]  0.97669216  0.98518815  1.18467076  1.57637773  1.48095969  1.31275805 #>  [3127]  0.90536281  1.31316132  0.83833973  0.50462449  1.23819236  0.88670762 #>  [3133]  1.31316132  1.67244280  0.49772425  0.65239522  0.33225379  0.78747396 #>  [3139]  1.62772842  0.83213166  0.71136357  0.98521586  1.42148490  1.15520817 #>  [3145]  2.25588878  5.43114575  2.45467593  0.36631500  0.90519096  1.37175824 #>  [3151]  0.87398535  1.23985556  1.40915190  0.44431791  1.22248046  0.91384999 #>  [3157]  0.98515480  0.70427707  0.49128598  0.87664640  1.12756104  1.72022688 #>  [3163]  1.00110275  1.25788837  0.49500685  0.97879533  1.01377989  4.57617766 #>  [3169]  0.48978356  1.17593015  1.95612603  0.61288094  1.30386416  0.90000122 #>  [3175]  1.12239916  1.33219290  1.27693423  1.42663821  0.89779146  1.00458890 #>  [3181]  1.00142180  1.99943058  0.32768513  0.97671397  1.00344694  1.06926137 #>  [3187]  2.94802446  0.94715514  0.97977178  0.65748480  1.12556685  1.49817938 #>  [3193]  0.49972096  0.83720168  1.38366830  0.85363628  0.81409942  1.04035211 #>  [3199]  0.91257325  1.97694582  0.60034874  0.79582330  2.09527782  1.08594382 #>  [3205]  0.73624712  0.98446443  0.32550143  0.52865422  1.62893961  0.70844977 #>  [3211]  0.49261804  0.74021351  1.39483751  0.15960737  1.19557500  0.84619340 #>  [3217]  0.97556670  0.78195591  0.86225029  1.07690390  1.43765623  0.84000114 #>  [3223]  1.65370150  1.49683400  0.80916275  0.99323277  0.84171429  1.44287196 #>  [3229]  1.09059850  0.97270787  1.19453820  0.92401279  0.41948371  0.96015306 #>  [3235]  0.40024535  1.31233316  1.94541574  1.24249576  0.57209052  1.00513612 #>  [3241]  0.54610377  4.73530034  0.53174427  0.93607546  1.16827413  0.49985765 #>  [3247]  0.74549745  0.49100000  0.79690014  1.11493337  1.46475641  0.74254215 #>  [3253]  2.39568484  0.84016958  0.65575733  1.12755808  0.97662669  0.49894467 #>  [3259]  1.81038192  3.65892756  0.50193950  0.49904570  1.63241478  0.98307843 #>  [3265]  0.74492458  0.99788934  1.47781297  1.99470270  1.11493337  1.17902073 #>  [3271]  0.65239522  1.70893133  1.38043974  0.49243550  1.49317275  0.54109539 #>  [3277]  0.78978051  0.79952477  0.66315805  1.20503976  0.65670090  1.24001691 #>  [3283]  1.49036156  1.04476437  1.95596874  1.74595425  1.31074987  0.79332604 #>  [3289]  0.55271692  1.42814640  0.61878512  1.49738749  1.19897361  1.38467069 #>  [3295]  0.46114370  0.50107951  0.74484631  0.76354974  1.01497460  0.99165755 #>  [3301]  0.98366746  0.83112612  0.66622364  0.65104882  2.19302427  0.90883208 #>  [3307]  0.96923208  0.96470016  1.96374075  0.35560246  0.97556670  1.10819197 #>  [3313]  0.49661639  0.48852438  0.65537493  1.20708915  1.78354326  1.18537043 #>  [3319]  0.65512262  0.98168172  1.78864019  1.22513975  4.91817997  3.28079551 #>  [3325]  1.30663826  1.26354213  0.39949326  0.32549642  1.42148490  0.66163414 #>  [3331]  1.11608369  1.62755376  0.53652872  0.98399634  1.28841042  0.87175698 #>  [3337]  0.77382365  0.79204209  1.21632204  0.92048424  1.30916050  0.78929273 #>  [3343]  1.36883574  0.65388013  1.55037349  1.24822666  0.49147394  1.19854350 #>  [3349]  0.52147043  0.99676022  2.09456427  0.76219797  0.29819898  1.49099491 #>  [3355]  0.70848889  1.59904954  0.65583697  0.65679210  1.55650969  1.15759105 #>  [3361]  0.58694789  1.33141066  0.58569111  0.85678535  0.29982179  1.00061337 #>  [3367]  0.90398915  1.39071578  0.73133506  1.17623741  1.79669153  0.50056107 #>  [3373]  0.65912976  1.39556090  1.17068004  0.69683336  1.15583333  0.50051067 #>  [3379]  0.43307913  0.86087073  0.82235102  1.30198637  0.99544850  0.65508853 #>  [3385]  0.98521586  0.98366746  0.53545898  0.99836980  0.97280688  0.39796272 #>  [3391]  1.09250738  0.83112612  0.71930945  1.22045977  1.05987296  0.60035581 #>  [3397]  1.96848974  2.35498350  0.78107411  1.61054366  0.99878625  1.37960047 #>  [3403]  0.69932773  1.95547962  0.48887853  1.22279103  1.46904773  1.29168648 #>  [3409]  0.95976185  0.98019784  1.33051911  0.93963420  0.97932158  0.98827574 #>  [3415]  0.99357437  1.13056628  1.22390623  1.22954499  0.95120179  0.32839605 #>  [3421]  0.70516117  1.19933030  0.98260055  1.74929334  1.24930240  1.44022960 #>  [3427]  0.98423865  0.99786545  0.79640133  0.74008564  0.62445852  1.00175008 #>  [3433]  0.99544850  2.62808968  0.70872921  0.99544850  1.06088553  0.56756158 #>  [3439]  1.95414367  1.55920519  0.87866489  1.04786600  1.32901517  1.81907165 #>  [3445]  1.96751091  4.31116876  1.00459524  1.26052346  1.49631911  0.76877382 #>  [3451]  0.99676137  2.16438155  1.00323560  1.47778544  0.71388708  1.11037274 #>  [3457]  0.97650324  3.44405453  0.60752347  0.59750371  0.98151001  1.47533560 #>  [3463]  1.37960047  1.40945130  1.99812123  0.66057158  2.34554220  0.54972057 #>  [3469]  0.78021769  1.98171473  0.53303569  0.79592544  0.60189906  1.30345142 #>  [3475]  0.99583951  1.95314646  1.37576928  1.50485340  0.63910463  1.00639053 #>  [3481]  1.47345212  0.93903610  0.66802031  2.44327313  0.88151634  0.69874748 #>  [3487]  0.72227887  0.79016136  1.47059633  1.17060135  1.47727280  1.95700594 #>  [3493]  0.98391514  1.95325339  0.65630962  0.49956682  1.22710216  0.90556834 #>  [3499]  0.56517171  1.13148870  1.05166325  1.32007493  0.81116380  0.72692613 #>  [3505]  1.14231248  1.23352652  0.99959748  1.20733213  1.34825390  0.75658018 #>  [3511]  1.10543385  0.29107389  3.46240843  1.49991137  0.86717040  1.47637480 #>  [3517]  0.71886536  0.78613986  1.39629189  0.98283735  1.48155255  0.35060062 #>  [3523]  0.86690855  1.95325339  1.92607700  0.65846780  2.99347612  0.47509761 #>  [3529]  1.50603961  1.34211972  1.03314726  1.25774547  0.94113008  1.31799734 #>  [3535]  0.52393300  1.30633126  0.97877971  1.16206459  2.24633151  1.59805801 #>  [3541]  1.62785661  0.50120307  1.30888378  0.48859837  0.99583951  0.97789812 #>  [3547]  1.16112773  1.32778602  0.76080807  0.98286739  0.56517171  0.87670658 #>  [3553]  1.96546230  0.73236695  1.47123029  1.36521764  1.52551975  1.15133774 #>  [3559]  0.64255077  1.52976956  1.39500611  1.34761346  0.73485836  0.50214670 #>  [3565]  1.34211972  1.74078988  0.49481045  0.67653662  0.74841700  0.97824648 #>  [3571]  0.99317107  0.65320743  0.49211933  0.73271670  1.17969411  1.04078800 #>  [3577]  0.98164603  0.74709388  0.49985124  0.89398368  1.45450196  0.52890981 #>  [3583]  0.99307369  3.93598536  0.58577659  1.22074693  1.24595028  0.90530725 #>  [3589]  0.73915022  1.00102134  1.50208868  0.99676022  0.48825162  1.14681792 #>  [3595]  1.65142894  0.65549248  1.08808772  0.66450682  1.06208366  1.14529535 #>  [3601]  1.36571846  1.98714883  1.95889774  0.81269008  0.57649418  0.86923448 #>  [3607]  1.14243462  0.99788934  1.56603128  1.24154096  1.59107810  1.04712717 #>  [3613]  1.67903421  0.99612517  0.84215766  0.99804468  1.07896417  0.70293191 #>  [3619]  0.98060950  0.59547073  1.17155319  0.97650324  1.30747933  1.39943647 #>  [3625]  0.76755849  1.32476589  0.98263318  0.72332045  0.69183969  1.37064017 #>  [3631]  0.58844971  1.22524730  1.99757251  0.73227586  1.59607372  1.46709452 #>  [3637]  1.05531485  0.98498213  0.65130373  0.97653226  0.65120526  1.05465401 #>  [3643]  2.36242188  0.79634084  0.98435020  1.47485808  0.65099319  1.31247502 #>  [3649]  0.78567941  2.27685754  0.84567078  1.21374413  0.65162992  1.30747816 #>  [3655]  0.71058785  1.49036162  1.20789257  0.84567078  0.98905049  0.85406546 #>  [3661]  2.45908999  1.01104486  1.11280070  0.75927955  0.49956682  1.13684365 #>  [3667]  0.97650324  0.49062156  1.28400081  0.97859283  1.31924116  1.31162020 #>  [3673]  0.97849717  0.59923989  1.51754820  0.98515480  0.98738322  1.46898237 #>  [3679]  0.48865463  1.19955635  0.99923732  0.89385396  1.30946569  2.74505554 #>  [3685]  0.39649067  1.62748211  0.97758857  0.27924679  0.97823405  1.00077983 #>  [3691]  0.76883178  0.48939766  1.23598037  0.92029316  0.65846780  1.96149904 #>  [3697]  0.97936515  1.98512870  0.59018160  2.49031294  0.48912324  0.71338082 #>  [3703]  0.88014031  0.53401426  2.63802547  0.98446443  1.25257713  2.00252758 #>  [3709]  1.49602702  2.06214692  2.00540859  1.19896037  0.98391514  1.99940495 #>  [3715]  0.97758857  1.00270430  0.74757103  1.31873574  1.10970349  1.27188706 #>  [3721]  1.24736167  1.43766721  0.84016958  0.59873360  1.30218273  2.44361221 #>  [3727]  1.99225035  1.96248625  0.99676022  0.97897101  1.13073265  0.67635581 #>  [3733]  0.98294787  0.79667161  0.74011591  0.99676022  1.30228529  1.18457075 #>  [3739]  1.32723473  0.70946414  0.80476694  1.58830030  1.46507095  0.49804376 #>  [3745]  0.48835698  1.01331436  1.30228529  0.99870715  1.51880867  1.47341794 #>  [3751]  3.16158441  0.98470990  0.66450758  0.49369161  0.50149057  2.27857527 #>  [3757]  1.30228529  0.78776929  0.39400007  0.79967798  0.32554223  1.80830114 #>  [3763]  0.70591124  1.19228930  1.49210561  1.95327410  0.98104670  1.15973438 #>  [3769]  0.70946414  1.99918976  0.99676137  1.56260271  0.59684224  1.12684332 #>  [3775]  1.23839286  0.99357442  1.45020285  1.01237273  0.72664265  0.85584446 #>  [3781]  0.64656497  1.41530612  1.63176751  0.82657037  0.76692555  0.99323277 #>  [3787]  0.99940596  0.49918478  0.48868188  0.97671397  1.15133774  1.31496960 #>  [3793]  1.45623215  0.70725702  0.77906938  0.77518674  0.50208505  0.65170024 #>  [3799]  0.72259957  0.33982726  0.89566917  0.85906250  1.59481820  0.43547162 #>  [3805]  0.98104670  0.39988099  1.46735107  1.30345142  1.33784666  0.91918070 #>  [3811]  1.97021810  1.40915190  1.11544657  1.95315325  1.95794202  0.62356863 #>  [3817]  1.43048415  0.63984123  1.12119623  1.29143408  1.06493054  1.47157005 #>  [3823]  1.74778300  0.98780869  0.59948680  0.39359854  1.46072282  0.58730000 #>  [3829]  0.76226607  1.27926416  1.43159437  1.56327801  0.97270787  0.48968258 #>  [3835]  0.98520954  1.11280070  1.05404095  2.11078586  1.04210668  0.59686748 #>  [3841]  0.90324947  1.19535021  0.77602526  1.24318831  0.65216432  1.47653440 #>  [3847]  1.70980514  0.57070465  0.39409443  1.00367543  0.98515893  0.39356605 #>  [3853]  3.99912508  0.97798437  0.98263279  1.02256740  2.99510869  1.18947201 #>  [3859]  1.30582020  1.47564778  0.81915566  1.97023250  0.97653219  1.31700653 #>  [3865]  1.16860408  0.98459912  0.98378299  1.08708613  0.49956682  0.39449088 #>  [3871]  1.29117464  0.49217510  0.73279809  0.58056446  0.86289874  1.78846842 #>  [3877]  0.89986445  0.88407127  1.08972957  0.75812528  1.31550021  2.96541872 #>  [3883]  1.66455524  0.53622460  0.39300691  1.15877709  0.99784767  0.49211933 #>  [3889]  1.63752879  1.48045603  0.65253022  2.15239013  1.04325066  1.15298837 #>  [3895]  0.74194466  0.55899799  0.69535355  0.78412500  1.66108007  0.98553363 #>  [3901]  1.18177315  0.84236142  1.46917330  1.78084898  1.95596874  0.79140764 #>  [3907]  0.98518815  0.98168172  1.96892885  0.87650154  0.99323277  1.25788837 #>  [3913]  1.13452421  0.80488808  0.82476115  2.28435648  0.99886986  1.74714673 #>  [3919]  1.13396674  1.08017220  0.32686983  0.58951036  0.90686007  1.07781287 #>  [3925]  0.74899715  1.73434080  0.78810825  1.30479044  1.99699775  0.32949097 #>  [3931]  0.99399661  0.98341680  0.86541918  0.39217291  0.99085737  0.59964358 #>  [3937]  0.62297514  0.56882771  0.98333357  0.65120526  0.97730925  0.66585750 #>  [3943]  0.74448107  0.59308374  1.72035920  1.32886231  0.97718216  1.47458310 #>  [3949]  0.65102151  1.74127395  0.56174994  1.62809517  0.75788848  0.47368485 #>  [3955]  0.42743629  0.80857646  0.72227887  0.61676326  0.61676326  0.95174806 #>  [3961]  0.68650862  0.49255452  0.49622561  0.97859283  0.36332534  0.79967798 #>  [3967]  0.76825626  0.65037780  0.98294787  1.91359924  0.99336841  0.79690014 #>  [3973]  0.57218110  1.59863148  0.99963029  0.88197413  0.53090587  0.94765660 #>  [3979]  0.72035437  0.97823283  0.54519459  0.98500017  1.06717797  0.99612517 #>  [3985]  1.49817938  1.20366917  3.42208934  0.98515893  0.97879533  1.46971672 #>  [3991]  1.95338431  1.00417009  0.65660124  1.58537179  1.16866872  1.76028062 #>  [3997]  1.42309458  0.70440223  1.01519793  1.44983305  2.31386763  0.67074007 #>  [4003]  1.17967536  0.83157445  1.20067979  0.59873360  1.26020090  4.90823017 #>  [4009]  1.50313158  0.65105108  1.33295372  2.58810772  0.61992778  1.39004819 #>  [4015]  0.97789812  0.94765660  1.21569834  0.73308366  1.50561467  1.49817938 #>  [4021]  1.13666306  0.99820201  0.49578177  0.98738322  0.96082364  1.47028115 #>  [4027]  1.46495558  0.98207579  1.75147898  0.72953090  0.98039755  2.10249952 #>  [4033]  0.73247779  0.82268803  1.62755376  1.50648945  0.65099284  1.30255908 #>  [4039]  0.87576541  0.99914467  0.86382243  1.10844605  0.94515067  0.85815583 #>  [4045]  0.98515480  0.80857646  0.97650324  1.65796521  0.65549248  0.94341628 #>  [4051]  0.56529117  0.85689882  1.46874946  0.98060862  0.65099319  0.93452496 #>  [4057]  1.87807220  0.98421296  0.98423865  0.70282149  0.54513956  0.98263279 #>  [4063]  0.97824648  1.12481481  0.52306641  1.10450893  1.08487362  0.74446099 #>  [4069]  1.37647246  1.00418845  0.74904986  0.97879533  1.95306452  1.23598037 #>  [4075]  1.17689942  0.98406778  1.23839286  0.88421073  0.99156353  0.49921662 #>  [4081]  1.02256740  0.79856161  0.98424987  0.37434687  0.44280556  0.59114165 #>  [4087]  0.74378405  0.59841081  1.46507095  0.98200000  1.22119495  0.98519029 #>  [4093]  0.98323872  0.89042449  1.47154776  1.59280267  1.16470746  0.98247845 #>  [4099]  0.49250009  1.70416170  0.76994645  0.98306435  0.97653226  0.72230623 #>  [4105]  0.66266440  1.99881192  0.98622720  0.79869565  0.48640344  0.52715199 #>  [4111]  0.83314572  1.47610168  1.07305782  0.68429011  0.82657037  1.14420777 #>  [4117]  0.99959748  1.46521183  0.65345829  0.83063448  1.45330134  0.79396097 #>  [4123]  1.00464007  0.86588305  1.13599612  1.09771897  1.06802853  1.11166614 #>  [4129]  1.41898520  2.24063891  0.82546157  1.55175593  1.66749920  1.22390623 #>  [4135]  0.99970248  1.95682159  0.66534621  0.85432184  0.75473302  0.49211933 #>  [4141]  0.73387723  1.28555268  0.79803686  1.60506417  0.86774806  0.67982004 #>  [4147]  0.78258724  1.56252260  1.44455775  2.46059663  1.16724944  2.46166950 #>  [4153]  1.54631250  1.14243462  0.74955447  0.98323872  1.10061543  0.98476140 #>  [4159]  0.67074007  0.97841080  0.97977178  0.49413006  1.40177589  1.11830077 #>  [4165]  1.00124776  1.15036645  0.69643476  0.99963029  1.95439347  0.99323277 #>  [4171]  1.28859375  1.14339910  0.91717952  0.33262978  0.78882271  0.81340589 #>  [4177]  0.88600909  0.97775706  1.14187963  2.27894837  2.00195299  1.05369407 #>  [4183]  1.24740792  0.87322166  0.66627064  2.28808883  2.93691304  0.65318119 #>  [4189]  0.87084580  0.69741875  0.54368740  0.73302282  0.53659206  1.23403205 #>  [4195]  0.97657323  1.19611227  1.58248078  0.98722564  1.97000035  0.88014031 #>  [4201]  0.99971529  0.49936657  1.57426422  1.00462090  1.13267214  1.47455329 #>  [4207]  0.63895832  0.46364051  1.51224108  0.67989758  1.21841563  1.08564291 #>  [4213]  0.49152770  1.10435179  0.96966798  0.96303850  0.83555444  0.98378299 #>  [4219]  0.47060750  1.49870046  0.49867567  2.24874432  1.09087647  1.95306452 #>  [4225]  1.00597075  1.34250575  0.95283259  0.98294125  0.59895499  1.23819236 #>  [4231]  0.68096482  0.73247002  0.84034897  0.98839286  2.45310781  0.77315625 #>  [4237]  0.70282149  1.51606514  1.00082537  0.65434000  1.47563319  1.02258513 #>  [4243]  0.83114398  1.31593512  0.78328836  0.43413684  0.98413104  1.30198569 #>  [4249]  0.98487099  2.44558512  0.73211389  0.88781000  1.49730302  0.97671397 #>  [4255]  1.12433129  0.32768747  0.77315625  0.98470990  0.76644470  2.09514510 #>  [4261]  1.30827423  0.89017977  6.63260309  1.95612603  0.57126588  1.02144722 #>  [4267]  1.50123806  1.07027733  0.74549745  1.02510904  0.64255077  0.85503949 #>  [4273]  0.89474648  1.00141885  0.99473707  0.78700437  1.49817938  1.32078279 #>  [4279]  1.47377591  1.47564778  0.74815955  2.34818591  0.79592544  0.73348828 #>  [4285]  0.91087464  0.88986432  0.78412500  0.98001356  1.70974517  0.97653219 #>  [4291]  1.14186702  1.02088007  2.23554244  0.75008724  0.85366918  0.98082019 #>  [4297]  1.04639307  1.59910707  1.40149528  1.48083846  1.44050249  6.45717040 #>  [4303]  1.54392957  1.02254795  0.71537634  1.96206369  0.98695134  2.61386090 #>  [4309]  1.31901274  1.28148276  1.30200432  1.31098496  0.83682370  1.03372340 #>  [4315]  0.88943411  0.97823283  0.78303626  1.75693465  1.47154776  1.30200432 #>  [4321]  0.98484854  2.00215774  1.12998644  1.09582687  1.02144722  2.74551629 #>  [4327]  0.52838095  0.92989167  1.52857602  0.98019784  0.87222556  1.96941981 #>  [4333]  0.66546801  1.11093993  1.65652768  1.09025641  1.37814308  0.97621656 #>  [4339]  2.06212079  1.01189816  1.47730649  1.36337142  0.99399661  1.55633259 #>  [4345]  0.49241015  1.19094146  0.94121499  1.72038725  1.30933334  1.11799597 #>  [4351]  1.07619507  2.97735365  0.51170566  1.39457524  1.47652530  0.97997870 #>  [4357]  0.39570382  1.32216475  0.75442271  2.23975912  1.49840480  1.15206122 #>  [4363]  6.54153847  1.25190079  1.99167903  1.99696567  0.99165755  1.56414171 #>  [4369]  0.97653226  0.95174806  1.24891705  1.33795424  1.46486494  1.05444229 #>  [4375]  1.18148225  0.78978051  1.30367608  1.08915826  0.73730882  0.78448760 #>  [4381]  1.93306276  0.84417514  1.24668919  0.97270787  0.94281530  0.79952477 #>  [4387]  2.44122317  1.39100418  0.62894419  1.99225035  0.87405982  2.00328766 #>  [4393]  1.18648576  0.79485953  0.63317622  0.98515893  0.32591902  1.65815077 #>  [4399]  1.56260719  0.49582878  1.04515187  1.18040095  0.79740910  0.72491653 #>  [4405]  1.78853895  0.97755036  0.97744488  1.49928513  1.17039612  0.49423645 #>  [4411]  0.83952760  0.32563977  0.84484489  0.99359960  0.48925148  1.95962230 #>  [4417]  0.71232325  0.99913364  1.96209340  1.95646810  1.29168648  0.99612517 #>  [4423]  0.78414995  1.19847977  0.98151001  5.92335382  0.76521471  2.18851408 #>  [4429]  0.42006697  0.48899218  0.73239919  1.63752879  1.31029961  1.47059633 #>  [4435]  1.03846295  0.99754607  0.48032275  0.97648927  1.32631610  0.66057158 #>  [4441]  0.49249107  0.81259451  0.83774037  1.24925745  1.54257842  0.39789483 #>  [4447]  1.24595172  0.79634084  1.18177315  0.65099319  1.13482585  1.76084366 #>  [4453]  0.99944192  1.79676363  0.65251981  1.19228930  1.24342134  1.19703991 #>  [4459]  0.66531174  2.46202741  1.25204813  0.24963950  0.98695134  0.91030809 #>  [4465]  1.46663559  0.65445448  1.00298113  1.96558977  1.47345212  1.17205676 #>  [4471]  1.07779800  0.99071429  0.79578966  1.47341794  0.97706411  0.85836154 #>  [4477]  1.04060448  0.78103546  1.45069287  0.59639796  0.84861960  0.19697420 #>  [4483]  0.99959748  0.73556214  0.99009675  1.20553409  1.51418635  0.98200000 #>  [4489]  0.74378405  1.97106726  1.15766345  0.66585750  0.32827032  1.42478764 #>  [4495]  0.33241099  0.31121617  0.21693701  0.78137117  0.84505322  1.61715293 #>  [4501]  0.89979738  2.28538069  1.54086160  0.48968258  1.21484728  0.72011480 #>  [4507]  0.98399634  0.57093981  1.60556951  0.39241868  0.66450758  0.92020534 #>  [4513]  1.23212670  1.38771734  0.74545138  1.72716485  1.99727200  0.67610599 #>  [4519] 14.23094576  1.26850617  0.97877971  1.49631911  1.54743420  1.33171500 #>  [4525]  0.97719673  2.28294001  1.05176361  0.98267482  0.81923202  0.86087073 #>  [4531]  0.99508931  0.98355707  0.71381104  1.42176511  1.30275215  0.51128370 #>  [4537]  0.90530865  2.95461298  0.98103184  0.46726248  0.59308374  0.97685710 #>  [4543]  0.82721852  0.49972096  1.30204292  0.72564305  1.17809551  1.09728659 #>  [4549]  0.98498213  0.60000081  1.16724944  0.49195757  0.49206552  0.99544850 #>  [4555]  0.99222090  0.37716290  0.49661875  0.87084580  1.52951033  1.23462713 #>  [4561]  0.98267698  0.97719673  0.49791976  1.31364811  1.37811704  0.20865013 #>  [4567]  7.07681725  1.19066508  1.24595172  0.74117748  0.98476140  1.17068004 #>  [4573]  0.49603115  0.79204496  0.33982726  0.98060862  1.64749667  0.72415277 #>  [4579]  0.91534483  1.13209954  0.78567941  0.63676162  0.98294787  0.97657323 #>  [4585]  0.82438296  1.04824031  0.97695560  0.48939766  0.98187037  0.48842855 #>  [4591]  1.23368918  1.17000159  0.65216432  1.11037274  0.86880833  0.65466667 #>  [4597]  0.95944812  1.49514206  0.85836154  0.65403113  0.79147122  1.24925745 #>  [4603]  0.88407127  0.30731885  1.84564452  1.10657869  1.48833135  0.97841080 #>  [4609]  1.63083828  0.97648978  1.52220741  0.75788848  0.73247515  1.98955826 #>  [4615]  0.99590900  1.39822640  1.47059633  1.97106726  0.87548954  1.36681205 #>  [4621]  1.35666881  1.47389642  0.65561120  1.24515647  0.92989167  0.33074030 #>  [4627]  0.74117748  0.97789812  0.98267482  0.99399661  0.39140119  1.43617286 #>  [4633]  1.19611227  1.23278400  0.79124039  0.61296845  0.97879533  1.15389224 #>  [4639]  0.96223289  0.97775706  1.30557767  0.74815955  1.33188181  1.48155255 #>  [4645]  0.90896456  0.24469883  0.51193340  1.26354213  1.23154510  0.49385085 #>  [4651]  1.78949296  1.95342794  2.45187380  0.72004087  1.32610691  0.99165755 #>  [4657]  0.74658637  0.74194466  0.65575733  1.49210561  1.00412318  1.22884803 #>  [4663]  2.56100754  1.36344684  0.97823405  0.85673436  0.49212244  0.91258970 #>  [4669]  2.34759025  0.98355707  1.46577324  0.65105108  1.13718792  0.18158784 #>  [4675]  1.64789689  0.95944812  0.98207579  1.39656450  1.56270745  1.16456902 #>  [4681]  0.98498213  2.45518947  1.38436081  1.31496960  0.75777538  0.86225029 #>  [4687]  0.59975849  0.98470990  0.41419085  0.98518815  1.46444148  0.98103184 #>  [4693]  0.82420874  1.91136320  1.59481636  0.99005620  0.50232003  0.68630260 #>  [4699]  1.66599579  1.18648576  0.97270787  0.98520865  1.34254745  1.18467076 #>  [4705]  1.14005265  0.99676022  0.99676022  0.35973075  1.52813791  1.56574852 #>  [4711]  1.25190079  0.86618976  1.65796521  1.16566878  0.50231908  0.71402164 #>  [4717]  0.90763189  0.78355910  0.79076724  1.69191659  1.30890897  1.07091795 #>  [4723]  1.05858515  0.49972096  0.75442271  0.99245122  0.63712107  0.78026408 #>  [4729]  1.46473467  1.42993226  0.97755036  0.94765660  0.65815042  0.48894906 #>  [4735]  2.46059663  0.72188499  1.74778300  0.49115071  1.47091293  1.07896417 #>  [4741]  1.00816072  1.62925061  0.99978127  0.49210648  0.98424487  0.66525956 #>  [4747]  0.99477913  2.36762915  1.47637480  0.99735135  0.97824648  1.00312249 #>  [4753]  0.50852490  0.96889779  1.47928237  1.46521183  0.66627064  0.97730925 #>  [4759]  1.30216892  1.46537896  1.22219632  2.29115382  0.79516439  1.00139427 #>  [4765]  1.20000163  0.98209927  1.47689869  0.49166679  2.52040179  2.30119680 #>  [4771]  1.08707387  0.49168572  1.47091425  0.59442857  0.74977686  1.18457075 #>  [4777]  1.96688390  0.51543750  1.26411444  1.63613621  0.98523608  1.56054437 #>  [4783]  0.98376519  1.30806226  0.98510905  0.30607295  0.94765660  1.00774277 #>  [4789]  1.18648576  0.85512487  0.84567078  1.45434330  1.32274973  0.99913364 #>  [4795]  0.76353023  1.51418635  1.33632040  0.80558508  1.63038805  1.48388933 #>  [4801]  0.97744488  1.31700653  0.96644532  1.24693259  0.39449088  0.65346523 #>  [4807]  0.98622720  1.19897361  1.07781287  0.59442857  0.99970248  1.62169738 #>  [4813]  0.98518815  1.30292898  0.74135468  0.97823283  0.82797868  1.77724885 #>  [4819]  1.89681937  1.21423182  0.98151001  0.99754607  1.46604565  1.35307325 #>  [4825]  0.48635393  1.46736971  1.38989635  1.99352275  0.65631938  0.97648927 #>  [4831]  1.30020383  0.83879385  0.24830819  1.24949685  1.56506017  0.66546801 #>  [4837]  2.42542886  0.85694988  0.84046207  0.74964257  1.33164419  0.65466667 #>  [4843]  1.51754820  1.32671924  0.32837208  0.49217813  0.74841700  1.13666306 #>  [4849]  0.59295607  0.82685075  1.32610691  0.43502015  0.98323872  2.94059351 #>  [4855]  1.24841643  0.80864253  1.96495691  0.97877971  0.73688795  0.92989167 #>  [4861]  0.99780889  0.32708104  0.53308430  0.99970498  1.23368918  1.12556685 #>  [4867]  0.97944887  1.47610168  0.71579718  0.98358920  2.16277254  1.24893084 #>  [4873]  1.11166614  0.92029316  0.69816875  1.18347264  1.98714883  0.98391514 #>  [4879]  1.96847731  0.65162992  0.88369467  2.13390045  0.65120526  0.68719476 #>  [4885]  1.97738928  1.15206122  3.27227242  0.49188259  0.79383788  0.84619340 #>  [4891]  1.23469363  0.77315625  1.51997154  1.21429879  0.99848283  1.72136299 #>  [4897]  1.23201705  1.47637480  0.73613251  0.71958609  1.66617079  1.59848990 #>  [4903]  0.47032561  0.86225029  1.15609320  1.47533560  2.00896271  0.92514489 #>  [4909]  0.50000068  0.90201900  0.75789577  0.59858946  1.00893287  1.46616732 #>  [4915]  1.57120000  0.65120526  0.74374317  1.62518902  1.01331436  0.81530540 #>  [4921]  1.18624758  0.59355573  1.07626068  1.24953787  1.34421429  0.78798570 #>  [4927]  0.87866489  1.47545399  0.99222090  1.31404484  0.98459912  0.65562797 #>  [4933]  1.03470035  1.47770296  0.98435020  0.97662669  0.79981989  0.98500017 #>  [4939]  1.30916050  1.24893084  1.30015122  0.30717091  1.15714443  0.32701557 #>  [4945]  1.00328793  1.95962230  1.49036162  0.72483399  1.38966052  0.98378299 #>  [4951]  0.83063448  0.80537110  2.45763850  0.99458018  0.79803686  1.49817938 #>  [4957]  0.74841700  0.78245041  1.45450196  1.78949296  1.47877724  0.70725702 #>  [4963]  1.35942483  0.27515386  1.72450059  1.19066508  0.93903610  1.95488977 #>  [4969]  1.13149280  0.84775756  1.52460968  1.32637217  1.18121094  0.66707558 #>  [4975]  1.47311368  0.57543910  0.43547162  1.14681792  0.65104882  1.25934853 #>  [4981]  1.15917015  2.12177105  0.98341680  0.98521586  0.83261137  1.00374312 #>  [4987]  1.96710703  0.79976198  1.47059633  0.85324157  0.78818887  2.94436080 #>  [4993]  0.49261804  1.65408536  1.24962810  0.74041923  1.47585376  0.99071429 #>  [4999]  1.95995739  1.64491890  0.66642019  2.29655686  0.83374960  0.79869565 #>  [5005]  0.66490090  1.30209764  0.79204496  0.58180079  1.19964297  0.98490185 #>  [5011]  2.46061218  0.98459912  1.95759065  1.22476393  1.00086696  0.98447907 #>  [5017]  1.24027612  0.59018160  3.17249353  0.58641826  1.56414171  0.97695560 #>  [5023]  0.98492840  1.32021046  0.84660146  0.31588553  1.18885714  1.09808416 #>  [5029]  0.87222556  0.61501066  0.98622720  0.98124313  0.35146596  0.74549745 #>  [5035]  1.49871701  0.66450682  0.99863224  1.48155255  0.84907465  1.18968507 #>  [5041]  0.60296392  0.97936515  0.59982149  1.18393909  1.30608691  0.32551073 #>  [5047]  1.24027612  1.11166614  0.59355573  0.94341628  0.56397220  1.36192963 #>  [5053]  0.92029316  1.24625168  0.87554723  0.99544850  1.20810112  0.99940596 #>  [5059]  0.83661855  1.30691658  1.17389577  1.95612603  1.74935301  1.95833261 #>  [5065]  0.99940596  0.72011480  1.30933334  1.32980180  1.73259834  1.21397197 #>  [5071]  0.74254215  1.27798164  1.41428763  1.47311368  1.84065323  1.00086898 #>  [5077]  0.77568740  3.41800630  0.95174806  0.97824648  0.50051067  1.06627920 #>  [5083]  0.66503071  0.43832320  1.33295372  0.65146449  1.95517713  1.09691737 #>  [5089]  0.57039293  0.99754607  1.42204040  0.52854424  0.98200000  1.16380375 #>  [5095]  0.72483399  0.69857733  0.98456854  0.97773981  0.59743560  1.63585001 #>  [5101]  1.19557500  1.47744457  0.71530128  0.98674120  0.81806810  1.30397916 #>  [5107]  0.42820013  0.97662669  1.57368562  0.67500092  1.58500431  0.98375546 #>  [5113]  1.01232247  1.46485984  0.99935287  2.21119873  1.96589574  1.46455173 #>  [5119]  1.80000244  1.20069747  0.98435020  1.66020862  0.36412324  0.79667161 #>  [5125]  0.97676912  0.52412606  1.06425458  1.30506044  2.24708983  0.98424487 #>  [5131]  1.99470270  0.73271670  0.24415926  2.24525100  1.06990857  0.97685710 #>  [5137]  1.07343409  1.71346873  2.93119234  0.74608435  1.27926416  1.24962810 #>  [5143]  1.19535021  0.44447931  0.98423865  0.73302282  1.31010347  0.99836956 #>  [5149]  0.98484854  1.62731042  0.83286826  0.65112810  1.05465401  0.83896742 #>  [5155]  0.99788934  0.97789812  1.96974198  0.98257196  0.48852438  0.66408345 #>  [5161]  0.97653226  1.46503824  0.24477761  1.23857171  1.73875523  1.47249425 #>  [5167]  1.21841563  0.49136558  0.54456522  2.44387591  0.97648978  0.66490090 #>  [5173]  0.39795619  0.77573438  0.92989167  0.60864646  0.49229956  1.57292548 #>  [5179]  0.49894467  1.24736167  1.00133890  1.33115942  0.72364447  0.48852438 #>  [5185]  3.28412028  0.73688795  1.11769642  0.97719673  0.73688795  0.49125864 #>  [5191]  2.99910743  1.12092538  1.24154096  0.97936515  1.33284039  0.59355573 #>  [5197]  1.30431044  0.98039755  0.65204201  0.94341628  0.49979874  0.92466667 #>  [5203]  0.97956712  2.56145022  0.48865463  1.64580174  1.46543339  1.00312249 #>  [5209]  0.54476353  1.09100357  1.80661966  0.98518815  1.97390268  0.88238906 #>  [5215]  1.60261573  0.90000122  0.99754699  1.22476393  1.62594450  2.00126468 #>  [5221]  0.99165755  0.94341628  1.09236971  0.73513969  0.66609645  1.61429260 #>  [5227]  0.97823283  0.65594342  1.07306451  0.97916630  1.19942811  1.26816714 #>  [5233]  0.97270787  0.97657323  0.49133849  1.97030960  0.98294125  1.39656450 #>  [5239]  0.49152770  1.35078466  0.59964358  0.98259761  0.49143370  1.17824445 #>  [5245]  0.66751783  1.10061543  2.10117491  2.32859111  1.13876825  1.47773839 #>  [5251]  0.98546893  0.78144631  0.49260793  0.96898343  0.97798437  2.03882725 #>  [5257]  0.98456854  0.99612517  1.19299531  1.54377210  0.39742882  0.83299790 #>  [5263]  1.65908083  0.58689756  1.96612480  0.59805613  0.80147205  1.02918140 #>  [5269]  0.67653662  0.98305540  1.95962230  0.39742977  1.71238019  0.98286728 #>  [5275]  0.78700437  0.85432184  1.54080097  1.99577867  0.48990557  0.90591943 #>  [5281]  0.98151001  0.49183373  0.97736376  0.98391514  0.83262056  1.13983011 #>  [5287]  0.97704875  0.49738956  0.98519029  2.52708426  0.98307843  0.99971529 #>  [5293]  0.78971383  0.66737337  1.02828766  0.97730925  1.78328571  1.96302001 #>  [5299]  0.72768472  1.11934358  0.78886187  0.44595605  0.49611952  0.90519096 #>  [5305]  0.72324908  1.46559617  1.42571992  1.07350447  0.93253503  1.30651844 #>  [5311]  1.27118250  0.89597935  1.95325339  1.22248046  1.32069478  1.24603328 #>  [5317]  0.52064883  0.89164888  0.94765660  0.54217997  0.98124313  1.54399776 #>  [5323]  1.12017857  5.77823100  0.99970248  0.24434094  1.26743211  1.11843310 #>  [5329]  0.74964257  0.97936515  1.06595407  0.37608596  2.19156879  1.24796195 #>  [5335]  1.58691965  0.79831147  1.07605661  1.27454071  1.11149015  0.70902154 #>  [5341]  0.73485836  0.85362086  0.31391792  0.46702358  1.26064761  0.97051190 #>  [5347]  1.19279593  0.44471706  1.30184834  0.75473302  0.57108912  0.59233538 #>  [5353]  0.97663705  0.94765660  0.48853206  0.80243142  1.03548111  0.76707881 #>  [5359]  0.61275446  0.55254454  1.79843325  1.64295704  0.75479290  0.65601039 #>  [5365]  0.46127497  0.79140764  1.95314646  0.65204201  0.76278736  1.63876107 #>  [5371]  0.91615509  4.14537693  0.76354974  0.81259451  1.96615685  0.43588867 #>  [5377]  1.46604565  0.39789483  0.85106441  0.79856161  1.63458253  0.59217081 #>  [5383]  1.58767575  0.99323277  0.74077628  1.46335005  1.91956774  0.65072471 #>  [5389]  0.86011344  0.86039019  0.74608435  0.49137750  1.11970360  1.09588323 #>  [5395]  0.73613251  0.82221376  1.14529535  0.72664265  1.16429555  1.54467351 #>  [5401]  0.89722849  1.49471537  0.98770170  1.30241051  0.93138678  2.59532524 #>  [5407]  1.59925290  1.23631311  1.05708848  0.91318906  0.70841031  0.49661639 #>  [5413]  0.90883963  1.34825390  0.45126505  0.98476140  1.66629144  1.05043186 #>  [5419]  0.99323751  0.74505812  1.96206369  4.14447960  1.58971528  0.90299675 #>  [5425]  0.45518179  1.16144193  0.72491736  2.57084965  1.34444657  1.26534006 #>  [5431]  0.06248593  0.53013487  0.52529373  0.79705000  1.19725770  1.21290218 #>  [5437]  1.30688797  0.98082019  0.49838069  1.30868001  0.98391514  0.97653219 #>  [5443]  3.96888359  0.96674996  0.98142314  0.73163489  0.76968907  0.91714561 #>  [5449]  1.56863608  0.97981115  2.98751854  1.75777530  0.73792447  1.15877157 #>  [5455]  0.78398296  0.85120602  1.01480494  1.62863694  0.66238294  0.22209820 #>  [5461]  1.18030704  1.00466231  1.41600689  1.28542483  0.97671397  1.53511699 #>  [5467]  0.70761834  0.87858665  0.98482029  1.90349612  0.70293191  0.93975549 #>  [5473]  1.45128979  1.76435772  1.31263877  0.52602206  1.30345142  0.49582878 #>  [5479]  1.22873150  0.74194466  2.28426570  0.19188962  1.13266850  0.66525956 #>  [5485]  0.98513531  1.64371137  0.88570517  0.85240070  1.01250425  1.22408077 #>  [5491]  1.96727199  1.06926137  0.97691931  1.43367070  0.70427707  1.22349416 #>  [5497]  0.76593081  0.98060862  1.00117840  1.57292548  0.86774806  0.69221147 #>  [5503]  0.31122115  1.00439695  0.67942117  0.44282221  1.77276779  1.80104621 #>  [5509]  0.73545712  1.64145165  1.37725295  1.83068966  1.14912813  0.71300144 #>  [5515]  1.01544212  1.31694280  0.95944812  1.52557471  1.47401223  1.29516289 #>  [5521]  1.00893287  0.99788934  1.08622915  1.55910319  1.17897414  0.57509228 #>  [5527]  0.48972443  1.28736122  2.23216738  0.64202567  1.69836735  1.11024792 #>  [5533]  0.42844941  1.00412318  0.73354726  1.16135658  0.56612245  0.49181800 #>  [5539]  0.83751376  1.25243430  0.65182654  0.72771882  0.97897101  0.90862419 #>  [5545]  1.24595028  0.71402164  1.43917218  0.28290281  0.47227354  0.58890600 #>  [5551]  1.86820897  0.98446443  1.33217819  1.02040047  0.84831887  0.57108912 #>  [5557]  1.00194744  0.62077344  2.38746991  0.90645414  1.35311844  0.76139845 #>  [5563]  1.14078585  0.72227887  0.78726941  1.05822934  1.17412806  1.36708569 #>  [5569]  0.74972272  1.18264036  1.55358489  0.49909057  0.59649765  0.84212439 #>  [5575]  1.59399476  0.88533944  0.98358920  0.46188706  1.39872921  0.58890600 #>  [5581]  0.65665475  0.83077036  1.69418699  1.63540521  1.38276554  1.39615607 #>  [5587]  2.35938822  0.39530405  0.39634295  0.80950178  2.29957847  1.32136059 #>  [5593]  2.24916816  1.61823921  2.61058937  1.52376396  2.34527216  1.37252777 #>  [5599]  0.91753533  1.00323560  0.73489782  0.93698429  4.16218960  0.65541971 #>  [5605]  0.98251727  0.89791933  1.19453820  0.27896750  0.66622364  1.10120414 #>  [5611]  0.40430073  0.78823383  1.64059378  0.70218743  1.34740629  1.11987956 #>  [5617]  0.85689882  0.79740818  1.27004097  0.94951214  0.49130027  0.97648978 #>  [5623]  1.70381964  0.65936699  1.06425458  1.33219290  1.10740964  1.52557471 #>  [5629]  1.99826728  0.71676120  1.14221933  1.01030590  2.49190344  0.59966515 #>  [5635]  0.69644129  2.33658406  1.45411269  1.13482585  0.31376034  1.47412778 #>  [5641]  0.55535988  1.66619215  0.67982004  1.17452346  1.81434425  0.41961876 #>  [5647]  1.54002131  1.47739259  0.42266880  1.79558293  2.23825304  0.91047897 #>  [5653]  0.63712107  0.51410211  0.81830467  1.49602702  0.82372742  1.11640812 #>  [5659]  0.97270787  0.43897853  0.42387878  0.97653226  1.26967892  1.60506417 #>  [5665]  0.72415277  0.70286932  1.80104621  0.60357520  1.11862323  1.22593690 #>  [5671]  0.87866428  0.68762597  0.87664640  0.91667935  1.61730732  0.58811870 #>  [5677]  1.42111304  0.56938412  0.40244404  0.85366918  0.56316207  0.66646832 #>  [5683]  0.87866489  0.73865324  1.95510073  0.75709782  0.97841080  0.73650000 #>  [5689]  1.42478764  0.43345427  1.03147717  0.41328519  1.30738811  1.19611365 #>  [5695]  0.97669216  0.73853243  1.41512442  0.63676162  1.71534622  1.14681792 #>  [5701]  1.53103791  0.65100216  0.89376279  1.64097658  0.97823405  1.37869754 #>  [5707]  0.99780758  1.00344694  0.97956712  0.49161936  6.19009504  0.74011591 #>  [5713]  1.26096367  0.72035437  0.98200000  1.45286334  1.22678181  0.17759833 #>  [5719]  0.56336882  0.98142314  0.97417223  1.38709373  0.53668098  0.63139913 #>  [5725]  0.28562928  1.79523243  1.70909671  0.94978612  0.54610377  0.73331779 #>  [5731]  0.87866489  0.46494584  1.98011239  0.57836684  1.00958243  1.37702488 #>  [5737]  1.22251033  0.99306977  2.04509591  0.45137740  2.60795832  0.74374317 #>  [5743]  1.12085659  1.25708706  0.71676120  2.96310511  0.64257042  2.53799482 #>  [5749]  0.29865050  0.99873314  1.49730302  1.04454227  0.74479753  0.96279722 #>  [5755]  1.10819197  0.93943460  0.56778927  0.87931373  1.63959243  0.39314696 #>  [5761]  0.98452483  1.95649295  1.16633451  0.58445554  1.63083828  0.89614286 #>  [5767]  0.98312956  1.05355424  0.98515480  1.31098496  1.47469434  1.34567284 #>  [5773]  0.49553452  0.65485242  0.73730882  0.77870960  1.12684332  1.55813877 #>  [5779]  3.42762553  0.60396055  0.66546801  0.98925955  1.51926934  0.35235761 #>  [5785]  1.07091795  0.39628571  0.85366918  0.58890600  1.51962292  1.99757251 #>  [5791]  1.53242359  6.16008524  0.67500283  0.97671397  1.97389621  0.65264734 #>  [5797]  0.98505134  1.63666667  1.81331109  0.65458025  0.26952549  1.41939202 #>  [5803]  1.91889624  0.76208791  1.03321297  1.26635244  1.79948752  0.98482029 #>  [5809]  2.44340941  1.12880195  0.61943987  0.89631657  0.86208157  1.66605049 #>  [5815]  0.97029176  1.14545610  1.40519428  1.13127931  1.71211396  1.47567448 #>  [5821]  0.58598223  1.03767313  0.85663368  0.95174806  0.97956712  0.98520865 #>  [5827]  1.17092877  1.11995780  0.65537493  0.69455463  1.39748282  0.75296713 #>  [5833]  0.41018099  1.48884653  1.95353825  0.99071429  0.90819387  0.46981710 #>  [5839]  0.39988099  0.28631887  0.73264283  0.55092086  0.63231688  1.25014540 #>  [5845]  1.11672161  0.50017163  2.94182850  0.30367734  0.83783280  1.63613621 #>  [5851]  0.75473302  0.98263318  1.96683361  1.19386856  2.61803623  1.51310702 #>  [5857]  2.00919047  0.85289094  1.39373031  0.98487099  0.45287574  0.75021547 #>  [5863]  2.81867052  0.87222330  0.82907539  0.88267457  0.99940596  1.45106163 #>  [5869]  0.36611037  2.71843633  0.40183809  0.68880864  0.56297637  1.29251374 #>  [5875]  1.76968622  1.96964059  1.62101237  0.99583951  2.22942907  1.63241478 #>  [5881]  0.72486067  1.21746462  1.22681700  1.35666881  1.34774286  1.56863608 #>  [5887]  1.33348843  1.63068466  0.83063352  0.65239522  0.99544850  1.46444148 #>  [5893]  0.73678687  0.38439581  5.88244282  2.25503907  0.99071429  0.73793635 #>  [5899]  0.49161936  1.06802853  0.76237209  0.83128839  0.99085737  0.72725098 #>  [5905]  1.17409296  0.90398915  0.46128089  1.54036847  1.32532881  1.42924888 #>  [5911]  0.49918478  0.78787883  2.14940741  0.49661875  0.66163414  0.79281636 #>  [5917]  0.71102020  0.56407476  1.98331511  0.28511124  0.65936699  0.73836693 #>  [5923]  0.66047619  0.70646464  0.80105354  0.65346523  1.78420674  0.74549745 #>  [5929]  1.97851910  0.95940952  1.29516289  1.86208600  1.30273167  0.57207256 #>  [5935]  1.30177644  1.26391906  0.60453808  0.44431791  0.89515434  1.92738519 #>  [5941]  1.30763547  1.78162688  0.95568160  0.87077166  0.88492120  0.55783804 #>  [5947]  0.99970248  0.97691931  0.36412324  0.98505134  0.73508385  1.34148014 #>  [5953]  0.99473707  1.48049176  1.47218040  0.97823283  2.26068683  0.03254829 #>  [5959]  0.98510905  0.84536805  1.03822774  0.98344780  0.55640035  1.07480300 #>  [5965]  1.17453565  1.31316132  0.82888967  1.08409954  1.29433945  1.18686059 #>  [5971]  0.32753254  1.52557471  0.99940596  0.83183501  0.64831893  0.73247002 #>  [5977]  0.50135215  2.04545732  0.64429688  2.93159020  0.97200334  1.38384267 #>  [5983]  0.67580383  0.75655056  1.42105296  1.00140115  0.77043912  0.71412199 #>  [5989]  1.49210561  1.14527549  1.96779859  0.73268948  1.44966797  1.24745952 #>  [5995]  1.47556573  0.38657813  0.68552511  0.95944812  0.33273400  0.75877410 #>  [6001]  0.86928715  0.98826012  1.11017387  1.95547962  1.32652062  0.73513969 #>  [6007]  0.73253548  0.49090976  1.47685281  0.93722858  0.83951710  0.83010431 #>  [6013]  0.73857105  1.39960141  1.35032530  1.00639053  1.62442451  0.41791920 #>  [6019]  2.47539956  0.49311360  0.41606583  0.99107721  0.93116408  1.23620064 #>  [6025]  1.11724289  1.96121900  0.37407978  0.75479290  1.15016061  0.69385867 #>  [6031]  0.94588059  0.84999219  1.62772842  0.98459118  0.56904581  0.37990573 #>  [6037]  0.47641629  1.31167394  1.43399031  1.55511267  0.97669216  0.90499120 #>  [6043]  0.74757017  1.83614802  0.84112768  0.96966798  0.65466667  0.84263865 #>  [6049]  0.62432844  1.46117764  1.02919557  0.66654021  1.18040095  1.16278012 #>  [6055]  0.98542891  0.98019784  0.58730000  1.03625081  0.59473600  1.97445127 #>  [6061]  0.70945198  2.21453697  0.52760509  1.02945390  0.66215518  0.88600909 #>  [6067]  1.13224490  0.53280130  1.04082558  1.25204813  1.43963253  1.31320247 #>  [6073]  0.88525723  1.09059850  0.66363233  0.65508879  1.27246299  0.83262056 #>  [6079]  2.28661696  0.80018265  0.73227586  1.24603328  1.04285714  0.67226241 #>  [6085]  2.79920281  0.97704875  1.43556559  1.09230859  1.96079510  1.31077124 #>  [6091]  0.71425401  1.22814659  1.09444970  1.22904840  0.67833441  0.57345164 #>  [6097]  1.97314410  0.97859283  0.98371515  2.00029038  0.81876439  0.49956887 #>  [6103]  0.49361282  0.98355351  1.00322446  1.05879165  1.14221933  0.73206530 #>  [6109]  0.65114265  1.29947672  1.09934656  0.79912924  0.31981604  0.92466667 #>  [6115]  1.56825000  1.80868932  1.27900174  1.42683750  0.81046556  0.46511205 #>  [6121]  0.65274030  0.97879533  0.84567078  1.95300855  1.74831933  1.43861889 #>  [6127]  1.96515974  0.43932129  0.61190782  1.02256740  0.68172342  0.73271670 #>  [6133]  0.92989167  0.75333655  2.28038825  0.84619340  1.30997127  1.15643112 #>  [6139]  0.80736616  0.71033743  0.55989208  0.80864253  0.91634648  0.74908969 #>  [6145]  1.45382027  0.98435627  1.12671779  0.97657323  1.14771079  0.48826609 #>  [6151]  0.90299675  1.31847856  0.99873314  1.11747960  1.63241478  0.49143364 #>  [6157]  1.07498678  0.99323277  0.99222090  1.31831751  0.61992778  1.46761619 #>  [6163]  1.45906180  0.98286728  1.36471789  1.49870046  0.99206230  1.16619706 #>  [6169]  0.93967287  0.97663705  2.39271620  0.65796756  0.94737862  0.89551700 #>  [6175]  0.83661855  1.22170470  0.65512262  0.99399661  0.90529110  1.66946329 #>  [6181]  1.54981945  1.02720065  1.40586382  1.24841643  1.14509501  1.20268836 #>  [6187]  0.89420592  0.65815042  1.99470270  0.79869565  0.65485242  1.04289938 #>  [6193]  2.38746991  1.64039776  2.19287249  0.40428823  1.10970349  0.50105803 #>  [6199]  0.74709388  1.32652062  1.42853214  0.96958900  0.83983813  0.73236733 #>  [6205]  2.16545749  1.24603328  1.00429340  1.71940522  0.49729284  0.82634453 #>  [6211]  1.11510537  0.91463757  2.72485776  0.98712014  1.43892299  1.09830323 #>  [6217]  1.47759459  1.17618750  0.98151001  0.48868188  1.61054366  1.31693560 #>  [6223]  1.12825787  0.76644470  1.37515994  1.96933560  1.83585935  1.59675980 #>  [6229]  0.99085737  1.62794854  0.98355351  2.44397142  1.27424213  0.65681057 #>  [6235]  0.73236695  0.99863600  0.59074637  0.83747036  0.83783280  0.83467094 #>  [6241]  1.11179264  1.39768217  0.57126588  1.04757255  1.33254128  2.03457821 #>  [6247]  1.98490243  0.61460501  0.98151001  2.19781774  0.98124313  0.78120259 #>  [6253]  1.00340111  1.96079510  0.58632954  0.58799852  0.73058882  0.60687206 #>  [6259]  0.90591943  2.24909432  0.83114398  0.97680788  2.27850998  1.74769498 #>  [6265]  1.30275215  2.24866341  1.65270580  1.21933927  1.17523818  0.57683445 #>  [6271]  1.28067372  0.84567078  0.50824806  0.73772700  1.95412823  0.85487258 #>  [6277]  0.93721565  0.90239818  1.11079477  0.51953021  1.31048971  1.22884803 #>  [6283]  1.01997950  0.99873314  0.60604249  1.19513247  1.20067979  1.09100357 #>  [6289]  1.57439414  0.99323277  4.98983808  0.78355910  0.66593692  0.99878625 #>  [6295]  0.84660146  0.86716878  0.39656169  1.62748211  1.06634931  1.54086160 #>  [6301]  2.28317359  0.97981115  1.52376396  0.81263040  0.97804063  1.43135349 #>  [6307]  0.87670658  1.30315169  0.97657323  0.82739989  0.49611045  1.53217083 #>  [6313]  1.30241051  1.47773220  0.73247002  1.55451635  0.66654021  0.52412016 #>  [6319]  0.99491732  1.95833261  0.71039332  0.99970248  0.88407127  0.95174806 #>  [6325]  1.39719520  0.66737337  0.87373929  1.50958580  0.60399578  0.48847780 #>  [6331]  1.16070554  0.71125117  0.76488478  0.84211433  3.63855634  1.35273847 #>  [6337]  0.73545712  0.49905664  1.70941380  0.83369598  0.90434466  0.99256435 #>  [6343]  0.66643971  0.85120602  0.93103575  1.17142359  0.91367814  0.81259451 #>  [6349]  0.74391334  1.07095070  1.57041601  0.98039755  1.36522963  0.78739092 #>  [6355]  2.53601280  1.17045937  1.26610422  1.74392418  1.43352240  0.83302524 #>  [6361]  1.12971200  1.41844047  0.63939330  0.94006039  1.02823612  1.15966271 #>  [6367]  1.27745282  0.85012967  1.44830553  1.36118551  0.99825016  0.99071429 #>  [6373]  0.80714630  3.28412028  1.57032576  0.99583951  1.19406182  1.08030919 #>  [6379]  0.65123807  1.57236047  0.23979207  0.98432476  1.60681574  0.75981146 #>  [6385]  0.72717094  0.49156478  1.07367535  1.38832058  1.30315169  1.19619195 #>  [6391]  0.83783280  0.98108755  1.45221102  1.18998907  1.24249576  1.09651213 #>  [6397]  1.97694582  0.97718216  1.16731870  1.17527942  0.87373929  0.84236142 #>  [6403]  0.73501017  0.70950305  1.76084366  1.55301932  0.49009892  0.98515893 #>  [6409]  0.66761453  1.32554201  1.82418378  0.98484854  2.22536360  1.46663559 #>  [6415]  1.37333110  1.62197144  1.23823926  1.21833404  0.32866263  1.39656450 #>  [6421]  1.47545399  0.71329208  0.39140119  1.64371200  1.08093531  1.99828935 #>  [6427]  1.47300000  2.27933324  0.98839286  1.47389642  0.97997870  1.01250425 #>  [6433]  2.29290792  0.81923202  1.47721644  1.56312895  1.06493054  0.83334607 #>  [6439]  0.98060862  0.73153711  0.79062059  0.98770170  1.01308195  0.74492813 #>  [6445]  0.68262971  0.73302282  0.75479290  1.99509214  1.30983250  1.56283060 #>  [6451]  0.98104670  0.98124313  2.81867052  0.95216654  0.32769281  0.82018427 #>  [6457]  0.39322496  1.31301520  0.98039755  0.57104884  0.28087955  1.45304762 #>  [6463]  0.73237821  1.79180730  1.98646554  0.66744217  0.69643293  0.42820013 #>  [6469]  0.98780869  0.49115071  2.16361648  0.78130964  1.11587000  1.72448544 #>  [6475]  1.20883949  0.99222090  1.62363420  0.73796233  0.70872921  1.64011297 #>  [6481]  1.11652068  0.43876695  1.71381277  0.97824648  1.96727199  0.98487099 #>  [6487]  1.96683361  1.19869386  1.76081909  1.12064082  0.89788419  0.64429688 #>  [6493]  0.74041923  0.24849915  0.80351756  1.02282435  0.49385085  1.33388750 #>  [6499]  0.73394462  1.14140931  0.78365370  0.65109137  0.73865324  1.47735278 #>  [6505]  1.31361153  0.69683336  1.79899545  0.89263928  1.17389577  1.29679324 #>  [6511]  1.55920427  0.97657323  0.73368486  1.99217503  0.98275185  0.97650324 #>  [6517]  1.19066508  0.78644992  0.98492840  1.21945837  0.73485836  0.83243792 #>  [6523]  0.53843813  0.93312321  0.65658066  1.23029832  0.55640035  0.89010040 #>  [6529]  1.59739130  0.80167017  0.76153949  1.23857171  0.99222090  0.78184740 #>  [6535]  1.12467970  1.19942811  1.48373427  1.54476525  1.46413060  0.97977178 #>  [6541]  1.96919825  0.60622030  0.98074952  1.22100986  1.22149592  0.53815413 #>  [6547]  0.98312956  1.22814659  0.93053634  0.96251332  1.04425782  1.39500611 #>  [6553]  1.44184836  0.76237209  0.88810277  1.49233569  1.09236971  0.75347072 #>  [6559]  0.49052335  1.02945390  1.96519523  0.49200779  1.99888384  0.83393781 #>  [6565]  1.17555076  1.34078094  0.55812227  0.54618486  0.66057158  2.31399482 #>  [6571]  1.19933030  1.01567327  0.81340589  0.58890600  0.86666784  0.87756990 #>  [6577]  1.10839059  1.21953083  0.77095408  0.96223289  0.98391514  1.07343533 #>  [6583]  0.94578447  0.78482547  1.26917444  0.97556670  1.18648576  0.43518502 #>  [6589]  1.10450893  0.37728340  0.86248156  1.99910057  1.10197160  1.65789512 #>  [6595]  0.97663705  0.79954010  0.99508931  1.15133774  0.87222556  0.95382917 #>  [6601]  0.80116179  0.65430240  1.25708706  1.46485984  1.17969411  0.92973006 #>  [6607]  0.49211933  1.30933334  1.04210668  0.77877080  0.49968969  1.14966706 #>  [6613]  0.65099284  1.47186469  0.87554723  0.98435627  1.07819004  0.65153950 #>  [6619]  1.14681792  0.82420874  0.65680576  1.47386641  1.43048415  0.84171429 #>  [6625]  0.72146052  0.49128880  2.30705565  0.66204580  0.13362120  0.97676912 #>  [6631]  0.73514838  0.74877717  0.90717212  0.77081670  1.02363478  1.13422996 #>  [6637]  0.88687882  0.69356807  2.00278853  0.56698337  0.98305540  0.81806810 #>  [6643]  0.72486067  0.78259718  1.00023394  2.73748337  0.42698995  0.72011480 #>  [6649]  1.10587717  0.88646674  0.99914467  1.24479939  1.47730649  1.28045442 #>  [6655]  2.00481832  0.97956712  1.10816816  0.97650324  0.82898261  1.19965835 #>  [6661]  0.48635393  0.49779513  0.54282146  1.96079510  1.39840989  1.99819276 #>  [6667]  1.63366306  0.71074245  1.23412288  1.30608950  1.97030960  1.10929951 #>  [6673]  0.79543572  1.50336045  0.99307369  1.18959117  0.48151925  1.01250137 #>  [6679]  0.74978647  0.98905049  0.97650324  0.27075903  0.97944887  1.56261928 #>  [6685]  0.73268948  0.50197809  0.98074952  1.97245440  0.98520865  0.59977818 #>  [6691]  0.86346857  1.15880542  1.10559937  1.17988647  0.71537188  0.37736651 #>  [6697]  2.30352649  1.47685281  0.79788108  1.16566878  0.49423645  1.99569534 #>  [6703]  0.79930691  1.36954507  1.05097844  1.46660972  1.47669664  0.98251727 #>  [6709]  0.98847291  1.45536944  0.97879533  1.00432354  1.22576187  0.98481096 #>  [6715]  0.57366358  0.77816630  0.28924935  1.95412823  0.98447907  0.87008956 #>  [6721]  1.80986554  0.97902615  0.48847780  1.43917218  0.98074952  1.54297421 #>  [6727]  0.88943411  0.80805665  0.65373908  1.00347918  0.53622460  0.90000122 #>  [6733]  1.16267734  2.00735086  1.18381457  0.80950178  0.99323277  1.00816072 #>  [6739]  0.73545712  0.75812528  0.60034874  0.97662669  1.30938229  0.60972919 #>  [6745]  0.65183804  0.79740910  1.46475486  1.13127931  1.02918140  0.48911641 #>  [6751]  0.73623453  1.05518685  1.04078726  0.98124313  0.65444189  1.06123113 #>  [6757]  0.33225341  0.97669216  1.32532881  1.40302264  1.04841252  0.65430240 #>  [6763]  0.98305540  1.48031371  1.46486494  0.96898343  0.99843325  0.30314956 #>  [6769]  0.64245536  1.99225035  1.39948241  1.47587270  1.30432863  1.25119073 #>  [6775]  1.22750000  1.47246905  0.79485953  0.65631938  0.98722564  1.45906180 #>  [6781]  1.27946818  0.97977178  1.24603328  0.77550824  0.66081778  0.74955447 #>  [6787]  0.98506306  1.35723574  0.54368740  0.97877971  1.25126731  0.99477913 #>  [6793]  1.68531737  0.78137117  2.17295573  0.50011416  1.24736167  0.66047619 #>  [6799]  0.97736376  0.98306435  1.97540341  2.97016859  0.81340589  0.97981115 #>  [6805]  1.32007493  0.62632254  0.78533983  1.46507095  1.42394482  0.99085737 #>  [6811]  0.66003746  1.74850318  0.99944192  1.46816956  0.86225029  0.48838456 #>  [6817]  2.02464495  1.16279732  0.72445467  0.49744523  0.66639832  0.93962030 #>  [6823]  0.66148060  1.30204292  1.56240684  1.96641494  0.49347567  0.33181617 #>  [6829]  1.06717797  1.30235883  0.98827574  1.31308128  0.97718216  1.46877488 #>  [6835]  1.65789512  1.12085659  2.57069646  0.74841700  0.66204225  0.99913364 #>  [6841]  0.65403113  0.49970298  0.99735135  1.16894211  0.90530865  1.84065323 #>  [6847]  0.98459912  0.67370314  0.59858946  1.49631911  0.97824648  0.99357442 #>  [6853]  2.28257511  1.96534964  0.98511625  1.22147770  0.73688795  0.70848889 #>  [6859]  1.09359850  0.59730100  2.85367501  0.66057158  0.82697872  2.33134044 #>  [6865]  0.88407127  0.38694977  1.30431044  1.18026422  1.13941058  0.31588553 #>  [6871]  1.48508429  0.66389301  1.11798037  0.71327238  0.59233538  1.11862323 #>  [6877]  1.65815077  1.08487362  0.63425309  0.66215518  1.33182418  2.66435637 #>  [6883]  0.96648089  1.95342794  1.23042968  0.98187037  1.09058452  0.99165755 #>  [6889]  0.66582210  1.00576773  0.79566414  1.04698243  0.81915566  1.07382813 #>  [6895]  1.02202225  1.23463908  0.39817940  0.68518334  0.78483736  0.95174806 #>  [6901]  0.49009892  0.45479780  0.98363599  0.65146449  1.32431036  1.00222112 #>  [6907]  0.97662669  0.82685075  0.84262492  0.14478924  0.53366047  0.49699830 #>  [6913]  0.56362984  0.97911045  0.40957783  1.12037919  1.38700000  0.61408574 #>  [6919]  1.19854350  2.61036513  0.53044276  0.49128598  2.46277262  1.64036854 #>  [6925]  0.98018743  1.99578695  0.79485953  0.58422037  1.14692483  0.98060862 #>  [6931]  1.23757025  0.82420874  1.28276356  1.25181594  0.49009372  1.95913424 #>  [6937]  0.73688795  1.47430093  0.71854191  0.99943929  0.82268803  0.33313532 #>  [6943]  1.73549611  1.06178778  1.47112428  0.80714630  0.98925955  0.55508694 #>  [6949]  1.17523818  0.49361282  0.49259515  0.98446443  0.95944812  1.46660972 #>  [6955]  0.59533254  0.65193208  0.30742574  0.74505812  0.97755036  0.88868877 #>  [6961]  0.99836956  0.49179460  2.00444224  0.98770170  0.97650324  0.98307843 #>  [6967]  0.65099319  1.27700358  1.00061626  0.98103184  1.58672942  0.70053537 #>  [6973]  0.55508694  0.98200000  0.98435627  1.50837241  0.73706624  1.99943058 #>  [6979]  0.79898652  1.27424213  1.70399418  1.95383862  0.98695134  0.56412894 #>  [6985]  0.74935023  1.09357903  0.68096482  0.80540074  0.74964257  0.35789859 #>  [6991]  0.49997046  0.71253291  1.46473390  1.49809972  0.39345440  0.65274030 #>  [6997]  1.00386172  0.45505191  2.72046377  0.74194466  0.97676912  0.49195757 #>  [7003]  0.99940596  0.59977818  0.24162022  0.76169456  0.44300506  0.72824648 #>  [7009]  1.47587270  0.99908184  1.09841379  0.98546893  0.87866489  0.87222556 #>  [7015]  0.97648978  2.32952898  1.00057791  1.00323560  1.16057565  0.99976796 #>  [7021]  0.82591983  0.44471706  1.99470270  1.63539157  0.65658066  1.24841643 #>  [7027]  0.98722564  0.99323277  1.31151466  0.65898194  0.49255452  1.11567607 #>  [7033]  1.05000142  0.97773981  1.27236491  1.26354213  1.65408536  2.32429207 #>  [7039]  1.09580800  0.97823405  1.95682159  0.73672606  0.84726249  0.58214778 #>  [7045]  0.72635138  1.58198102  0.79977223  1.39519579  1.66367002  0.99085737 #>  [7051]  0.75523602  1.95646566  0.31484903  0.70293191  0.98103184  0.90415057 #>  [7057]  0.49309412  0.98435020  1.23027641  1.18686059  0.74021351  1.96534964 #>  [7063]  2.00060189  0.78971383  0.27192802  0.82420874  0.56042830  0.96303850 #>  [7069]  0.67074007  0.98905049  1.95472753  0.96966798  1.17687192  1.17389577 #>  [7075]  0.97695560  0.49255812  0.99608752  0.55263171  0.98622720  0.87342676 #>  [7081]  1.95436433  1.45193020  3.52236687  1.05708848  0.29991315  1.58825956 #>  [7087]  0.93452496  0.98827574  1.12484364  0.98459912  0.92858838  1.99781523 #>  [7093]  0.61589307  1.66225225  1.32816690  1.55239407  0.74254215  0.65296591 #>  [7099]  0.55862204  0.71545608  1.04901311  0.82103007  0.99085737  0.50219847 #>  [7105]  0.98227863  0.91858510  2.00165074  0.49203389  0.82103007  0.88862442 #>  [7111]  0.79519728  1.17293386  1.17245851  1.41548721  0.99952342  0.49535714 #>  [7117]  1.30015122  0.97744488  0.49390434  1.40107074  0.40428823  1.33258922 #>  [7123]  0.72290662  1.59481820  2.64442014  1.08737479  1.33217819  1.24479939 #>  [7129]  0.59852764  0.25610075  1.16357657  0.65899867  1.20259083  0.97977178 #>  [7135]  0.30760470  1.26668610  2.99619943  0.49985124  1.24293777  2.43427437 #>  [7141]  0.31150832  0.98074952  0.49093519  0.83747036  0.59873360  1.69723919 #>  [7147]  1.04845466  0.31724935  0.65846780  0.49779513  1.00359888  1.11621961 #>  [7153]  0.74492813  0.85836154  0.39129859  1.46904773  1.02793877  0.39065482 #>  [7159]  0.66000913  0.98375546  0.79705000  1.10871506  0.99796160  0.43801495 #>  [7165]  0.97532617  1.39219334  0.80113508  0.98378299  0.59614323  1.30247614 #>  [7171]  1.29520285  1.98459469  0.98482029  0.76760718  1.19931015  0.49972096 #>  [7177]  0.98187037  0.32774624  0.97758857  1.47059633  1.75732978  0.78457401 #>  [7183]  0.80488808  1.33293664  1.30467062  1.32980180  1.17687192  1.62897238 #>  [7189]  1.14209767  0.78482547  0.98294787  1.22301350  1.49755434  0.97798437 #>  [7195]  0.47170814  0.99245122  0.75000102  0.49245093  0.99608752  1.17389577 #>  [7201]  1.00448324  0.72534644  2.94246058  0.98200000  1.34322737  0.66003746 #>  [7207]  1.42176511  1.12971200  0.48859108  1.47394978  1.95755942  1.50986572 #>  [7213]  0.78533027  0.56574435  0.89474648  1.30235883  1.13482585  2.00267781 #>  [7219]  0.99820201  1.88481560  0.89398368  1.64184842  1.25646899  0.49030475 #>  [7225]  0.62060339  1.72764486  0.49981515  1.11070032  1.39958347  1.17572614 #>  [7231]  1.66939751  1.46775445  1.30260746  0.85120602  1.95300855  0.94765660 #>  [7237]  1.02154739  0.69607887  0.46494584  0.49133741  0.65157584  1.32980180 #>  [7243]  0.99698425  0.97691931  0.99820201  0.36222734  0.82420874  1.31364811 #>  [7249]  0.44989869  1.61611329  1.10175607  0.69073769  1.11875479  0.96966798 #>  [7255]  1.47714210  1.77712052  0.32551073  0.79803686  0.95760677  0.97744488 #>  [7261]  0.65198958  1.42777417  0.65511655  0.98869464  1.47563319  0.58569111 #>  [7267]  0.65198958  0.97850297  1.32726466  0.54519459  0.84016066  0.65120526 #>  [7273]  0.92989167  0.80537110  0.84861960  0.87670553  0.99788934  0.49582878 #>  [7279]  0.97823283  1.30766602  0.78156448  1.16360157  0.50721364  0.39199148 #>  [7285]  0.56316207  1.23001220  0.98104670  1.79060243  0.66642019  0.98435627 #>  [7291]  1.19090830  0.55813446  0.72570483  1.14147000  1.03358233  0.79396097 #>  [7297]  4.16218960  0.44894209  1.00448135  1.14965696  1.23278400  0.79976198 #>  [7303]  0.43358520  0.65182654  0.57543910  0.65346523  0.84262492  1.02945390 #>  [7309]  0.90591943  0.99399661  0.74847571  0.49212244  0.98523608  0.98251727 #>  [7315]  0.98490185  0.98082019  0.62405031  0.66003746  1.16181277  0.73368486 #>  [7321]  0.91653424  0.55831357  0.65608736  0.65458025  0.65936699  1.00464007 #>  [7327]  0.73530535  1.79804078  0.86873546  0.61355108  1.74487144  1.58032272 #>  [7333]  0.66057158  1.47157005  0.98124313  0.73514838  1.11487717  1.58830030 #>  [7339]  0.48831335  1.38523997  1.48388933  0.66642019  0.97916630  0.99323277 #>  [7345]  2.19604443  1.46604565  1.94541574  0.98303553  0.71211760  0.88624045 #>  [7351]  0.42523753  0.83096435  0.72564305  0.65680636  0.59975849  0.66148060 #>  [7357]  0.83923752  0.96698530  0.74865151  1.03602224  1.02055326  1.26255590 #>  [7363]  0.63712107  1.49514206  1.75732978  1.41248305  0.97648978  0.53495428 #>  [7369]  1.65142894  0.49179460  0.78776792  0.83790031  0.74605281  1.96826208 #>  [7375]  0.99676137  0.99583951  0.49128598  1.45450196  1.30641486  1.19705529 #>  [7381]  0.78381743  1.47459652  0.97730925  1.10359197  0.83112612  1.47767437 #>  [7387]  1.22628980  0.98521586  0.49128994  0.49276682  0.87866489  1.40599678 #>  [7393]  0.98476140  0.59114165  0.49889629  1.47386641  1.63585001  0.50231908 #>  [7399]  1.13816115  1.98490243  1.11970360  1.26020090  1.63507783  0.56905115 #>  [7405]  1.12354492  0.92514489  0.73772700  1.05549901  0.78483736  0.97471772 #>  [7411]  1.99881192  2.00896648  1.96534964  0.59295607  0.73227586  0.35537122 #>  [7417]  1.32326829  0.59018160  0.98060950  0.34928867  1.01704981  1.62925061 #>  [7423]  0.98207579  0.41557199  1.74929558  0.97806301  0.98054843  0.45841512 #>  [7429]  0.83726390  1.33415117  0.66163414  1.24031715  0.73556214  0.73298194 #>  [7435]  0.30704287  0.65623751  2.94743536  0.48835698  0.49434732  1.08278935 #>  [7441]  1.97043171  0.39698049  0.99873314  0.18878495  0.63127795  0.69874748 #>  [7447]  0.98622720  1.58596267  0.97662669  0.98470990  1.00077983  1.37301724 #>  [7453]  0.97706411  0.62894419  2.00909448  1.13997866  1.47678725  1.38173188 #>  [7459]  1.61429260  0.69683336  1.47430093  0.78739092  0.68788464  0.83928540 #>  [7465]  1.30890897  1.64079846  1.46455173  1.22884803  1.23352652  0.65583697 #>  [7471]  0.99801931  2.95076759  0.98257760  1.00400591  0.99676137  0.48886991 #>  [7477]  1.06416965  0.98200000  0.39977677  1.08143371  0.65501151  0.93903610 #>  [7483]  1.59268167  0.98251727  2.17957143  2.65205213  0.31724935  0.97662669 #>  [7489]  1.35000183  0.94341628  0.65647327  1.07000322  0.80714630  1.11585332 #>  [7495]  1.08786380  1.33621204  0.44431791  0.78317681  0.65477386  2.00879390 #>  [7501]  0.83241937  1.57135883  1.30747933  1.92765232  0.39164418  1.06134332 #>  [7507]  0.80172722  0.93735345  0.98207579  0.79740818  1.00132523  0.65216432 #>  [7513]  1.13189569  1.96415157  0.98151001  1.06151907  0.98251727  0.65670090 #>  [7519]  0.98263279  0.91480365  0.57022248  1.03450395  1.18225145  0.98124313 #>  [7525]  0.73817899  0.61055789  1.22066532  0.85263178  0.78898176  0.99071429 #>  [7531]  1.88231609  0.61140405  1.30367608  0.88853109  1.06186844  1.30693045 #>  [7537]  1.23857171  0.98505134  0.99848283  1.06802853  0.98166283  0.65654064 #>  [7543]  0.95732328  1.17283652  0.85605698  1.47061071  0.94175376  0.98082019 #>  [7549]  1.96209340  0.59975849  0.89474648  0.90793922  1.02144722  5.91969547 #>  [7555]  0.65304475  1.33536084  0.66047619  1.31390521  1.06717797  0.73160631 #>  [7561]  2.00554973  0.47494335  0.49904570  1.95300855  1.14965696  0.98279489 #>  [7567]  1.97851910  0.74801351  0.95599354  0.99788934  0.43832320  1.14339910 #>  [7573]  0.88646674  0.57483353  0.67635581  1.77562001  1.15027010  0.66503071 #>  [7579]  1.62463416  1.00400591  1.55511267  0.47375736  1.72982759  0.61485147 #>  [7585]  2.47646774  1.93289063  0.91699854  1.96756597  0.96553702  1.97810098 #>  [7591]  0.63425309  0.79952477  1.50770419  0.99245122  0.65702242  0.65658066 #>  [7597]  0.74077628  0.98518815  0.61190782  0.62581482  0.24426219  1.46495558 #>  [7603]  1.49236020  1.19896037  1.45768586  0.99994091  1.30292898  1.52106901 #>  [7609]  1.70223877  1.12945799  0.49361282  0.78097325  1.38771734  0.97650428 #>  [7615]  0.68839630  0.56698337  1.42683750  1.09220754  0.99676022  0.82546157 #>  [7621]  0.99836980  1.95510073  1.15564620  2.97737453  0.98306240  1.23352652 #>  [7627]  1.90349612  1.30200432  1.28109818  1.31630085  0.98657205  1.06073675 #>  [7633]  0.90519096  1.47458310  0.51817212  1.68026786  1.51962292  0.97648978 #>  [7639]  1.08468507  1.34322737  1.14253176  1.62893961  0.99913774  0.97663705 #>  [7645]  2.72385926  0.97648927  0.48852438  0.48775659  1.62681178  1.78843395 #>  [7651]  3.97429750  1.09582687  1.23002131  0.48868188  1.26899741  1.95297853 #>  [7657]  2.44143307  2.63599467  0.65846780  1.82061619  1.95436433  1.76303268 #>  [7663]  1.24891705  1.33279663  1.33293664  0.25412403  0.84701172  0.40135400 #>  [7669]  0.75981146  1.00295125  1.27414534  1.24428256  1.00788565  1.13718792 #>  [7675]  0.74757103  0.53900746  0.61767234  1.30210217  1.24949685  0.76280518 #>  [7681]  0.81613010  1.59182474  1.01372474  1.18982077  0.68788464  0.58118229 #>  [7687]  1.49870046  1.33860823  0.98456854  1.08397180  1.05637286  0.98484854 #>  [7693]  1.98646554  1.47061071  1.15573674  1.84057758  1.12172572  0.58862802 #>  [7699]  1.30044014  1.37421502  0.56529117  1.20366917  0.45000061  0.80714630 #>  [7705]  1.00476091  0.74549745  1.11799597  1.05465401  1.04160202  1.73960827 #>  [7711]  0.89432009  0.68762597  0.33292875  0.98018743  0.98678086  0.73409650 #>  [7717]  0.91579196  1.48017128  0.73073521  0.89682922  1.71357070  0.67048776 #>  [7723]  0.66315805  0.96966798  1.16894071  0.74448107  1.48917466  0.99222090 #>  [7729]  1.98947415  0.59852764  1.44983305  1.33006143  1.24595172  1.96871254 #>  [7735]  0.59805682  1.32532881  1.49373031  1.51437364  0.61100650  0.58900903 #>  [7741]  0.64656497  1.59952396  1.19096762  3.16396203  2.42416994  1.57053145 #>  [7747]  1.06578756  0.99836980  1.17927035  1.32007493  1.24603328  2.44942945 #>  [7753]  0.94765660  0.91914786  0.46730965  0.64342649  0.97657323  0.64138178 #>  [7759]  0.48286016  1.30506044  1.16278012  0.69884109  1.26132018  2.94059351 #>  [7765]  2.22025693  1.14209767  0.98166283  1.05730845  0.87846733  1.49631911 #>  [7771]  0.65145478  0.97997870  1.16429555  0.39988612  1.96645835  0.74904986 #>  [7777]  1.98142857  0.76278736  1.02668087  1.25859914  0.88492120  1.06990857 #>  [7783]  2.20158730  1.13793541  1.31770099  0.32607761  1.46816956  1.85735888 #>  [7789]  0.90519096  1.39100087  0.94341628  0.85198776  1.35449512  0.82769398 #>  [7795]  1.46422778  0.58677746  1.83445575  0.41453769  2.88911550  1.31593512 #>  [7801]  0.97657663  2.47068935  1.95794202  0.59750371  1.19897361  0.99981031 #>  [7807]  0.96613491  0.84845948  0.65444189  0.64039256  1.45202009  1.30210217 #>  [7813]  0.48847780  0.87866489  0.67500092  0.77315625  1.49755434  0.91858510 #>  [7819]  1.65763363  1.49944544  0.99735135  3.93697948  1.02668087  1.79741308 #>  [7825]  0.59042961  3.16319667  1.55051590  1.15133774  1.96515974  1.14140931 #>  [7831]  0.97823405  0.30004783  0.85815583  0.83096435  0.68630260  1.59910707 #>  [7837]  1.46684718  2.95454561  0.86087073  1.77620554  0.99245122  0.97997870 #>  [7843]  0.97718216  0.65615910  0.65537493  1.66314889  1.14355814  1.98412459 #>  [7849]  0.99357442  0.97897101  1.99787307  1.31074987  1.95913424  1.35778644 #>  [7855]  1.43156713  1.07588911  0.84558184  0.49133849  1.47830045  1.22170470 #>  [7861]  0.90519096  0.79075189  0.55254454  0.65018141  1.30315169  0.57849870 #>  [7867]  0.73623453  0.97879533  0.48948551  1.34687899  1.17453565  1.27162463 #>  [7873]  1.00240614  0.99820201  0.71055652  0.53736718  1.46528565  3.94020538 #>  [7879]  1.22710216  0.98200000  1.75732978  0.58577659  1.95273563  0.85111939 #>  [7885]  0.79902900  0.97883334  1.07407068  1.22549694  0.53303569  1.05176361 #>  [7891]  1.21841563  0.09476566  0.49052335  0.98294787  0.97956712  0.66708823 #>  [7897]  1.10246766  5.90397803  1.47610168  0.93461930  0.96966798  1.33293664 #>  [7903]  0.57483353  0.82152985  1.58079220  1.50770419  0.99754607  1.56289261 #>  [7909]  1.30225621  1.96727199  0.33012297  2.00212011  1.22710216  1.96121723 #>  [7915]  1.96503454  1.13396674  0.85382158  0.59902174  0.79334431  0.65650760 #>  [7921]  0.62894419  0.49385085  0.78153545  0.82548925  0.98074952  0.99085737 #>  [7927]  1.56351477  1.06088553  0.49889633  0.69350000  0.83374960  1.99926058 #>  [7933]  1.45411649  0.55568651  1.32078279  0.88407127  1.32431036  2.32095061 #>  [7939]  0.98333357  0.97823405  0.74899715  1.58891790  1.39656450  0.71407320 #>  [7945]  1.64841748  1.09140069  4.00888448  0.82548925  1.22688751  1.59268167 #>  [7951]  1.95306438  0.74908969  0.78120259  1.00774277  1.81038192  1.47744457 #>  [7957]  1.00374312  0.47587403  1.22216798  0.92616990  0.39729311  4.92567653 #>  [7963]  0.08410408  1.63752879  0.71338082  0.99245122  0.98200000  1.67019343 #>  [7969]  1.17840000  0.59964358  0.87866489  1.95472753  0.49123923  0.96444139 #>  [7975]  0.49385085  0.39742977  0.25862599  0.65491625  1.99826728  1.99881192 #>  [7981]  1.15622505  4.00522872  0.98435020  1.22971652  0.98770170  1.05016741 #>  [7987]  0.85382158  0.91955368  0.98770170  1.00091068  1.14944210  1.56438370 #>  [7993]  2.33530531  0.98484854  1.62794854  0.89883593  1.62801314  2.62808968 #>  [7999]  1.74271915  3.92991381  0.71218791  1.66225225  1.16805529  1.16631956 #>  [8005]  0.65403113  0.76099359  0.94765660  1.40855415  2.22125768  1.64491890 #>  [8011]  1.57764541  1.39880254  0.98082019  0.65198958  1.41032234  0.61100650 #>  [8017]  0.33304822  1.77886822  0.58679062  0.99612517  1.96647744  2.19918664 #>  [8023]  1.78035954  1.27443133  1.54297421  0.92270536  1.07118736  1.14529535 #>  [8029]  1.46055092  0.82638130  0.55491308  0.97997870  0.09753828  0.91072238 #>  [8035]  1.47689869  0.76673863  1.63585001  0.72308748  1.11679627  1.74521195 #>  [8041]  0.49217813  1.73400039  0.98542891  2.95556444  1.09075747  0.78258724 #>  [8047]  1.16381695  1.41844047  0.69031808  1.81587844  1.47678725  1.97030960 #>  [8053]  0.88434708  1.16429555  1.95409751  0.66266440  0.97911045  1.00374312 #>  [8059]  1.65973252  0.54479250  0.99970248  2.31785963  0.73992833  0.99245122 #>  [8065]  0.52918448  1.58767575  1.63761993  1.47300000  0.66108238  0.50164396 #>  [8071]  0.65291010  1.64712624  1.58891790  1.66126896  1.48042701  1.46775445 #>  [8077]  0.65658066  1.98490243  1.07819004  1.56090672  1.74354688  0.99201353 #>  [8083]  0.99323277  1.11731745  0.69504116  0.98722564  0.68738231  1.18036319 #>  [8089]  1.22593690  1.37933860  1.01145344  1.95338431  1.69073610  1.46528565 #>  [8095]  1.03136996  0.78434583  0.80751047  1.99971325  0.96644532  0.77081670 #>  [8101]  1.28859375  0.78021769  0.97650324  0.98151001  2.31200052  0.49082302 #>  [8107]  1.65666101  1.74536486  0.58180079  0.58983744  1.46495558  1.98490243 #>  [8113]  1.63227525  0.65594342  0.98456854  0.84016958  0.99544850  1.00048678 #>  [8119]  0.39129313  1.02008224  0.98257987  0.98227863  0.79690014  1.31074053 #>  [8125]  0.73239914  0.78119182  0.66326946  1.57055159  1.99558515  0.65403113 #>  [8131]  1.48650290  0.65402123  1.81907165  1.49702896  1.14732717  0.98207579 #>  [8137]  0.71386140  0.74877717  0.65665475  1.05016741  0.79016136  0.50297934 #>  [8143]  0.96966798  0.77081670  0.66503071  0.49211933  0.84363313  0.99085737 #>  [8149]  1.01875861  1.03168251  0.35230659  1.40855415  0.94765660  0.71277810 #>  [8155]  0.32673261  0.80805665  1.46604565  1.09236971  0.98695134  0.76784770 #>  [8161]  0.48828661  0.49462978  0.90793922  1.34097552  0.39508068  0.67114346 #>  [8167]  0.55455667  0.71578357  0.98423865  1.14799707  1.29361790  1.25788837 #>  [8173]  1.32554201  1.00152063  2.38902251  0.97690045  0.03563848  1.23031421 #>  [8179]  0.32833339  0.87866489  1.22066532  1.00462597  0.80009259  0.67210714 #>  [8185]  0.72664265  1.71009428  0.98263279  1.17975547  1.32889156  1.47458310 #>  [8191]  0.24438759  0.74969811  2.40799133  0.49223954  0.66215518  1.48661582 #>  [8197]  1.22114914  1.04481150  1.99673912  0.65936699  0.99676137  1.66225225 #>  [8203]  0.73058882  1.50551314  0.90495318  1.55071080  1.50405644  1.12085659 #>  [8209]  0.98847291  1.07480300  2.95126637  1.18317977  0.78842690  1.37840960 #>  [8215]  0.74841700  0.69857733  0.98770170  0.93178812  0.98481096  1.19589381 #>  [8221]  0.69419845  0.87852687  0.99970926  1.28500643  0.85640026  0.98459912 #>  [8227]  1.57738935  0.74969811  0.69827328  1.00323560  0.80749291  0.71341875 #>  [8233]  0.75000102  1.03325182  1.56657671  9.74118427  0.95785212  0.78126130 #>  [8239]  0.65682406  1.39546592  0.61992778  0.80714630  1.23108874  0.99658007 #>  [8245]  1.38367937  0.64277634  1.78864019  0.73058882  1.17138223  0.98082019 #>  [8251]  0.72051948  0.41178156  0.96644532  0.77755634  0.68289669  0.79740910 #>  [8257]  1.22061222  0.77490973  1.47619656  1.13594913  1.22397907  1.37806806 #>  [8263]  0.73886610  0.88317726  0.99245122  0.45742090  0.98925955  0.98520865 #>  [8269]  0.77780961  0.84354089  1.32163556  0.73367462  1.19550898  0.85047506 #>  [8275]  1.47584894  1.62884875  1.55463149  0.73354726  1.33256863  1.63713105 #>  [8281]  4.39731973  0.32827032  1.19965258  1.38343109  0.74119509  1.08017220 #>  [8287]  1.08000147  1.17005309  0.46453216  0.73793635  1.18416610  1.30225621 #>  [8293]  0.88407127  0.83804658  1.44830553  1.47739259  0.45398584  1.30365308 #>  [8299]  2.16392181  0.99612517  0.73889111  2.88911550  1.47226501  0.73850085 #>  [8305]  1.76679417  0.65796756  1.58792194  0.66582210  0.83430271  1.30198569 #>  [8311]  0.49009892  0.65100285  1.47112428  0.43075051  0.88943411  0.99947223 #>  [8317]  1.76013805  0.99913364  1.01442728  1.96727199  0.42032122  1.33191538 #>  [8323]  0.65318119  1.33536084  0.98391514  0.86294693  1.04481150  0.74325145 #>  [8329]  0.96251332  0.73271670  2.46250043  0.66756680  0.66757436  0.99508931 #>  [8335]  0.48635393  1.18228330  1.47226501  0.84089717  1.29838880  0.99583951 #>  [8341]  0.94285842  0.84013393  1.35450986  1.62809517  1.34396903  1.24775252 #>  [8347]  0.31034525  1.93933595  1.62116883  0.73302282  0.71798228  0.74008564 #>  [8353]  1.22280809  1.10120414  0.98487099  0.66003746  0.99323277  0.39143393 #>  [8359]  0.65561120  2.92959657  1.28523895  1.15106492  1.19951697  0.97648978 #>  [8365]  1.49386349  0.52583162  0.74416567  1.99705307  0.78567941  1.18615086 #>  [8371]  1.28155034  1.18968507  1.06090357  0.57126588  1.21953781  0.98824615 #>  [8377]  0.98060950  1.13941058  0.73139095  0.75932319  0.78750107  0.97706411 #>  [8383]  1.23070857  1.66946329  1.70794873  0.50007259  1.31023309  0.49134197 #>  [8389]  1.42386973  0.87996094  1.16597362  1.16288827  1.78919389  0.89545124 #>  [8395]  1.25766424  0.65614197  0.70765306  2.29457042  1.01939371  0.99735135 #>  [8401]  1.27900174  0.65318119  1.59954446  0.97956712  0.97648978  0.61485147 #>  [8407]  0.32828285  1.33295372  1.78210115  1.11799597  0.86928715  0.43897853 #>  [8413]  0.71989156  0.61506542  0.57040115  1.50245776  0.99289428  1.38235785 #>  [8419]  4.32185584  0.98251727  0.85478789  0.99473707  0.49143364  0.63963208 #>  [8425]  1.12518162  0.48868188  0.85120602  0.73655684  0.49188259  0.81058989 #>  [8431]  0.31573974  2.14237471  0.99913364  0.95568160  0.61878512  0.65639942 #>  [8437]  0.68532008  1.22010883  0.65388013  0.72000098  0.97775706  0.56965092 #>  [8443]  0.53756380  1.31488947  1.46935068  0.85357673  1.12261744  0.94723675 #>  [8449]  0.99970248  1.40589108  1.18524204  0.98145360  0.75122888  0.65898194 #>  [8455]  0.98520954  1.12874593  0.33152673  1.57571046  0.61375468  1.03358233 #>  [8461]  1.36681205  0.46004371  1.15298837  0.99779760  2.71861807  0.87629806 #>  [8467]  0.98616710  0.68738231  1.38405804  0.57121731  0.74492813  0.99458567 #>  [8473]  0.67051182  0.65104882  1.25985706  1.33258922  0.73251912  1.01308195 #>  [8479]  1.27234861  1.19460200  0.46145360  1.27162463  0.66639832  1.39704507 #>  [8485]  0.82907539  1.31799734  1.20883949  2.02668100  0.86774806  0.98363599 #>  [8491]  1.65552244  0.74492813  1.37881939  1.28268731  0.72415277  0.54311457 #>  [8497]  0.40835203  0.98103184  0.72155450  0.88147338  0.65798046  0.86972171 #>  [8503]  1.35419139  1.96164039  1.33279663  0.73771188  1.61611329  0.99809139 #>  [8509]  0.65702242  1.30325984  1.24154096  1.18616749  0.99788934  1.46528565 #>  [8515]  0.89474648  1.34140882  0.32762243  1.00139465  0.93687157  0.65022007 #>  [8521]  0.99735135  0.47182907  1.04581597  0.65373967  6.86138486  0.70740637 #>  [8527]  0.24456162  0.92650851  1.49375927  0.90000122  0.82907539  1.19228930 #>  [8533]  1.02668087  0.37266532  0.58594394  1.16671442  1.22930975  0.54529226 #>  [8539]  0.78119182  0.98520954  0.98553363  2.02885455  1.12944189  1.40719091 #>  [8545]  1.19779435  1.02727711  0.58836570  0.62356863  1.42191200  1.37522198 #>  [8551]  1.12480275  1.75732978  2.23249702  0.69105795  2.31013112  2.10094728 #>  [8557]  0.05420219  1.88762273  1.47685281  1.00082537  1.30506044  1.06088553 #>  [8563]  1.38043974  1.34129433  0.65593286  0.98657205  0.89210337  0.83849698 #>  [8569]  1.39771739  1.30860480  1.74787594  0.50069713  1.49418776  1.12031945 #>  [8575]  0.35572103  0.43399523  1.45906180  0.93452496  0.85490257  0.81915566 #>  [8581]  0.50055710  1.03836107  0.85487122  0.79327816  0.99666867  0.73967040 #>  [8587]  0.49243550  0.49125864  1.16519436  0.73715046  0.58582069  1.22688751 #>  [8593]  2.23483385  0.61577255  1.24925745  1.02144722  0.84052243  0.56008929 #>  [8599]  1.38211589  0.63963208  1.34097552  0.76208791  1.15759105  1.95314646 #>  [8605]  0.65680576  0.39051773  1.07819429  0.99943929  0.65136584  0.78893368 #>  [8611]  2.25511615  0.97088300  1.97010269  1.76294676  1.72579747  0.67386877 #>  [8617]  2.99510869  0.97956712  0.74178787  0.49123923  0.47784080  1.06387311 #>  [8623]  0.58749978  0.94847532  2.94755181  1.21764803  0.98251727  1.62093112 #>  [8629]  0.84567078  0.93358080  0.27852029  1.67436680  1.24693259  1.15784335 #>  [8635]  0.88961315  1.22248046  0.39061290  0.83262056  0.98456854  1.64238151 #>  [8641]  0.65537027  1.22733797  0.98523608  1.08664930  1.09651213  1.32417794 #>  [8647]  1.19928715  2.36064198  0.73650000  0.99843325  0.66525956  0.65215522 #>  [8653]  0.59473600  3.09318119  0.24992882  0.24438759  0.92675982  1.57617448 #>  [8659]  0.57932221  0.94346146  1.09152708  0.77486045  0.78818887  0.98470990 #>  [8665]  1.34106518  1.49957294  1.20379812  0.61815656  1.14231248  0.97775706 #>  [8671]  1.37738649  0.68260882  0.65153950  0.32787866  0.65430240  0.49009892 #>  [8677]  0.65215603  1.21131571  0.84539897  0.65318119  0.78328836  1.39372220 #>  [8683]  1.71161027  0.70134665  0.72227887  1.97027061  1.00086696  1.95596874 #>  [8689]  0.99735135  0.72491736  0.66057158  0.78837515  1.22173025  0.65815042 #>  [8695]  1.27123015  2.65452933  0.97944887  1.32714409  1.95361577  0.38908315 #>  [8701]  0.69837012  0.99878625  0.93903610  1.66225225  0.65458025  2.00680221 #>  [8707]  0.73685884  0.32833339  0.62139580  1.67823602  1.31496960  1.79263314 #>  [8713]  0.84446455  1.35930904  1.47461764  0.99814132  0.74061078  0.83374960 #>  [8719]  0.97671397  2.99342667  0.83261137  0.98260055  0.66215518  0.73865324 #>  [8725]  1.27926416  1.93289063  0.97736376  1.09944113  0.81770934  1.33327415 #>  [8731]  0.98618825  0.59873360  0.59495862  1.35302344  1.01163831  0.72486067 #>  [8737]  1.64192466  0.74079885  1.16091865  1.40439775  0.97653226  0.59473600 #>  [8743]  0.88269601  0.74119509  0.97671397  1.16623534  1.24361308  0.38745486 #>  [8749]  1.80626615  1.17825956  0.42036613  0.57928697  1.21071945  1.65595736 #>  [8755]  0.74011591  2.79920281  0.74155360  2.18679253  0.97897101  1.05061029 #>  [8761]  1.24595172  0.97653219  1.30832417  0.76361829  1.19362598  2.44004937 #>  [8767]  1.32296120  1.45313059  1.22312871  1.12296807  0.78333304  1.35753517 #>  [8773]  1.25086871  1.68682500  0.75087244  2.94968753  2.33449889  0.65537250 #>  [8779]  1.47345212  1.07421276  0.81170683  0.56711498  1.85978334  0.66608909 #>  [8785]  0.89566917  0.85765116  1.07305782  0.88943411  1.97851910  0.39959624 #>  [8791]  0.68005482  0.93333460  0.65538562  1.24930240  2.63387121  1.47028115 #>  [8797]  0.86225029  1.75266110  0.98060862  1.30397916  0.96653138  0.97718216 #>  [8803]  0.95519155  1.93289063  1.01308195  1.11585332  1.73540072  1.07122040 #>  [8809]  0.98827574  2.93993609  0.74314302  0.83460052  0.65296591  0.48483399 #>  [8815]  3.42688656  0.99970248  2.24271051  0.98695134  0.96930869  0.65471719 #>  [8821]  0.73613251  0.94341628  1.72301200  0.65403113  1.76849623  1.40749217 #>  [8827]  0.83277955  0.97706411  0.65936699  0.66470872  0.59214332  1.73259834 #>  [8833]  1.46577324  0.79898652  1.60345445  0.98827574  1.95327410  0.83460052 #>  [8839]  1.95889774  1.41536345  0.49052335  1.99828935  2.03336392  0.70742390 #>  [8845]  1.97027061  1.47727280  1.47485808  1.47602337  0.40576484  0.99165755 #>  [8851]  0.98323872  1.56133122  0.48635393  0.87866489  1.15389224  1.23154510 #>  [8857]  0.29603426  1.46735107  0.71201902  0.84950138  1.32858389  1.32325145 #>  [8863]  1.63651700  1.48748633  0.58694789  0.84845948  0.99071429  0.69607887 #>  [8869]  1.05091849  0.98151001  0.85324157  1.30890897  0.39949326  0.37380999 #>  [8875]  4.89116414  2.92959657  3.58046065  1.16429555  1.67633874  0.79690014 #>  [8881]  0.61022989  1.56123836  0.98207579  0.91177375  0.89566917  0.85666450 #>  [8887]  1.09771897  0.97653226  0.99913364  1.60345445  1.22513975  1.21397197 #>  [8893]  0.86955242  1.29679324  0.55804185  2.64228631  0.84236142  1.03484411 #>  [8899]  1.09357903  1.57579359  0.65022007  1.11017387  1.40022322  1.69777530 #>  [8905]  0.98040189  1.40359610  0.59022629  1.31831751  3.43528502  0.65445448 #>  [8911]  0.54972057  0.54748433  0.43933245  1.07369577  0.96382616  0.76608542 #>  [8917]  1.47500036  0.61296845  0.79803686  0.99399661  0.67653662  1.65097849 #>  [8923]  0.64668772  0.97442805  1.74433039  0.65109137  0.97719673  2.32429207 #>  [8929]  0.79485764  0.97552692  0.50977253  1.02040047  0.98355351  0.91879206 #>  [8935]  1.47484376  1.31404484  1.65097849  0.99477913  3.59027645  0.87544088 #>  [8941]  0.42159221  1.24154096  0.84726249  1.25790748  1.46788924  1.96589574 #>  [8947]  0.52073934  2.99028412  0.57483353  2.39568484  0.83206708  0.69650958 #>  [8953]  0.97685710  0.97247840  0.97650428  0.72686685  0.49143370  1.24603328 #>  [8959]  0.60475367  0.74709388  0.68788464  0.74865151  1.49631911  1.69861263 #>  [8965]  1.59904954  1.18209466  1.32569802  0.88421073  0.90395446  0.64644532 #>  [8971]  1.09691737  1.71986282  4.44069549  0.89614286  1.19705529  0.72415277 #>  [8977]  1.18381457  1.37630980  0.98230141  0.83622140  0.71145198  1.24893084 #>  [8983]  0.98323872  0.72725098  1.08269783  0.79976198  0.77896049  1.96612870 #>  [8989]  1.16455887  0.97911045  1.03827061  0.74194466  1.13718792  0.48436482 #>  [8995]  0.97736376  1.26354213  1.95718565  1.14380833  1.24615907  2.66949348 #>  [9001]  0.82080598  1.12684332  0.79079840  1.31151466  1.30103197  0.75122888 #>  [9007]  1.46479839  0.98905049  1.49916288  0.49181800  0.87334869  0.89243793 #>  [9013]  0.84914201  0.85134644  0.47331712  0.98283735  0.97977178  0.98166283 #>  [9019]  1.36522963  1.97106726  0.52722115  1.69992611  0.81770934  0.97773981 #>  [9025]  0.54121140  1.02808124  0.41603354  0.84088012  1.18228330  0.37224054 #>  [9031]  0.99245122  0.81806810  0.77356236  1.01370574  1.99167903  1.50661629 #>  [9037]  0.75662757  0.63963208  0.96243306  1.34658519  1.13034342  2.49851490 #>  [9043]  0.98251727  0.91683462  1.77972864  0.72960516  0.65748480  1.96455726 #>  [9049]  0.38657813  0.49051592  0.97671397  1.32459280  1.15133774  1.46616732 #>  [9055]  1.44705023  2.44648207  0.79582330  1.92848583  1.96573457  1.48748633 #>  [9061]  0.45149837  0.71676120  1.12092538  0.71496613  1.00873801  1.47685281 #>  [9067]  2.10980848  0.49128994  2.44694927  1.07648821  0.81578405  0.39649067 #>  [9073]  0.97691931  0.57119856  0.49104963  1.49683400  1.47689869  0.64656497 #>  [9079]  0.99399661  0.97771817  0.37450607  0.58180079  1.26608253  0.99245122 #>  [9085]  1.06321091  0.64847191  1.02688595  0.74448107  0.53909502  1.55792098 #>  [9091]  1.39269078  0.65296591  0.53044276  0.41730026  1.27201699  2.28712829 #>  [9097]  1.12017857  0.74977686  0.49195757  1.97010269  1.63613621  2.24805069 #>  [9103]  0.59948680  1.14520302  0.49936657  0.80576605  0.65130373  0.92320104 #>  [9109]  0.67343950  0.67500092  1.17876169  0.73688795  0.98363599  1.64876592 #>  [9115]  0.99399661  1.40272885  1.45355236  1.01962713  0.97685710  0.48939766 #>  [9121]  0.68612093  1.17876169  1.21559800  0.66408345  0.77356463  1.75007163 #>  [9127]  1.28040787  1.14420777  0.64432059  2.26974053  1.03437220  0.95188696 #>  [9133]  1.14209767  0.91384999  1.19717892  1.96612480  0.86339855  1.26116609 #>  [9139]  1.17188787  1.08143371  1.30593183  1.47470525  0.48286016  1.27014060 #>  [9145]  1.19373495  1.63538462  2.14624673  0.87519216  1.02288084  0.62243233 #>  [9151]  0.83865878  0.75314133  1.94541574  0.44143679  1.23657444  1.66367002 #>  [9157]  0.99676137  1.49695142  0.63840451  1.59737814  0.27090197  0.86150600 #>  [9163] 10.59342349  1.13863987  0.55963723  0.58938085  0.50197809  0.92858838 #>  [9169]  1.77562001  0.47150468  0.86716878  1.81061449  0.74314302  0.49791976 #>  [9175]  2.20901786  0.73302282  1.21504694  0.97179057  0.67689757  0.98237437 #>  [9181]  1.76193444  1.24056402  0.65170024  1.09808416  1.81462528  1.64491890 #>  [9187]  0.95174806  1.13224490  1.49979152  1.95436433  0.66047619  0.97919079 #>  [9193]  1.25879842  0.83283830  0.84042741  1.07619507  0.56528314  0.99735135 #>  [9199]  2.24483622  1.48017128  1.78853895  0.96207267  0.61767234  1.96717839 #>  [9205]  1.39269078  0.85605698  1.01145254  0.65656569  0.89243793  0.76253888 #>  [9211]  1.48042701  1.57069076  2.46556800  1.24949685  1.22568536  1.18323406 #>  [9217]  0.96644532  1.39633749  2.23649236  0.24969656  1.06305246  1.18744471 #>  [9223]  1.92710724  1.32726466  2.62196992  1.07392375  0.97877971  1.74929558 #>  [9229]  1.58596267  0.95439624  1.30209764  1.45317827  1.11799597  1.47976822 #>  [9235]  3.01319084  1.08874112  0.38657813  1.96534964  1.47112428  0.64429688 #>  [9241]  4.93475671  1.09554212  0.82103007  1.14592823  0.65227386  1.32095238 #>  [9247]  1.00011632  0.79856161  1.48296595  0.71653533  1.00641150  0.99836956 #>  [9253]  1.48045603  0.92081176  2.45938864  1.47706485  1.22045977  1.39880254 #>  [9259]  0.59442857  1.30608950  0.91413023  0.89159047  0.74908969  0.66627064 #>  [9265]  2.44201971  0.65010432  0.59805682  1.75027026  0.99888913  1.58755344 #>  [9271]  0.81227709  1.36546214  1.47773220  0.94183840  0.60402832  1.24520775 #>  [9277]  0.83622140  1.32610691  0.74518081  1.06273334  1.01948178  0.83978564 #>  [9283]  0.99477913  0.46174666  0.49535714  1.24346352  1.39878710  0.42743629 #>  [9289]  0.89791933  1.17876169  1.97694582  0.65146449  0.67182216  1.47706485 #>  [9295]  1.09651213  0.50031617  0.74908969  1.09102139  0.65402123  0.97676912 #>  [9301]  1.20733213  0.33826831  0.49037476  0.82235102  0.74416567  1.00462090 #>  [9307]  1.97830643  0.79981989  0.79740818  2.24457144  0.68172342  0.99944192 #>  [9313]  0.98267482  0.98476140  1.11862323  1.00429340  0.89081344  0.98421296 #>  [9319]  1.19804347  0.83663014  0.78041055  0.53495428  0.69031808  0.65137608 #>  [9325]  0.73055124  0.98263318  1.13699557  2.24128164  1.33621204  1.47669664 #>  [9331]  0.60535972  0.88109037  0.74801351  0.74761997  0.60800430  0.49390434 #>  [9337]  0.66110504  1.96666714  0.98435627  0.91534483  0.53136667  0.53547535 #>  [9343]  0.39386712  0.97850297  1.28129832  0.84236142  1.43732857  0.85382158 #>  [9349]  2.55345809  0.90745701  2.65803033  0.65157584  0.98780869  0.56592510 #>  [9355]  0.98323872  0.82932827  0.88379868  0.57973355  0.65182654  1.08335312 #>  [9361]  0.48831853  1.49939621  1.66167203  1.30200432  1.02798021  0.58837291 #>  [9367]  0.92151272  0.98511625  0.68650862  0.65434000  1.32078279  1.11496187 #>  [9373]  1.56919923  0.65172571  1.00222112  0.65575733  0.62082021  0.65117942 #>  [9379]  1.61502094  0.74549745  0.28310210  0.39061290  0.98268393  0.74687964 #>  [9385]  0.41379470  1.19965835  0.74164430  0.76692555  0.90277111  0.97744488 #>  [9391]  0.49195757  1.23108874  0.96000130  0.99937937  0.97650324  0.68719476 #>  [9397]  1.14673081  0.55337518  0.90398915  0.74955447  0.89219338  1.10587717 #>  [9403]  0.98209927  0.97775706  0.48322266  0.78253008  0.71407320  1.10929951 #>  [9409]  1.11179264  1.71771608  0.78130964  0.32767851  1.96919825  0.59092260 #>  [9415]  0.84197264  0.68296995  0.98470990  0.98104670  1.03579039  1.20238353 #>  [9421]  0.97706411  0.74374317  1.26020090  0.90127696  0.48899218  0.96000130 #>  [9427]  0.98466780  1.42555619  1.49809972  0.36755859  0.74801351  0.48151925 #>  [9433]  1.00268912  0.90519096  1.04612813  0.73817899  6.33176978  0.33304455 #>  [9439]  0.85163521  0.96857556  0.96251332  0.90519096  1.35966262  1.36570158 #>  [9445]  0.73206530  0.49916935  0.99820201  1.01734268  0.91052892  0.93333460 #>  [9451]  0.87852687  0.49347567  1.38356417  1.42993226  0.65037780  0.65318119 #>  [9457]  1.49694240  1.99713304  0.85605698  0.82356312  0.65537027  1.01765938 #>  [9463]  2.29360116  0.34692933  0.98015625  1.00918824  0.96644532  1.49955372 #>  [9469]  0.93452496  0.99969241  0.22185990  0.77882073  1.47706485  1.17203059 #>  [9475]  0.99944192  0.98259761  0.98553363  0.36613793  1.00058352  0.65264734 #>  [9481]  1.64098530  0.89614286  0.78584113  0.66642019  0.99959748  0.55744506 #>  [9487]  0.83700366  1.17800975  0.70725702  0.90392555  0.95568160  1.51625056 #>  [9493]  1.30200570  1.26354213  1.19965835  0.52647589  1.49916288  0.65458025 #>  [9499]  1.11166614  1.39100418  1.19854350  1.17040828  1.06425458  0.66047619 #>  [9505]  1.47619656  0.85657325  1.08622915  1.25430004  0.87094324  1.11631833 #>  [9511]  0.96898343  0.97841080  0.59217081  0.79548017  1.15170602  0.92094045 #>  [9517]  0.99608752  0.87222556  0.60110404  1.32637217  1.17799540  1.39564431 #>  [9523]  1.22568536  1.97738928  1.10052729  1.52161816  0.83790031  0.98487099 #>  [9529]  0.99676137  0.94765660  0.65102151  0.99477913  1.26860392  0.81729127 #>  [9535]  0.65735226  1.11049102  0.34966387  1.11428723  0.86225029  0.37407978 #>  [9541]  0.81818293  0.32840529  1.22617105  0.49972096  1.00175008  0.98307843 #>  [9547]  0.80537110  0.49147062  0.99788934  1.29117464  0.74492813  0.49139744 #>  [9553]  1.27820926  0.65099284  1.27065217  0.92858838  0.97824648  0.97916630 #>  [9559]  1.71346873  0.42857201 17.19862820  0.72771882  0.97775706  0.82769398 #>  [9565]  0.50052944  1.97010269  0.81590311  1.21484728  0.65239522  0.45767241 #>  [9571]  0.32715120  0.97981636  0.49838069  0.97718216  0.76021211  0.76280518 #>  [9577]  0.32792173  0.65274030  1.34979667  1.30204292  1.17425408  0.99963029 #>  [9583]  1.99636229  0.65575733  0.90519096  0.98847291  0.73685004  0.35658527 #>  [9589]  0.65537250  1.76294676  0.66546801  0.69171898  0.98247845  0.92252466 #>  [9595]  0.40056754  1.13653426  0.98227863  1.37869754  1.50517041  0.73424836 #>  [9601]  0.77573438  0.78270202 16.06774483  0.98905049  0.98492840  0.32578792 #>  [9607]  0.94063668  1.01308195  0.24443495  1.08056845  0.97648978  1.48258929 #>  [9613]  0.98247845  0.78898176  0.65251981  0.78249993  0.65950637  0.49062156 #>  [9619]  0.42802849  1.98444180  1.30693045  0.50043449  0.50969685  1.20153209 #>  [9625]  0.99944192  1.96647744  0.61992778  0.73967040  0.83308540  0.69741875 #>  [9631]  0.55998783  0.92945021  0.98519029  0.49181800  1.13479798  0.49661639 #>  [9637]  1.44077244  1.64876592  0.69356807  0.99939394  0.64668772  1.30454773 #>  [9643]  0.78882271  0.78030625  0.98521586  1.19228646  1.24154096  0.94736971 #>  [9649]  0.65072471  1.22079631  0.39628571  1.49871701  1.33171500  0.70969601 #>  [9655]  1.96514391  0.98456854  0.48635393  0.96385563  1.11166614  0.62465120 #>  [9661]  0.87208509  1.33284039  1.31077124  0.65511799  1.22409868  0.54920690 #>  [9667]  1.66524112  1.95794202  0.84099981  0.98869464  0.87200801  1.14209767 #>  [9673]  1.24893238  1.00673440  0.97662669  0.79690014  0.79204496  1.22045977 #>  [9679]  0.95944812  1.47723044  0.75479290  0.49956682  0.49957234  0.49125864 #>  [9685]  0.94787946  1.61459936  0.99970248  0.98267482  0.48911702  1.28571603 #>  [9691]  1.19955635  0.49867567  0.80172722  1.24822666  1.50034247  1.08729100 #>  [9697]  0.98200000  0.46128089  1.95962230  0.85263178  0.98925955  1.49955372 #>  [9703]  0.96211134  1.12751953  1.95314646  0.97270787  1.31630085  2.19918664 #>  [9709]  0.67491516  0.53959612  0.98519029  1.17927035  0.74935023  0.79831147 #>  [9715]  0.90668304  0.62641251  1.27293020  0.59977818  1.30225621  1.18686059 #>  [9721]  1.55650969  2.00590251  0.79589614  0.98151001  1.29289064  0.39729311 #>  [9727]  0.65936699  1.25646899  0.89474648  0.98060950  0.97270787  1.33279663 #>  [9733]  1.01746281  0.49243550  1.56297136  0.73613251  0.42820013  0.77322510 #>  [9739]  1.30307900  0.74935850  0.65233531  1.36579338  1.99711599  0.88594082 #>  [9745]  1.10301684  0.49261804  0.80537110  1.05749784  1.67823602  0.85120602 #>  [9751]  0.70725702  1.08242280  0.47977124  1.04490761  1.49011625  1.96400001 #>  [9757]  0.93480696  0.65099284  1.26282660  0.32840288  0.77001066  0.88829819 #>  [9763]  1.84090579  0.98511625  0.37882383  1.96710703  0.98366746  1.11014849 #>  [9769]  1.96607106  1.30454773  0.99357442  0.87185668  1.05349620  0.60085131 #>  [9775]  0.99932399  1.04929019  1.19755333  1.08143371  0.87271093  0.32811876 #>  [9781]  0.88687882  1.10246766  1.71332900  0.63412642  0.53246527  0.39602248 #>  [9787]  1.29337884  0.79788108  0.97695560  0.65359837  0.48872244  0.51220151 #>  [9793]  0.32616766  1.50262511  0.50120307  1.22114914  1.88683256  1.76814254 #>  [9799]  1.17597290  1.76710508  1.46521183  0.50216315  1.36579338  1.33164419 #>  [9805]  1.55146876  1.04754965  0.89474648  0.39119375  0.24443926  1.09439748 #>  [9811]  0.98363599  1.25190079  0.39870409  0.58407810  0.98323872  1.22750000 #>  [9817]  0.81210040  0.76895807  1.47300000  1.01227205  0.97657323  1.39771739 #>  [9823]  0.66266440  1.10559937  0.97956518  0.92281411  0.98925955  1.30228529 #>  [9829]  1.03470035  0.76960879  1.22388806  0.48835698  0.45515405  0.49457809 #>  [9835]  0.99399661  1.07369577  0.79955353  1.18744471  1.01308195  0.73817899 #>  [9841]  0.61884989  0.98487099  1.55511267  0.72259957  0.39207914  1.47394978 #>  [9847]  0.55589632  1.00620733  0.49806259  0.49806259  1.22524730  0.74958144 #>  [9853]  0.79013374  0.58598223  0.84311657  0.99915935  0.97685710  1.49870046 #>  [9859]  0.39119375  0.65117942  1.47458310  1.17068004  0.98484854  1.41900611 #>  [9865]  1.19066508  0.65538562  1.18160136  0.97823283  0.65304345  1.99352275 #>  [9871]  0.98523608  1.14231248  0.73545712  0.25159763  0.65593286  0.53286508 #>  [9877]  1.18222835  0.37831379  0.65654064  1.17389577  0.94765660  0.90430643 #>  [9883]  0.59173632  2.00481228  0.92029316  0.92008636  0.78566063  0.89042449 #>  [9889]  1.10531014  0.99801931  1.47484376  0.49661639  1.02984159  0.98905049 #>  [9895]  0.66741475  0.99820201  0.98423865  0.65595864  0.24413305  1.66225225 #>  [9901]  1.55146876  1.33503566  0.67074007  0.49736854  0.80488808  0.65899867 #>  [9907]  0.79803686  1.66367002  0.52990635  0.98518815  0.99978127  0.79640133 #>  [9913]  1.46904773  1.27068464  0.97663705  0.82797868  2.04885846  1.30225621 #>  [9919]  0.73729680  0.97936515  1.32834331  0.79788108  0.99959748  1.10508909 #>  [9925]  0.74761997  0.98257196  0.35537122  0.98487099  1.44123546  0.96966798 #>  [9931]  0.65291010  0.66582210  1.38343796  0.49238070  0.73302282  1.31263877 #>  [9937]  1.31593512  1.04036291  1.16317042  0.98518815  0.58665423  0.99559026 #>  [9943]  0.97755036  0.32742621  1.74778300  1.02942749  0.98263279  1.46684718 #>  [9949]  0.91030809  1.47714210  1.30506044  1.46775445  0.98306240  0.89100374 #>  [9955]  0.97824648  1.47500036  0.97650324  1.46917330  0.97758857  1.96847731 #>  [9961]  0.58727720  0.99893653  0.98476140  0.91030809  0.66389301  0.98322918 #>  [9967]  0.48778335  1.44966797  0.65291010  0.49754465  0.98847291  0.62098401 #>  [9973]  0.50087504  0.59775449  0.98306240  0.99971529  0.73247515  0.97719673 #>  [9979]  0.98847291  0.98661591  0.65630962  0.74374317  0.98391514  0.99873314 #>  [9985]  1.16118334  1.31013015  0.83308540  0.32811673  0.65136584  1.12172572 #>  [9991]  0.94765660  0.97718216  3.20703778  1.99225035  0.72155450  0.99323277 #>  [9997]  0.78789679  1.03634423  0.49829003  0.49147394  1.95409751  0.48852438 #> [10003]  0.84311657  0.78303626  0.97824648  0.73247779  0.77518674  0.97916630 #> [10009]  0.58139866  2.05952586  0.99913364  1.11045107  1.78949296  1.47770296 #> [10015]  0.56168071  1.31873399  1.11280070  1.91136320  0.43926833  0.65538562 #> [10021]  1.00105888  0.99071429  1.04613282  0.75513979  0.98257760  0.66685288 #> [10027]  1.65142894  0.93903610  0.99085737  0.38786719  0.99009675  0.98824615 #> [10033]  1.51224108  0.59343029  0.66557971  0.98341680  1.17178712  0.48483399 #> [10039]  1.64371200  1.64616950  1.59576216  1.26000171  0.72415277  0.89474648 #> [10045]  1.71631166  0.98470990  1.57289984  0.98435627  0.97676912  0.85533372 #> [10051]  0.45767241  0.50147563  0.65373908  1.28405133  1.14140931  0.55931162 #> [10057]  0.79485953  0.97789812  1.25204813  0.52168672  0.76579314  0.98104670 #> [10063]  0.98151001  0.56207771  0.49147394  0.98519029  0.98722564  0.63963208 #> [10069]  0.98151001  0.65623751  0.52990635  0.58811870  0.89474648  1.47246905 #> [10075]  0.81259451  0.93724255  1.12228572  0.84567078  0.60864646  0.93452496 #> [10081]  1.23191704  0.99676022  0.32557132  1.19500742  1.39656450  0.84509829 #> [10087]  1.35753517  0.97944887  1.47154776  0.65549248  0.79952477  1.96149904 #> [10093]  0.99944192  0.84949475  0.80700548  1.16633451  0.33159304  0.49385085 #> [10099]  1.24249576  0.97650324  0.73452386  1.27926416  1.18723265  0.97806301 #> [10105]  0.98257760  1.46607630  0.97676912  0.82907539  0.65239522  1.04509786 #> [10111]  0.63449871  1.66027701  1.95833261  0.56195246  0.99159770  0.49729284 #> [10117]  1.17265881  0.65183804  1.30273167  0.84064244  0.65846780  0.97944887 #> [10123]  1.44649815  0.97442805  0.73237743  1.23403205  0.99706690  0.99788934 #> [10129]  1.31333356  0.77518674  0.62023404  0.49582878  0.85324157  1.31270269 #> [10135]  1.46521183  1.72468385  2.27685754  0.49137593  1.47985807  0.98227863 #> [10141]  0.98010622  0.32827032  0.65099284  0.49985124  0.39789483  0.99899868 #> [10147]  1.46819299  0.45000061  0.84064244  1.15699741  0.73577388  0.57551619 #> [10153]  0.98770170  1.39715466  0.98286739  1.59954446  0.91536622  1.04476437 #> [10159]  0.98738322  1.33093602  1.69222428  1.24925745  0.99913364  0.50193950 #> [10165]  0.65100285  0.92973006  0.78041055  0.78119141  0.48853206  0.98257987 #> [10171]  0.65104882  0.47972406  1.77700615  0.48912324  1.06802853  0.82356312 #> [10177]  0.99612517  1.64876592  0.46004371  1.99603862  0.97706411  0.94988671 #> [10183]  1.25195005  0.50011416  0.49452524  0.92029316  0.32907521  0.87646967 #> [10189]  0.83896742  0.32835045  0.76237209  1.38832058  0.74687964  0.78762556 #> [10195]  1.99089700  1.39715466  1.49965194  0.51170566  0.99970248  1.28405133 #> [10201]  0.72725098  0.65444189  0.96020245  0.98294125  0.48879428  1.30868001 #> [10207]  1.18018194  0.73825781  1.39052588  0.99959748  1.08915826  1.07514180 #> [10213]  0.93812727  1.46479828  0.98520865  1.42600288  0.83879385  0.52809589 #> [10219]  0.91030809  0.73237743  0.49123923  0.98103184  0.79931574  1.17902073 #> [10225]  0.93452496  1.99926058  0.49246420  1.40149528  0.65538562  0.49985124 #> [10231]  0.98423865  0.88407127  0.65798046  0.83807748  1.99167903  0.97676912 #> [10237]  0.73251912  0.93452496  0.98546893  0.39602248  0.45259548  0.50070071 #> [10243]  0.98506306  1.17205676  0.97911045  1.34384042  0.48879428  0.42599855 #> [10249]  0.89236558  0.74935850  1.50682086  0.73247515  1.25012202  0.59228537 #> [10255]  0.61286833  1.16504424  0.78794059  1.14005265  0.87853667  0.98447907 #> [10261]  0.79955353  0.98306240  0.98730646  0.59173632  0.79813728  0.70265368 #> [10267]  0.66768042  0.50219847  0.24415667  0.78775603  0.98513531  1.17687192 #> [10273]  0.45265362  0.83374960  1.34919755  0.65383301  0.99947223  0.59473558 #> [10279]  0.33119147  1.49560035  1.66573653  0.98267482  1.96913708  1.18213086 #> [10285]  1.73083836  0.74969811  0.99071429  1.56919923  1.32095238  0.97911045 #> [10291]  0.97657663  1.48984916  0.65145478  0.98443438  0.96303850  0.65670090 #> [10297]  1.63038805  1.47934080  4.92435496  0.86774806  0.91534483  1.17379512 #> [10303]  0.36946353  1.91521354  0.28478896  1.35753517  0.65950637  1.48586967 #> [10309]  0.30676439  0.74757103  1.30367608  0.79952477  1.15389224  0.60346064 #> [10315]  1.11166614  1.84509989  0.93493498  1.49514206  1.03470035  1.99577867 #> [10321]  1.61054366  0.97773981  0.69261998  0.81915566  0.54311457  0.65345829 #> [10327]  0.65538562  1.25204813  0.69074660  0.71394530  0.95944812  1.19460200 #> [10333]  2.45261675  1.97314410  0.54920690  1.00277486  0.77804042  0.95944812 #> [10339]  1.65951676  1.23352652  0.74908969  1.27703545  0.97981115  0.97736376 #> [10345]  0.98661591  0.99863224  0.98873814  0.42691079  0.48635393  0.78816763 #> [10351]  0.98124313  2.44021767  0.81204375  0.57049689  1.49871701  0.99477913 #> [10357]  0.98523608  0.82356312  2.44942945  0.97671397  0.91030809  0.63534232 #> [10363]  0.78122581  0.99676022  0.49177676  0.90418054  1.48984916  0.49090976 #> [10369]  0.65142094  0.39140119  0.89474648  0.67653662  0.98847291  0.91534483 #> [10375]  2.45629318  0.98487099  1.96121900  0.86774806  0.65899867  0.49502810 #> [10381]  1.08077922  0.99676137  2.87470645  2.08948152  0.97850297  0.74416567 #> [10387]  1.49730302  0.49255812  1.25939612  2.44327313  1.95439347  1.97047217 #> [10393]  0.98145360  1.59157932  1.00417009  1.46479839  1.00631070  0.49361282 #> [10399]  1.13218935  0.52529373  1.08269783  0.97653226  1.15699741  0.82907539 #> [10405]  1.72450059  0.87480301  1.68104486  0.98145360  0.98553363  1.32095238 #> [10411]  0.98506306  1.09111111  0.66110504  0.64429688  1.59625447  1.40078327 #> [10417]  0.99658007  0.98523608  0.52719893  1.22954499  0.56881488  1.46734924 #> [10423]  1.33295372  0.98827574  1.27926416  0.98168172  0.67446461  0.94765660 #> [10429]  1.44455775  1.44041226  0.87322166  0.66503071  0.61600852  1.31799734 #> [10435]  0.99971529  0.95441279  0.98306240  0.49009892  0.98523608  0.82500112 #> [10441]  1.66619215  1.99352045  1.00338499  0.91625968  0.32307117  0.97270787 #> [10447]  1.07305782  1.01519793  0.99971529  0.93364850  2.46059663  0.49153217 #> [10453]  1.66455524  0.98151001  1.24361308  0.98618825  0.80714630  1.49957294 #> [10459]  0.69514884  1.97810098  0.99959748  1.08761195  1.39747721  1.47442181 #> [10465]  0.56775681  0.76692555  1.05016741  0.99913364  0.66639832  0.97685710 #> [10471]  0.99878625  3.96888359  1.95962230  0.97650428  1.91889624  0.99913774 #> [10477]  0.95174806  1.20000163  0.97824648  1.30933334  1.21889177  0.98263279 #> [10483]  0.97736376  0.40558190  1.17876169  2.44262189  0.98660131  3.66557575 #> [10489]  0.86225029  0.73348828  1.95297853  1.20019133  1.25788837  0.67766408 #> [10495]  0.97556670  2.32859111  0.98082019  1.43764033  0.98459912  1.97445127 #> [10501]  1.91136320  1.09075747  2.10000285  1.10543385  0.56604977  1.19500742 #> [10507]  1.46507095  1.49955372  5.92956073  0.98060862  0.48955522  1.37630980 #> [10513]  0.66420834  1.75831198  0.64202567  1.63301858  0.68788464  2.01375862 #> [10519]  1.03055873  1.77972864  0.66047619  2.27102724  0.95805588  0.17111057 #> [10525]  0.75777538  0.55061322  0.78386390  1.33215416  1.26217899  0.79126012 #> [10531]  0.99071429  0.82907539  1.85663146  0.49535714  1.17740898  2.60506787 #> [10537]  1.00478678  0.70120123  1.10876593  1.42783045  0.99885375  0.79393886 #> [10543]  1.65815077  1.89032292  1.71000232  0.54368740  1.66242949  0.64202567 #> [10549]  1.26020090  0.90959271  1.14080230  0.80714630  1.00000136  0.74314302 #> [10555]  0.71737108  0.39928081  1.35325769  1.77181641  0.74757103  1.40439775 #> [10561]  1.10518031  0.51416993  1.12142996  0.48828831  0.83682370  0.97859283 #> [10567]  0.90097383  1.12511302  0.51338674  1.05386147  1.38966052  1.38211589 #> [10573]  1.18885714  1.10844605  1.63366306  0.14140429  0.94809035  0.48444889 #> [10579]  0.84930631  0.92514489  0.98200000  1.32726466  0.98511625  2.16157304 #> [10585]  0.94730962  1.14018176  0.96011110  0.59841081  0.65673937  0.65278884 #> [10591]  4.55886877  0.78567941  0.47475607  0.74369828  0.98074952  1.08865222 #> [10597]  1.38012954  0.73933631  0.74757103  0.70053537  1.05213556  1.45921032 #> [10603]  2.21638395  1.00387900  1.35753517  1.35191544  0.99676137  0.99911562 #> [10609]  1.49036162  1.18591215  0.82797868  0.73706624  0.53063877  0.91030809 #> [10615]  0.84671525  1.98614738  1.07781287  0.96309089  0.77001066  0.82657037 #> [10621]  0.93903610  0.41557199  0.65100285  1.66524112  1.33115942  1.90307737 #> [10627]  1.05159290  1.14448206  0.62301664  1.29516289  1.08077922  1.55451635 #> [10633]  1.40749217  1.31693560  0.72491653  0.85436591  0.63653132  1.13610780 #> [10639]  1.42822768  0.77982440  1.30254091  0.92029316  0.63963208  1.60418886 #> [10645]  0.90333276  1.12142996  1.37300144  1.99757251  0.96402464  1.94120613 #> [10651]  0.60000081  1.08345935  0.54865694  0.99971529  1.22478618  0.73239322 #> [10657]  1.31873399  1.55452863  1.20019133  0.94715127  0.99820201  1.03514455 #> [10663]  0.33285266  1.22530305  0.89791933  0.66408345  1.47981390  0.52588180 #> [10669]  1.48239018  1.26837276  1.15560073  1.42594566  1.35622150  1.30432863 #> [10675]  0.62015857  1.28435885  1.15027710  0.85989145  1.43255410  1.47542377 #> [10681]  0.54904208  0.71628898  0.86823922  0.56150591  0.67115626  0.84104081 #> [10687]  1.09975235  1.00889748  1.95889774  1.08786380  0.96445759  1.23811785 #> [10693]  0.32907521  0.76488478  1.83228669  0.71302337  0.99544850  0.90519096 #> [10699]  0.98949702  0.17111348  2.28198757  1.43531761  1.94759380  0.24792802 #> [10705]  0.78589950  0.99836956  1.80231045  0.65501151  1.18439341  0.93930123 #> [10711]  1.08730496  0.49187773  0.94770542  0.82356312  1.36244943  0.86712283 #> [10717]  0.98520954  0.65373967  1.45355236  0.59584186  0.55184019  3.15050224 #> [10723]  0.97859283  0.86855517  0.49261804  1.16640401  1.98799321  0.88533944 #> [10729]  1.41144278  0.99323751  1.22688751  0.71214382  1.30693045  1.24891705 #> [10735]  0.98435020  0.98505134  0.61059748  1.11736980  0.74801351  0.66651464 #> [10741]  0.41581984  1.36337142  0.99788934  0.73260591  0.65109137  0.58534002 #> [10747]  0.66629461  0.49891116  0.98487099  1.36179102  1.17431139  1.00125432 #> [10753]  0.45444312  1.10795247  0.32686983  1.37474720  0.48825214  1.18206161 #> [10759]  0.65458025  0.66634895  0.89979738  1.96996426  0.82826384  1.49036162 #> [10765]  1.47112428  0.24515237  0.84914201  1.01370574  0.65072471  1.71783461 #> [10771]  1.47660093  1.22408077  0.49243550  1.19094146  0.99477913  0.48831853 #> [10777]  0.74757103  1.66524112  0.65537027  0.39977677  1.13494136  1.31481564 #> [10783]  0.30713908  0.48825162  0.99306977  0.98181951  0.65170024  0.25259179 #> [10789]  0.98452483  1.19552296  1.72694167  0.72685275  0.79485953  0.85079083 #> [10795]  0.49143364  1.13505671  0.90227611  1.62169738  1.99826728  3.43262331 #> [10801]  1.13689043  0.86506512  2.97257210  0.99820201  1.16871159  0.96352087 #> [10807]  0.97944887  0.99071429  1.14128756  0.57640870  1.31404484  0.81803836 #> [10813]  0.85406546  0.55217589  0.65343750  1.47785413  1.37522198  1.35307325 #> [10819]  0.88151634  2.11078586  0.60085131  1.17203059  1.12657825  1.24810062 #> [10825]  1.19804347  0.71408235  1.06611367  0.99085737  0.68555991  2.17646416 #> [10831]  1.83281137  0.78267280  1.10474835  2.95518918  1.28841042  0.65608736 #> [10837]  1.65408536  0.98200000  1.46935068  0.42208757  1.71314651  1.02440302 #> [10843]  0.98523608  0.71955714  0.30760076  1.33217819  1.01704981  0.67589607 #> [10849]  1.10443859  0.56095019  0.83374960  0.78045336  0.73996193  1.39830075 #> [10855]  0.37906264  0.23678878  0.66490090  0.98082019  1.12103653  0.83112612 #> [10861]  1.30204301  0.76461277  2.00240795  0.98459912  0.47170814  1.03602224 #> [10867]  0.55899088  1.99590235  0.56775681  1.14593906  0.98341680  0.49133849 #> [10873]  1.78782752  1.10120414  1.30340049  3.23800713  1.64145165  0.48903151 #> [10879]  1.21705714  1.27377551  1.01250137  0.33278985  1.14681792  0.97956518 #> [10885]  1.31548788  0.97680788  0.98421296  0.57336540  0.97977178  0.95944812 #> [10891]  0.27097484  1.99881192  0.49894467  1.46616732  1.46965767  3.91364319 #> [10897]  1.06727092  1.57292548  0.65100285  1.49233569  1.22750000  1.15520817 #> [10903]  0.41273079  0.67105986  0.88986432  1.48017128  1.60345445  0.57015908 #> [10909]  1.95649295  0.65253022  0.32552441  0.99963029  0.98487099  0.95439624 #> [10915]  0.57126588  0.58590194  1.98331511  1.97245440  1.30273167  0.71579718 #> [10921]  2.09690932  0.79902900  0.97676912  1.03842214  0.82721852  0.65157584 #> [10927]  0.20053782  1.93289063  1.31151466  0.54385603  0.73514838  0.98019784 #> [10933]  1.34784446  1.95300855  0.58622925  1.14231248  0.72202408  0.65146449 #> [10939]  0.53794211  0.59982917  0.49037476  0.79485953  1.51962292  0.82290087 #> [10945]  1.64255605  1.20000163  0.65109137  1.28499677  0.97859283  0.77142962 #> [10951]  0.59070749  0.48853206  0.69514884  1.72925843  1.19790999  0.63507030 #> [10957]  0.98847291  0.74658637  0.99940596  0.57266230  0.51817212  0.98722564 #> [10963]  0.32602100  1.10989249  0.58727720  0.98905049  0.63963208  0.66531174 #> [10969]  0.75473302  1.66455524  1.30255073  0.83286826  0.65674417  0.87204151 #> [10975]  0.74135468  0.99891848  1.57496032  1.04082558  0.69187500  1.50865160 #> [10981]  0.99222090  0.80544282  0.76383167  0.98074952  0.86717040  0.97685710 #> [10987]  0.74869374  0.79268589  1.26066320  0.98060950  0.68285923  0.97650428 #> [10993]  1.26960409  0.97859283  0.65631938  0.97744488  1.08092659  1.77672171 #> [10999]  0.32549659  0.65666678  0.55998783  1.09590706  1.19168843  1.30747816 #> [11005]  0.37561444  0.98424487  0.93607546  0.49661639  1.34751865  1.01598676 #> [11011]  0.80049070  1.87785118  0.99754607  0.83114398  0.74589844  0.66651658 #> [11017]  0.77870296  0.67382686  0.99873314  2.31518210  0.91416883  0.98505134 #> [11023]  1.80000244  1.32095238  0.63840451  0.22150227  0.80640570  0.69021987 #> [11029]  1.28859375  0.49259407  0.86880145  0.97392632  0.58422037  0.48988589 #> [11035]  0.99886814  0.97773981  1.97390268  0.54385603  1.24027612  0.84930631 #> [11041]  1.43074376  1.24615554  0.32214844  0.59971405  1.33279663  1.28335109 #> [11047]  0.92514489  0.99784167  0.98523608  0.43438390  0.49226242  0.81000110 #> [11053]  0.99005620  0.98510905  1.16288693  0.98770170  0.97719673  1.08345935 #> [11059]  0.60085131  0.63507030  0.98424987  0.68455357  0.99959748  0.56282331 #> [11065]  0.74294355  0.86225029  0.97680788  0.90269584  0.98523608  0.98553363 #> [11071]  1.02038010  0.49412307  0.97704875  1.31358419  1.07639957  1.46029017 #> [11077]  1.10512854  1.79096982  0.61025080  0.49542868  1.59380028  1.93289063 #> [11083]  0.99188445  0.79298134  0.88089260  1.41900611  0.56775681  0.96918864 #> [11089]  0.48514588  0.75122888  0.88943411  1.00195038  0.58214778  1.53288941 #> [11095]  0.47170814  1.31873399  1.48661582  0.99971529  0.99151340  0.97879533 #> [11101]  0.90830068  0.61600852  1.00215903  0.64426217  0.65112810  1.91156039 #> [11107]  0.35283617  0.83807748  1.24479939  1.07781287  0.50224068  1.69098228 #> [11113]  0.98925955  1.00141885  0.88601011  1.58755344  0.73623453  1.48508429 #> [11119]  1.17068004  0.91268136  0.91786174  0.43772044  0.91534483  1.05749784 #> [11125]  0.26152709  1.19965835  0.59982149  0.74135468  0.42836718  1.96753038 #> [11131]  0.48824489  0.50227362  0.80340787  1.97000035  0.76348421  0.30608589 #> [11137]  0.79690014  2.54344084  0.39698049  0.98962090  1.82050795  0.74908969 #> [11143]  0.94738438  0.55899799  1.17138223  1.48042215  1.08341831  0.98267482 #> [11149]  0.60296392  1.49889893  1.04035211  0.56378052  0.65215522  1.31247502 #> [11155]  0.95192707  0.99944192  0.88351355  7.30890359  0.59206851  0.41885437 #> [11161]  0.58447036  1.24893084  0.98306240  0.98039755  0.76375812  1.37291293 #> [11167]  1.39872921  1.13997866  0.98187037  1.17800975  0.99932488  0.61513691 #> [11173]  0.84750361  0.97936515  1.07343533  0.54198150  1.33254128  1.26090909 #> [11179]  1.41107843  1.13000482  0.49253153  0.99976796  0.68734522  0.65825548 #> [11185]  0.65105108  1.26020090  1.19550898  0.82907539  1.09588323  2.88417873 #> [11191]  1.68850377  0.64429688  9.90587095  0.64668772  0.84321896  0.61217177 #> [11197]  1.16052659  1.74433240  1.41530612  0.97556670  1.96573479  0.85120602 #> [11203]  0.99005620  0.90519096  1.21769127  1.12415542  1.66526081  1.14140931 #> [11209]  1.00138406  0.82888523  1.59481636  0.49628218  0.61819054  0.65037780 #> [11215]  0.83302524  1.22077303  0.82638130  0.90959559  1.62818841  0.99676022 #> [11221]  1.19066508  0.77142962  1.22710216  1.22061222  1.18774403  0.99820201 #> [11227]  1.32095238  0.97608707  1.07619507  0.77755634  0.55488125  1.15734911 #> [11233]  1.72450059  1.27234861  1.69079793  0.73257684  0.48549765  1.00800137 #> [11239]  0.58641826  0.97653219  0.90872498  0.97657323  0.94765660  1.47757702 #> [11245]  0.65157584  1.94541574  0.65204201  1.14080230  1.34211972  0.95174806 #> [11251]  0.99788934  0.98312956  0.98925955  0.61589307  1.44603696  1.35496475 #> [11257]  1.00322446  0.84775756  1.58787773  1.40221766  1.00027932  0.33023810 #> [11263]  0.98487099  0.99913364  0.32572739  0.79595202  0.95195862  0.73769190 #> [11269]  0.54430327  0.66003746  1.07819004  0.73222074  0.98435020  0.59614465 #> [11275]  0.83183501  0.98305540  0.60000081  0.58920000  1.59182474  0.81231708 #> [11281]  0.78818887  1.13494136  1.31805287  1.25707489  0.99820201  1.32296120 #> [11287]  0.71886536  0.59614465  0.27974584  0.71580993  0.98263279  1.29337884 #> [11293]  0.92213985  0.98510905  1.64712624  0.65117942  0.77196479  0.66003746 #> [11299]  0.73817899  0.87949411  1.23201705  0.48955522  1.36579338  1.09292888 #> [11305]  0.76879162  1.35432419  1.23534468  0.97837752  0.94765660  0.49260793 #> [11311]  1.49957294  1.23403205  1.46996805  0.78818887  1.22884803  1.14888736 #> [11317]  1.30373319  1.70960879  0.99940596  0.91010585  1.47455329  0.67074007 #> [11323]  0.24680641  2.19287249  1.01761776  0.71154729  0.94765660  1.96503454 #> [11329]  1.11255968  1.19784242  0.06292832  0.77356236  0.89474648  0.93116016 #> [11335]  0.48286016  1.22710216  0.49200779  0.93452496  1.76530486  1.37064017 #> [11341]  1.10295803  0.96648089  0.63177107  1.95995739  0.76280518  0.71386140 #> [11347]  0.98259761  0.97916630  0.46056431  0.58790701  1.19279593  1.24603328 #> [11353]  1.15313644  1.72800234  0.98470990  0.59684224  1.58913801  0.73578502 #> [11359]  1.32610691  1.69071213  0.85382158  1.19168843  1.30933334  0.65137608 #> [11365]  0.73289755  0.96676618  0.90875481  1.39483751  0.79592544  0.58615159 #> [11371]  1.29210417  1.30020383  0.75981146  0.73367554  0.39977677  0.79157226 #> [11377]  0.30343603  0.97691931  0.82354200  0.83939992  0.48872244  0.60304348 #> [11383]  1.17781201  0.50025856  1.37143043  0.99245122  0.63108950  0.71189146 #> [11389]  1.15438914  0.79458622  1.16288693  1.47459360  1.67914306  1.08519686 #> [11395]  0.99165755  0.73058882  0.72768472  0.48998935  1.06348854  0.76926149 #> [11401]  0.65304475  0.65102146  0.83556088 14.40815747  0.74605281  0.33040889 #> [11407]  0.74518081  0.28387840  1.14966706  0.81058989  0.66611335  1.14098176 #> [11413]  0.98622720  0.56006481  0.99878625  0.98962090  0.99963029  1.21290218 #> [11419]  0.33194650  0.97911045  0.26773767  0.71154729  0.76003510  0.59614465 #> [11425]  0.97648927  0.97879533  0.98286728  0.33159304  1.13266850  0.91534483 #> [11431]  1.29383315  0.59355573  0.98151001  1.09326439  1.21714472  0.82165659 #> [11437]  0.52632146  1.48697135  0.52389409  1.18195565  0.87866489  0.99788934 #> [11443]  0.73058882  1.96558977  0.98251727  2.92951283  0.43405631  1.18141497 #> [11449]  0.92989167  0.97719673  1.19513247  0.96444139  1.23843949  1.74436564 #> [11455]  0.62297514  0.78459961  0.19506602  0.65637903  0.77490973  0.99962793 #> [11461]  1.08596235  0.40681992  0.99836956  1.02144722  0.98286739  1.00464007 #> [11467]  0.94006039  1.19299531  0.99473707  1.95315325  1.03359762  1.01939371 #> [11473]  1.12085659  0.98925955  0.75392624  1.03143895  1.48867682  1.67019343 #> [11479]  6.59158757  1.73375000  0.40670294  1.76084366  1.30548059  1.09808416 #> [11485]  0.95174806  0.71504438  0.69741875  1.96711413  1.23839286  1.23229478 #> [11491]  0.73730882  1.34148014  2.85555784  0.67950652  1.23178613  1.15643112 #> [11497]  0.92070257  1.11079477  1.35146074  2.74666220  1.95439347  1.30467062 #> [11503]  1.47280556  0.57104884  2.63387121  1.47485808  4.92122435  1.00639053 #> [11509]  1.30162208  0.99913364  1.38367937  2.46737836  0.82047238  3.93031948 #> [11515]  1.95436433  2.00481228  0.41178156  1.49124413  0.98413104  1.33784666 #> [11521]  0.97736376  2.96244313  4.77840800  0.54318519  1.31348833  0.74135468 #> [11527]  0.79869565  0.89040806  1.47401223  1.46761619  0.78465616  0.90355958 #> [11533]  1.24891705  0.85989145  1.17687192  1.47512520  1.04035211  0.28139171 #> [11539]  0.65923928  1.30200432  0.98040189  0.98770170  1.31077124  0.99825505 #> [11545]  0.99836956  0.88407127  1.32221007  0.65099284  0.62621899  1.50689286 #> [11551]  1.05749784  1.32007493  1.96588249  1.95297956  1.46479839  1.96871254 #> [11557]  1.00163851  1.32078279  5.11412174  2.31166667  5.62465088  1.08140268 #> [11563]  0.64007407  0.97936515  1.49939621  1.12835683  1.99888384  0.80714630 #> [11569]  0.65702242  1.67158522  0.28970136  0.98905049  1.12433129  0.63026173 #> [11575]  1.42478764  1.26308078  1.79482701  1.80498414  0.82838170  1.12684332 #> [11581]  1.22617105  2.94882374  1.66573653  0.57483353  1.29393069  0.79952477 #> [11587]  0.98521586  2.44434953  1.46479839  1.32637217  0.76603040  1.47500036 #> [11593]  2.92959677  2.00481832  0.88863581  1.97747627  1.99509214  0.98341680 #> [11599]  1.03141951  0.69028666  4.42378081  2.62993920  2.30643679  0.49791976 #> [11605]  1.67718450  2.23021074  1.96149904  0.50232003  1.47377591 16.79735415 #> [11611]  3.99090342  2.33263911  0.91030809  1.99888384  0.99005620  1.31161274 #> [11617]  1.81038192  1.41428763  0.44662167  1.62325394  1.16844073  0.83556088 #> [11623]  0.49156478  1.00418845  0.86551165  1.42378291  1.22705754  0.81923202 #> [11629]  1.38320978  0.47902794  1.15501598  0.81806810  0.97936515  1.16805529 #> [11635]  1.31161274  1.68524358  1.20069747  1.73816564  2.46205073  0.92714385 #> [11641]  1.30933334  0.97500132  1.09496865  1.49750806  0.99886986  0.77095408 #> [11647]  1.98171473  1.24668919  2.48393593  1.58248078  1.51962292  1.10929951 #> [11653]  0.99323277  1.05058745  1.49216869  0.98263318  1.31796388  0.96382616 #> [11659]  1.49944544  0.74589844  1.00011878  1.96813557  2.12697707  0.99071429 #> [11665]  1.07369577  1.35449512  1.19279593  1.00883676  0.99788934  1.46709452 #> [11671]  1.93933595  1.62107506  1.96952280  1.97030960  1.96964059  1.96717839 #> [11677]  1.95412823  1.49683400  2.99943094  1.19611227  1.47300000  1.64255605 #> [11683]  5.87592949  2.09648062  2.99028067  0.92989167  0.70110883  1.46422778 #> [11689]  1.46577324  1.79060243  0.97859283  2.32429207  2.99879243  0.98678086 #> [11695]  0.43449166  1.11066386  0.95560900  0.60972919  1.08396300  0.66969816 #> [11701]  1.99673912  0.47587403  1.14355814  1.24962810  0.69000055  1.33279663 #> [11707]  1.25204813  1.20067979  0.86019362  0.89191209  1.39878710  0.57603061 #> [11713]  1.11862323  0.48853206  1.20069747  1.22387319  0.49970298  1.22045977 #> [11719]  4.30402921  0.97944887  2.32873983  0.97775706  0.97556670  1.30260746 #> [11725]  0.50000068  1.46117764  1.00215903  1.47857343  0.98019784  0.74008564 #> [11731]  1.36344684  1.99558532  0.85765342  0.55949168  0.83139650  5.23672019 #> [11737]  0.97730925  3.11508321  0.74983115  1.22100986  0.85977229  0.45774488 #> [11743]  2.08774178  1.46736971  0.66893407  1.46839241  1.12971200  0.99410426 #> [11749]  0.94765660  0.65383301  1.30216892  0.71989993  0.85120602  0.74492813 #> [11755]  1.09808416  1.26001744  0.66483503  0.95575685  0.99820201  1.00352457 #> [11761]  0.69229378  1.86064537  1.28050377  0.94765660  0.90440640  1.08808772 #> [11767]  0.60436878  1.23875241  0.66305712  0.96725462  0.78026408  2.42209847 #> [11773]  0.60864646  0.71197241  1.95300647  0.73368486  0.77389953  0.53870443 #> [11779]  1.12886274  0.98358920  1.52220741  1.28036645  0.07700107  1.34150667 #> [11785]  1.99316014  0.49936657  0.80619421  1.46663559  0.78520801  0.99836956 #> [11791]  0.97690045  0.83663014  0.23216986  1.06400752  3.27710914  0.98267698 #> [11797]  2.45716821  0.92626201  7.69658134  1.24595172  0.78567941  2.51935692 #> [11803]  0.97956712  1.62420080  0.77043080  0.97758857  2.19084693  1.39546592 #> [11809]  0.98207579  0.84262492  2.47678571  0.65137608  1.66257679  0.99414176 #> [11815]  1.11935614  1.32323144  3.41972440  2.69529748  0.49129881  0.65130373 #> [11821]  0.65216432  0.73059711  0.99971529  0.65670871  0.89861173  1.55451635 #> [11827]  1.57292548  0.65682406  0.87378318  0.99873314  0.98039755  0.98306240 #> [11833]  0.68257786  0.73907168  0.84171429  0.98337144  0.49462978  1.96039568 #> [11839]  1.23520878  0.98447907  0.74983115  1.98714883  0.97718216  1.15036645 #> [11845]  1.77342495  0.61022989  1.23167396  1.03331493  1.22797028  1.48867682 #> [11851]  0.83773095  2.39449266  1.09841379  0.36953584  0.81259451  0.74667700 #> [11857]  0.83601157  0.92024732  0.56440097  5.49876176  1.38022003  1.40837288 #> [11863]  1.04129767  0.80751047  3.20315453  1.03611990  0.71808643  1.06802853 #> [11869]  0.63531008  1.00270430  1.32723473  0.90052311  0.84626762  1.69134156 #> [11875]  2.64650289  0.65491625  1.37002996  1.19373495  0.93903610  1.08737604 #> [11881]  0.49585603  2.91298590  0.51128370  0.74008564  1.16518867  0.86696009 #> [11887]  1.40605522  1.30650226  0.49131639  1.51756052  2.92972988  0.57340896 #> [11893]  0.64668772  0.73247779  1.41900611  1.26967892  2.17988621  1.15454306 #> [11899]  0.55899019  0.96303850  3.91511884  0.66057158  0.79099051  0.75787391 #> [11905]  1.25985706  2.45475802  0.62301664  0.82826384  1.74714673  0.67917241 #> [11911]  0.99698425  0.65650760  0.77518674  1.30283275  1.69541347  1.24693259 #> [11917]  1.12474672  1.20069747  1.47064843  1.33284039  1.07605661  0.66277517 #> [11923]  0.79780204  0.81923202  0.96923208  0.71888939  0.39915573  0.89597935 #> [11929]  0.82356312  0.83460052  0.93649266  0.98376519  1.10197160  0.88156212 #> [11935]  1.02942749  1.20715041  0.97671397  1.11799597  0.93722858  1.99741429 #> [11941]  1.41392354  0.68289669  0.56529117  0.21693701  0.62372976  9.55896959 #> [11947]  0.94765660  1.64039776  1.90684522  0.08386588  1.47249425  0.16074023 #> [11953]  1.46761619  0.84427040  0.33814243  0.75473302  1.80991367  0.73271670 #> [11959]  0.61352877  0.82191242  1.02808124  0.90959271  0.97956518  0.34634669 #> [11965]  0.99959748  1.40055895  0.48151925  0.99873314  0.97744488  0.57015908 #> [11971]  0.43411277  0.24377835  1.74714673  1.17876169  0.78567941  1.30292898 #> [11977]  0.98103184  0.72665067  1.71006879  0.96966798  0.85120602  0.33176253 #> [11983]  0.75418620  0.97695560  1.24668919  1.33037119  1.39546592  1.55668690 #> [11989]  0.48911702  1.04976361  0.73058882  1.26673211  0.63134545  1.96727199 #> [11995]  1.21841563  0.64847191  1.89531320  0.14702794  1.18181824  1.00773324 #> [12001]  1.49683400  2.00046788  0.70219888  0.97691931  0.99843325  0.74419029 #> [12007]  0.98435627  0.55375568  1.16278012  1.07367535  0.50723891  0.77490973 #> [12013]  1.19928715  0.65561120  0.53313616  0.98366746  0.88519068  0.54576354 #> [12019]  1.20259083  1.47814336  1.95297853  1.08417550  3.49792086  1.00122787 #> [12025]  1.19279593  0.98487099  1.47401223  0.88943411  0.56897717  0.79257143 #> [12031]  1.39223591  2.19108423  0.86966891  0.59948680  0.48826613  3.44166750 #> [12037]  1.55420788  0.65155159  1.02510904  1.30608950  0.76879162  0.50899132 #> [12043]  0.73073521  1.19611227  0.97736376  0.98505134  1.30284187  0.91030809 #> [12049]  2.37446531  1.01765938  1.08622915  2.78243882  1.63329783  0.81779189 #> [12055]  0.82638130  1.22229059  0.95844481  0.48324045  0.98415338  0.73613251 #> [12061]  0.97755036  1.39556090  0.59216886  0.93624643  5.97503708  0.48929641 #> [12067]  0.97695560  0.26593401  1.27926416  0.68823623  0.80395189  1.96710703 #> [12073]  1.19933030  1.29318394  1.02427618  0.60000081  0.58190847  0.83318328 #> [12079]  0.90519096  1.02338336  5.41397432  1.12657825  0.99820201  0.74120681 #> [12085]  0.97278666  0.35011850  2.31581442  0.53054887  1.69238681  0.71461605 #> [12091]  1.61052850  0.87185668  9.24012786  0.98366704  0.59767510 #>"},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"Aggregation count matrices done blocks avoid large memory usage. Use `nBlocks` control number blocks read memory . Blocks defined `length(interactions(x))/nBlocks`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"","code":"aggHicMatrices(   x,   by = NULL,   FUN = sum,   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   compressionLevel = 0 )  # S4 method for InteractionArray aggHicMatrices(   x,   by = NULL,   FUN = sum,   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   compressionLevel = 0 )"},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"x InteractionArray object. String (length one character vector) describing whether aggregate interactions, files, neither (.e. NULL default). FUN Function use aggregating. nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. BPPARAM Parallelization params (passed `BiocParallel::bplapply()`). Default result `BiocParallel::bpparams()`. Parallel processing available `=interactions`. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"aggregated `DelayedArray` object.  `=interactions` `=files` 3-dimensional  `DelayedArray` returned. `=NULL` (default)  2-dimensional `DelayedMatrix` returned.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"Since interactions typically largest dimension InteractionArray, using `=interactions` creates HDF5-backed array store large arrays. Currently parallel processing HDF5-backed arrays supported regardless value `BPPARAM`. `=NULL` `=files` support parallel processing.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loops as GInteractions object loops <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Expand pixel ranges with a 5 pixel buffer on either side loops <-     binPairs(loops, binSize=100e3) |>     pixelsToMatrices(buffer=5)  ## Extract 10, 11x11 count matrices from 2 hic files iarr <-     loops[1:10] |>     pullHicMatrices(binSize=100e3,                     files=hicFiles)  ## Aggregate all, by files, or by interactions aggHicMatrices(x=iarr) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11> matrix of class DelayedMatrix and type \"double\": #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   250    85    44   .     9    27 #>  [2,]   203   201    87   .    14    23 #>  [3,]   231   210   255   .    18    24 #>  [4,]   320   225   201   .    25    28 #>  [5,]   123   279   177   .    22    23 #>  [6,]   254   170   294   .    43    38 #>  [7,]   116   216   169   .    40    30 #>  [8,]    93   104   276   .    55    42 #>  [9,]    56   118   110   .    89    61 #> [10,]    42    53   114   .   175    85 #> [11,]    34    46    46   .   200   190 aggHicMatrices(x=iarr, by=\"files\") #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11 x 2> array of class DelayedArray and type \"double\": #> ,,LEUK_HEK_PJA27_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   143    51    27   .     6    13 #>  [2,]   108   110    44   .     8    15 #>   ...     .     .     .   .     .     . #> [10,]    25    26    63   .    71    54 #> [11,]    11    24    18   .    95    97 #>  #> ,,LEUK_HEK_PJA30_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   107    34    17   .     3    14 #>  [2,]    95    91    43   .     6     8 #>   ...     .     .     .   .     .     . #> [10,]    17    27    51   .   104    31 #> [11,]    23    22    28   .   105    93 #>  aggHicMatrices(x=iarr, by=\"interactions\") #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11 x 10> array of class DelayedArray and type \"double\": #> ,,1 #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     7     4     6   .     0     0 #>  [2,]     8    11     5   .     3     1 #>   ...     .     .     .   .     .     . #> [10,]     2     2     8   .     8     2 #> [11,]     2     1     3   .     9     6 #>  #> ... #>  #> ,,10 #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     5     3     0   .     0     3 #>  [2,]     3     5     4   .     0     2 #>   ...     .     .     .   .     .     . #> [10,]     8    11    53   .     4     4 #> [11,]     8     7    10   .     6     8 #>"},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate the metadata columns of merged pairs — aggPairMcols","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"Aggregate metadata columns merged pairs","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"","code":"aggPairMcols(x, columns, funs)  # S4 method for MergedGInteractions,character,character_OR_function_OR_list aggPairMcols(x, columns, funs)"},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"x MergedGInteractions object. columns Character vector columns aggregate. funs Character vector functions apply `columns`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"`x` aggregated metadata columns","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"","code":"## Load required packages library(data.table, include.only = \"fread\")  ## Reference BEDPE files bedpeFiles <-     system.file(\"extdata\", package = \"mariner\") |>     list.files(pattern = \"Loops.txt\", full.names = TRUE)  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, fread, nrows=1000) |>     lapply(as_ginteractions) |>     setNames(gsub(\"^.*extdata/(.{2}).*$\", \"\\\\1\", bedpeFiles))  ## Add names describing the source and loop giList <- lapply(seq_along(giList), \\(i) {     x <- giList[[i]]     x$name <- paste0(names(giList)[i], \"_loop_\", length(x))     return(x) })  ## Merge pairs x <- mergePairs(x = giList,                 radius = 5e03)  ## List loop names aggPairMcols(x, columns = \"name\", fun = \"list\") #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>                          list.name #>                             <list> #>      [1]              FS_loop_1000 #>      [2]              FS_loop_1000 #>      [3]              FS_loop_1000 #>      [4]              FS_loop_1000 #>      [5]              FS_loop_1000 #>      ...                       ... #>   [1782] FS_loop_1000,WT_loop_1000 #>   [1783] FS_loop_1000,WT_loop_1000 #>   [1784] FS_loop_1000,WT_loop_1000 #>   [1785] FS_loop_1000,WT_loop_1000 #>   [1786] FS_loop_1000,WT_loop_1000 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths  ## Aggregate values aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = \"mean\") #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg #>                <numeric> #>      [1]         2.61103 #>      [2]         2.45301 #>      [3]         4.73751 #>      [4]         3.40635 #>      [5]         2.09352 #>      ...             ... #>   [1782]         2.89949 #>   [1783]         5.40040 #>   [1784]         4.60903 #>   [1785]         2.86398 #>   [1786]         4.48766 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths aggPairMcols(x, columns = c(\"APScoreAvg\", \"avg\"), fun = \"mean\") #> MergedGInteractions object with 1786 interactions and 2 metadata columns: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg  mean.avg #>                <numeric> <numeric> #>      [1]         2.61103   2.60512 #>      [2]         2.45301   2.73756 #>      [3]         4.73751   4.68239 #>      [4]         3.40635   4.49898 #>      [5]         2.09352   2.20826 #>      ...             ...       ... #>   [1782]         2.89949   2.08193 #>   [1783]         5.40040   3.58636 #>   [1784]         4.60903   3.34010 #>   [1785]         2.86398   2.43657 #>   [1786]         4.48766   3.98591 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = c(\"mean\", \"median\")) #> MergedGInteractions object with 1786 interactions and 2 metadata columns: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg median.APScoreAvg #>                <numeric>         <numeric> #>      [1]         2.61103           2.61103 #>      [2]         2.45301           2.45301 #>      [3]         4.73751           4.73751 #>      [4]         3.40635           3.40635 #>      [5]         2.09352           2.09352 #>      ...             ...               ... #>   [1782]         2.89949           2.89949 #>   [1783]         5.40040           5.40040 #>   [1784]         4.60903           4.60903 #>   [1785]         2.86398           2.86398 #>   [1786]         4.48766           4.48766 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths  ## Custom functions aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = \\(x) {     ifelse(is.na(sd(x)), 0, sd(x)) }) #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          fun1.APScoreAvg #>                <numeric> #>      [1]               0 #>      [2]               0 #>      [3]               0 #>      [4]               0 #>      [5]               0 #>      ...             ... #>   [1782]      0.03410843 #>   [1783]      0.96721962 #>   [1784]      0.00133997 #>   [1785]      0.15114917 #>   [1786]      0.04735593 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DataFrames to GInteraction objects — as_ginteractions","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"`as_ginteractions` takes paired-interaction (.e. BEDPE) formatted data-frame-like object converts GInteractions object. convenience, `makeGInteractionsFromDataFrame` can used alias.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"","code":"as_ginteractions(   df,   keep.extra.columns = TRUE,   starts.in.df.are.0based = FALSE,   ... )  makeGInteractionsFromDataFrame(   df,   keep.extra.columns = TRUE,   starts.in.df.are.0based = FALSE,   ... )  # S4 method for DF_OR_df_OR_dt,logical_OR_missing,logical_OR_missing makeGInteractionsFromDataFrame(df, keep.extra.columns, starts.in.df.are.0based)  # S4 method for DF_OR_df_OR_dt,logical_OR_missing,logical_OR_missing as_ginteractions(df, keep.extra.columns, starts.in.df.are.0based)"},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"df data.table, data.frame, DataFrame object. Assumes first 6 colummns format chr1, start1, end1 chr2, start2, end2, representing pair interactions. keep.extra.columns TRUE FALSE (default). TRUE, columns df used form genomic ranges returned GRanges object returned metadata columns object. Otherwise, ignored. df width column, always ignored. starts..df..0based TRUE FALSE (default). TRUE, start positions genomic ranges df considered 0-based converted 1-based returned GRanges object. feature intended make convenient handle input contains data obtained resources using \"0-based start\" convention. notorious example resource UCSC Table Browser (http://genome.ucsc.edu/cgi-bin/hgTables). ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"GInteraction object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"","code":"## data.frame df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000) makeGInteractionsFromDataFrame(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## data.frame df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## data.table library(data.table) df <- data.table::data.table(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                              chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## DataFrame library(S4Vectors) df <- DataFrame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                 chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Alias df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000,                  pval = 0.05, dist = 10000) makeGInteractionsFromDataFrame(df) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Additional metadata df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000,                  pval = 0.05, dist = 10000) as_ginteractions(df) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Remove additional metadata as_ginteractions(df, keep.extra.columns = FALSE) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Add 1 to starts (for 0-based programs) as_ginteractions(df, starts.in.df.are.0based = TRUE) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10001-20000 ---      chr1 30001-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly bin paired ranges — binPairs","title":"Flexibly bin paired ranges — binPairs","text":"Paired range objects (like `GInteractions` BEDPE-formatted `data.frame`-like objects) can binned separately set ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly bin paired ranges — binPairs","text":"","code":"binPairs(x, binSize, pos1 = \"center\", pos2 = \"center\", ...)  # S4 method for DF_OR_df_OR_dt,numeric,character_OR_numeric_OR_missing,character_OR_numeric_OR_missing binPairs(x, binSize, pos1, pos2)  # S4 method for GInteractions,numeric,character_OR_numeric_OR_missing,character_OR_numeric_OR_missing binPairs(x, binSize, pos1, pos2)"},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly bin paired ranges — binPairs","text":"x `GInteractions` `data.frame`-like object paired interactions. binSize Integer (numeric) vector describing new size pair ranges. Accepts 2 values adjusting pair. pos1, pos2 Position within anchors resize bin. Can character integer vector length 1 `length(x)` designating position element `x`. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly bin paired ranges — binPairs","text":"GInteractions-like object binned `binSize`  `pos1` `pos2`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly bin paired ranges — binPairs","text":"","code":"## Construct interactions as data.frame df1 <-     data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                chr2 = \"chr1\", y1 = 30000, y2 = 40000)  ## Assign each range to 20-kb bins from the start positions binPairs(x = df1,          binSize = 20000,          pos1 = 'start',          pos2 = 'start') #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2     ranges2 #>           <Rle> <IRanges>         <Rle>   <IRanges> #>   [1]      chr1   0-20000 ---      chr1 20000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Construct GInteractions library(InteractionSet) gi1 <-     data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                chr2 = \"chr1\", y1 = 30000, y2 = 40000) |>     as_ginteractions()  ## Assign each range to 20-kb bins from the start positions binPairs(x = gi1,          binSize = 20000,          pos1 = 'start',          pos2 = 'start') #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2     ranges2 #>           <Rle> <IRanges>         <Rle>   <IRanges> #>   [1]      chr1   0-20000 ---      chr1 20000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly bin ranges — binRanges","title":"Flexibly bin ranges — binRanges","text":"Flexibly bin ranges","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly bin ranges — binRanges","text":"","code":"binRanges(x, binSize, pos = \"center\")  # S4 method for GRanges,numeric,character_OR_numeric_OR_missing binRanges(x, binSize, pos = \"center\")"},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly bin ranges — binRanges","text":"x `GRanges` object binSize Integer (numeric) describing new size range. pos Position within range resize bin. Can character integer vector length 1 `length(x)` designating position element `x`. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly bin ranges — binRanges","text":"`GRanges` object shifted  `pos` assigned bins `binSize`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly bin ranges — binRanges","text":"","code":"library(GenomicRanges)  ## Create example GRanges gr1 <- GRanges(seqnames = \"chr1\",                ranges = IRanges(start = rep(5000,3),                                 end = rep(6000,3)),                strand = c('+', '-', '*'))  gr2 <- gr1 |> promoters(upstream = 2000, downstream = 200)  ## Binning the results binRanges(x = gr1, binSize = 1000, pos = 'start') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 6000-7000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths binRanges(x = gr1, binSize = 1000, pos = 'end') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 6000-7000      + #>   [2]     chr1 5000-6000      - #>   [3]     chr1 6000-7000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths binRanges(x = gr1, binSize = 1000, pos = 'center') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 5000-6000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Bin after shifting back to TSS binRanges(x = gr2, binSize = 1000, pos = 2000) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 6000-7000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate loop enrichment over background. — calcLoopEnrichment","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"Pulls Hi-C pixels calculates enrichment selected foreground (`fg`) selected background (`bg`).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"","code":"calcLoopEnrichment(   x,   files,   fg = selectCenterPixel(mhDist = 1, buffer = 5),   bg = selectTopLeft(n = 4, buffer = 5) + selectBottomRight(n = 4, buffer = 5),   FUN = function(fg, bg) median(fg + 1)/median(bg + 1),   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   ... )  # S4 method for GInteractions,character calcLoopEnrichment(   x,   files,   fg = selectCenterPixel(mhDist = 1, buffer = 5),   bg = selectTopLeft(n = 4, buffer = 5) + selectBottomRight(n = 4, buffer = 5),   FUN = function(fg, bg) median(fg + 1)/median(bg + 1),   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   ... )"},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"x GInteractions object. files Character file paths `.hic` files. fg Integer vector matrix indices foreground. bg Integer vector matrix indices background. FUN Function taking two parameters (.e., `fg`, `bg`) defining enrichment calculated. Must produce single value (numeric length one). nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. BPPARAM Parallelization params (passed `BiocParallel::bplapply()`). Default result `BiocParallel::bpparams()`. Parallel processing available `=interactions`. ... Additional arguments passed `pullHicMatrices`. See ?[`pullHicMatrices`].","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"DelayedMatrix enrichment scores  rows interactions (.e. loops)  columns Hi-C files.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loops as GInteractions object loops <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Expand binSize of loops loops <- binPairs(x=loops, binSize=100e3)  ## Calculate loop enrichment calcLoopEnrichment(x=loops[1:10],                    files=hicFiles) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselected #>                                   #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <10 x 2> matrix of class DelayedMatrix and type \"double\": #>       LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #>  [1,]                   1.0000000                   1.6666667 #>  [2,]                   1.0000000                   1.4000000 #>  [3,]                   1.5789474                   2.1666667 #>  [4,]                   1.3333333                   1.0000000 #>  [5,]                   0.7368421                   0.7777778 #>  [6,]                   1.3333333                   1.0000000 #>  [7,]                   0.7500000                   1.0000000 #>  [8,]                   1.7647059                   1.4482759 #>  [9,]                   0.8181818                   0.9090909 #> [10,]                   0.3333333                   0.8000000  ## Customize different foreground/background ## with selection functions buffer <- 10 # choose pixel radius around center fg <- selectCenterPixel(mhDist=seq(0,4), buffer=buffer) bg <- selectCorners(n=6, buffer=buffer) +     selectOuter(n=2, buffer=buffer) calcLoopEnrichment(x=loops[1:10],                    files=hicFiles,                    fg=fg,                    bg=bg) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselectedeading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <10 x 2> matrix of class DelayedMatrix and type \"double\": #>       LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #>  [1,]                    2.500000                    2.000000 #>  [2,]                    2.666667                    3.500000 #>  [3,]                    2.000000                    2.500000 #>  [4,]                    2.000000                    1.500000 #>  [5,]                    2.666667                    3.000000 #>  [6,]                    3.000000                    2.500000 #>  [7,]                    1.500000                    1.500000 #>  [8,]                    6.000000                    4.500000 #>  [9,]                    2.333333                    1.250000 #> [10,]                    1.000000                    1.000000"},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"GInteractions object containing pixels interest resized `` resolution (already), count matrices extracted interaction Hi-C file using new `` resolution. Count matrices aggregated interactions supplied `aggFUN`, new pixel selected supplied `selectFUN`. large datasets, increase `nBlocks` allow smaller blocks data processed memory.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"","code":"changePixelRes(   x,   files,   from,   to,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE,   norm = \"KR\",   half = \"upper\",   ... )  # S4 method for GInteractions,character changePixelRes(   x,   files,   from,   to,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE,   norm = \"KR\",   half = \"upper\",   ... )"},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"x GInteractions object. files Character file paths `.hic` files. Number (length one numeric vector) describing resolution `x`. Data binned value already binned. Number (length one numeric vector) describing new resolution pixels. aggFUN Function use aggregating across Hi-C files. Must passable `.max` `.min`. Default \"sum\". selectFUN Function use selecting among aggregated interactions. Must one \".max\" \".min\". nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. Default TRUE. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. ... Additional arguments passed `pullHicMatrices()`. See ?[`pullHicMatrices`].","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"GInteractions object updated  pixel interactions, along column  aggregated max/min value pixel.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loops as GInteractions object loops <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Rebin loops to 2.5e6 resolution loops <- binPairs(x=loops, binSize=2.5e06)  ## Change pixel resolution from 2.5e6 to 500e3 changePixelRes(x=loops[1:5],                files=hicFiles,                from=2.5e6,                to=500e3) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> GInteractions object with 5 interactions and 1 metadata column: #>       seqnames1             ranges1     seqnames2             ranges2 | #>           <Rle>           <IRanges>         <Rle>           <IRanges> | #>   [1]         9   14500000-15000000 ---         9   14500000-15000000 | #>   [2]         9   89500000-90000000 ---         9   89500000-90000000 | #>   [3]         9   23500000-24000000 ---         9   23500000-24000000 | #>   [4]         9 128500000-129000000 ---         9 128500000-129000000 | #>   [5]         9 113000000-113500000 ---         9 113000000-113500000 | #>           value #>       <numeric> #>   [1]   543.407 #>   [2]   503.798 #>   [3]   464.689 #>   [4]   719.754 #>   [5]   540.652 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"Access count matrices InteractionArray InteractionMatrix Access count matrices InteractionArray InteractionMatrix Replace method counts","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"","code":"# S4 method for InteractionArray counts(object, showDimnames = FALSE)  # S4 method for InteractionMatrix counts(object)  # S4 method for InteractionMatrix counts(object) <- value"},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"object InteractionMatrix object showDimnames Logical vector length-one indicating whether show dimensions count matrices (default FALSE). applicable InteractionArray objects. value Value replacement","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"InteractionArray, 4-dimensional  DelayedArray Hi-C submatrices returned  following dimensions: rows count matrix,  columns count matrix, Interactions `object`,  Hi-C `files`. InteractionMatrix, 2-dimensional  DelayedArray returned rows representing  interactions `object` columns Hi-C  file `files`. InteractionMatrix, replace matrix  replaces counts assay matrix-like  objects supplied `value`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"","code":"###################################### ## Accessing Hi-C count submatrices ## ######################################  ## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Create example interactions x <- read.table(text=\"         9 14435000 14490000 9 14740000 14795000         9 89540000 89595000 9 89785000 89840000         9 23700000 23755000 9 23760000 23815000\") x <- as_ginteractions(x)  ## Extract 3, 11x11 count matrices from 2 hic files iarr <- pullHicMatrices(x, hicFiles, 5e03)  ## Access count matrices counts(iarr) #> <11 x 11 x 3 x 2> array of class DelayedArray and type \"double\": #> ,,1,LEUK_HEK_PJA27_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  #> ... #>  #> ,,3,LEUK_HEK_PJA30_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  counts(iarr, FALSE) #> <11 x 11 x 3 x 2> array of class DelayedArray and type \"double\": #> ,,1,LEUK_HEK_PJA27_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  #> ... #>  #> ,,3,LEUK_HEK_PJA30_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>   ################################# ## Accessing Hi-C count matrix ## #################################  ## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files iarr <- pullHicPixels(x, hicFiles, 500e03)  ## Access count matrix counts(iarr) #> <3 x 2> matrix of class DelayedMatrix and type \"double\": #>      LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #> [1,]                          49                          38 #> [2,]                         314                         300 #> [3,]                         258                         187  ################################# ## Replacing Hi-C count matrix ## #################################  ## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files imat <- pullHicPixels(x, hicFiles, 500e03)  ## Realize as in-memory matrix counts(imat) <- as.matrix(counts(iarr)) counts(imat) #>      LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #> [1,]                          49                          38 #> [2,]                         314                         300 #> [3,]                         258                         187 imat #> class: InteractionMatrix  #> dim: count matrix with 3 interactions and 2 file(s) #> metadata(3): binSize norm matrix #> assays(1): counts #> rownames: NULL #> rowData names(0): #> colnames(2): LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #> colData names(2): files fileNames #> type: GInteractions #> regions: 4"},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clustered pairs from MergedGInteractions object — getPairClusters","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"Returns clustered pairs associated range `MergedGInteractions` object. Order always follows indices `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"","code":"getPairClusters(x, ...)  # S4 method for MergedGInteractions getPairClusters(x)"},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"x MergedGInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"list data.tables cooresponding pair  `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <-     system.file(\"extdata\", package = \"mariner\") |>     list.files(pattern = \"Loops.txt\", full.names = TRUE)  ## Read in the first 1000 rows of bedpeFiles giList <-     lapply(bedpeFiles, fread, nrows = 1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  ## Access pair clusters getPairClusters(x[1:3]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:   1 #>  #> [[2]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394   1 #>  #> [[3]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146   1 #>  getPairClusters(x[3:1]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146   1 #>  #> [[2]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394   1 #>  #> [[3]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:   1 #>  getPairClusters(x[c(3, 1, 2)]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146   1 #>  #> [[2]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:   1 #>  #> [[3]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394   1 #>  getPairClusters(x) |> length() #> [1] 1681"},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":null,"dir":"Reference","previous_headings":"","what":"HDF5-backed blockApply — hdf5BlockApply","title":"HDF5-backed blockApply — hdf5BlockApply","text":"Read array data blocks, apply function, write back HDF5 file.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HDF5-backed blockApply — hdf5BlockApply","text":"","code":"hdf5BlockApply(x, FUN, sink, grid, sink_grid, verbose = TRUE)  # S4 method for DelayedArray hdf5BlockApply(x, FUN, sink, grid, sink_grid, verbose = TRUE)"},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HDF5-backed blockApply — hdf5BlockApply","text":"x Delayed Array object. FUN Function takes one argument 'block' processes . sink HDF5RealizationSink object. grid ArrayGrid array `x`. sink_grid ArrayGrid `sink`. verbose Logical - whether block processing progress displayed.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HDF5-backed blockApply — hdf5BlockApply","text":"HDF5Array object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HDF5-backed blockApply — hdf5BlockApply","text":"Implements HDF5-backed option block processing DelayedArray objects.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HDF5-backed blockApply — hdf5BlockApply","text":"","code":"## ################################################ ## This function is intended for advanced users. ## To learn more about using DelayedArray ## or HDF5-backed objects, see ?DelayedArray or ## ?HDF5Array ###################################################  library(DelayedArray) #> Loading required package: Matrix #>  #> Attaching package: ‘Matrix’ #> The following object is masked from ‘package:S4Vectors’: #>  #>     expand #>  #> Attaching package: ‘DelayedArray’ #> The following objects are masked from ‘package:base’: #>  #>     apply, rowsum, scale, sweep library(HDF5Array) #> Loading required package: rhdf5 #>  #> Attaching package: ‘HDF5Array’ #> The following object is masked from ‘package:rhdf5’: #>  #>     h5ls library(rhdf5)  ## Create example array that is longer in the ## 3rd dimension (representing interactions) dims <- c(11L, 11L, 100L, 2L) a <- array(data=seq(1, prod(dims)), dim=dims) a <- DelayedArray(a)  ## Define spacings, breaking up the longest dim ## Here we are processing in blocks of 10 spacings <- dim(a) spacings[3] <- ceiling(spacings[3]/10)  ## Define storage dimensions (all except those ## over which the function is being applied) storageDims <- dims[c(1,2,3)]  ## Define chunk dimensions for writing to HDF5 chunkDims <- storageDims chunkDims[3] <- spacings[3]  ## Create grid for applying the data (grid) ## and grid for writing to the sink (sink_grid) grid <- RegularArrayGrid(dims, spacings) sink_grid <- RegularArrayGrid(storageDims, chunkDims)  ## Create HDF5 file for writing h5 <- tempfile(fileext = \".h5\") h5createFile(h5)  ## Define compression for HDF5 compressionLevel <- 0  ## Create HDF5-backed realization sink sink <- HDF5RealizationSink(filepath=h5,                             name=\"counts\",                             type=\"integer\",                             dim=storageDims,                             chunkdim=chunkDims,                             level=compressionLevel)  ## Wrap function that operates on each block ## this can be anything, here it is sum FUN <- \\(block) apply(block, c(1,2,3), sum)  ## Read, apply, and write to HDF5 ans <- hdf5BlockApply(x=a,                       FUN=FUN,                       sink=sink,                       grid=grid,                       sink_grid=sink_grid,                       verbose=TRUE) #> / Reading and realizing block 1/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 6/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 7/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 8/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 9/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 10/10 ...  #> OK #> \\ Processing it ...  #> OK ans #> <11 x 11 x 100> array of class HDF5Array and type \"integer\": #> ,,1 #>        [,1]  [,2]  [,3]  [,4] ...  [,8]  [,9] [,10] [,11] #>  [1,] 12102 12124 12146 12168   . 12256 12278 12300 12322 #>  [2,] 12104 12126 12148 12170   . 12258 12280 12302 12324 #>   ...     .     .     .     .   .     .     .     .     . #> [10,] 12120 12142 12164 12186   . 12274 12296 12318 12340 #> [11,] 12122 12144 12166 12188   . 12276 12298 12320 12342 #>  #> ... #>  #> ,,100 #>        [,1]  [,2]  [,3]  [,4] ...  [,8]  [,9] [,10] [,11] #>  [1,] 36060 36082 36104 36126   . 36214 36236 36258 36280 #>  [2,] 36062 36084 36106 36128   . 36216 36238 36260 36282 #>   ...     .     .     .     .   .     .     .     .     . #> [10,] 36078 36100 36122 36144   . 36232 36254 36276 36298 #> [11,] 36080 36102 36124 36146   . 36234 36256 36278 36300 #>"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"Initialization method DelegatingGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"","code":"# S4 method for DelegatingGInteractions initialize(.Object, ..., delegate = GInteractions())"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":".Object GInteractions object ... Additional arguments delegate GInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"DelegatingGInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"Initialize MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"","code":"# S4 method for MergedGInteractions initialize(.Object, ..., delegate = GInteractions())"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":".Object GInteractions object ... Additional arguments delegate GInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sets of paired interactions — mergePairs","title":"Merge sets of paired interactions — mergePairs","text":"Sets paired range objects (.e., `GInteractions`) first clustered genomic distance `dbscan`, representative interaction selected cluster.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sets of paired interactions — mergePairs","text":"","code":"mergePairs(   x,   radius,   method = \"manhattan\",   column = NULL,   selectMax = TRUE,   pos = \"center\" )  # S4 method for list_OR_SimpleList_OR_GInteractions,numeric mergePairs(   x,   radius,   method = \"manhattan\",   column = NULL,   selectMax = TRUE,   pos = \"center\" )"},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sets of paired interactions — mergePairs","text":"x List `GInteractions` `data.frame`-like objects. radius Numeric describing distance base pairs used define cluster pairs. method Character describing distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. Default \"manhattan\". column Character denoting column used select among clustered interactions. selectMax Logical. TRUE (default) uses `.max()` select interaction pair. FALSE uses `.min()`. applicable `column` specified. pos Positions used clustering pairs. Must one \"start\", \"end\" \"center\". Default \"center\".","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sets of paired interactions — mergePairs","text":"Returns `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge sets of paired interactions — mergePairs","text":"Interactions clustered groups using provided base pair `radius`, distance `method` `dbscan()`. Representative interactions selected group one two methods. `column` `selectMax` arguments provided, representative interaction maximum (minimum) value `column` returned cluster. parameters missing, new ranges pair returned calculating median modes cluster.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge sets of paired interactions — mergePairs","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <-     system.file(\"extdata\", package = \"mariner\") |>     list.files(pattern = \"Loops.txt\", full.names = TRUE)  giList <-     lapply(bedpeFiles, fread) |>     lapply(as_ginteractions)  x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\") x #> MergedGInteractions object with 16716 interactions and 9 metadata columns: #>           seqnames1             ranges1     seqnames2             ranges2 | #>               <Rle>           <IRanges>         <Rle>           <IRanges> | #>       [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>       [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>       [3]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>       [4]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>       [5]      chr9 108380000-108385000 ---      chr9 108475000-108480000 | #>       ...       ...                 ... ...       ...                 ... . #>   [16712]     chr17   71425000-71430000 ---     chr17   72170000-72175000 | #>   [16713]     chr17   28450000-28455000 ---     chr17   28660000-28665000 | #>   [16714]     chr17   65375000-65380000 ---     chr17   65685000-65690000 | #>   [16715]     chr17   77710000-77715000 ---     chr17   77965000-77970000 | #>   [16716]     chr17   46880000-46885000 ---     chr17   46955000-46960000 | #>                 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #>           <character>  <numeric>               <numeric>     <numeric> #>       [1]       0,0,0    2.61103                0.986044       1.41438 #>       [2]       0,0,0    2.45301                0.982802       1.54370 #>       [3]       0,0,0    3.40635                0.996545       1.80221 #>       [4]       0,0,0    2.09352                0.946897       1.40194 #>       [5]       0,0,0    2.14182                0.936547       1.41005 #>       ...         ...        ...                     ...           ... #>   [16712]       0,0,0    4.05887                0.997252       2.12187 #>   [16713]       0,0,0    4.47565                0.995379       2.49118 #>   [16714]       0,0,0    3.91395                0.996974       2.83091 #>   [16715]       0,0,0    3.39028                0.979869       2.42961 #>   [16716]       0,0,0    3.89043                0.982768       2.73390 #>           Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2       avg       std #>                        <numeric>              <numeric> <numeric> <numeric> #>       [1]               1.875585                2.12164   2.60512  0.794220 #>       [2]               1.491568                1.60777   2.73756  0.856876 #>       [3]               3.768934                3.89112   4.49898  1.492786 #>       [4]               0.818514                1.10611   2.20826  0.589976 #>       [5]               0.907892                1.01824   1.95072  0.543293 #>       ...                    ...                    ...       ...       ... #>   [16712]               2.484298                3.15533   3.68911  1.144096 #>   [16713]               2.181075                2.63508   3.43889  0.827104 #>   [16714]               1.091847                1.96232   4.83071  0.753955 #>   [16715]               1.139229                1.15973   2.89326  0.589743 #>   [16716]               0.906871                1.43305   3.25531  0.368257 #>               value #>           <numeric> #>       [1]   4.27231 #>       [2]   4.06339 #>       [3]   7.84915 #>       [4]   2.93583 #>       [5]   2.75773 #>       ...       ... #>   [16712]   5.89737 #>   [16713]   5.37762 #>   [16714]   5.80124 #>   [16715]   3.90591 #>   [16716]   4.06142 #>   ------- #>   regions: 27152 ranges and 0 metadata columns #>   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"Method parallel slots MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"","code":"# S4 method for MergedGInteractions parallel_slot_names(x)"},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"x See ? parallel_slot_names","code":""},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"MergedGInteractions parallel slots","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"Returns file path describing -disk HDF5 data associated InteractionMatrix object stored. method circumvents `assays<-` `path<-` methods updating HDF5 path accessible file path broken.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"","code":"# S4 method for InteractionMatrix path(object)  # S4 method for InteractionMatrix path(object) <- value"},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"object InteractionMatrix object value String (length-one character vector) use path replacement.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"path HDF5 file associated  InteractionMatrix object. Updates path HDF5 file  InteractionMatrix object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"file longer exists, path returned along warning. allows file path updated even original linked data longer exists.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"","code":"################################# ## Accessing path to HDF5 data ## #################################  ## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files imat <- pullHicPixels(x, hicFiles, 500e03)  ## Access path path(imat) #> [1] \"/tmp/Rtmp80NAwA/file79e92dfd1a8a.h5\"  ################################# ## Updating path to HDF5 data ## ################################  ## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files h5File <- tempfile(fileext=\".h5\") imat <- pullHicPixels(x, hicFiles, 500e03, h5File=h5File)  ## Move file to new location newFile <- tempfile(fileext=\"_new.h5\") file.rename(from=h5File, to=newFile) #> [1] TRUE  ## Update path path(imat) <- newFile path(imat) #> [1] \"/tmp/Rtmp80NAwA/file79e956061f67_new.h5\""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand pixels to submatrices — pixelsToMatrices","title":"Expand pixels to submatrices — pixelsToMatrices","text":"Pixels defined paired-ranges starts & ends equal `binSize`. function takes GInteractions fitting description expands ranges `buffer` pixels around range.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand pixels to submatrices — pixelsToMatrices","text":"","code":"pixelsToMatrices(x, buffer)  # S4 method for GInteractions,numeric pixelsToMatrices(x, buffer)"},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand pixels to submatrices — pixelsToMatrices","text":"x GInteractions object. buffer Number (length one numeric vector) pixels around pixels `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand pixels to submatrices — pixelsToMatrices","text":"`x` updated ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expand pixels to submatrices — pixelsToMatrices","text":"example, buffer 3 return GInteractions object 3 pixels surrounding original pixel ranges. using `pullHicMatrices()`, result return matrix row column dimensions buffer*2+1. Note, function handle --bound ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand pixels to submatrices — pixelsToMatrices","text":"","code":"## Define example 100bp pixel library(InteractionSet) pixel <- GInteractions(     anchor1=GRanges(\"chr1:500-600\"),     anchor2=GRanges(\"chr1:2000-2100\") )  ## Expand pixel to matrix with ## 3 pixels surrounding the center ## pixel region <- pixelsToMatrices(x=pixel, buffer=3) region #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1   200-900 ---      chr1 1700-2400 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot matrix — plotMatrix","title":"Plot matrix — plotMatrix","text":"Used plot single aggregate matrix aggregate peak analysis.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot matrix — plotMatrix","text":"","code":"plotMatrix(   data,   params = NULL,   x = NULL,   y = NULL,   width = NULL,   height = NULL,   just = c(\"left\", \"top\"),   default.units = \"inches\",   draw = TRUE,   palette = colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\")),   zrange = NULL,   na.color = \"grey\" )  # S4 method for DelayedMatrix_OR_matrix plotMatrix(   data,   params = NULL,   x = NULL,   y = NULL,   width = NULL,   height = NULL,   just = c(\"left\", \"top\"),   default.units = \"inches\",   draw = TRUE,   palette = colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\")),   zrange = NULL,   na.color = \"grey\" )"},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot matrix — plotMatrix","text":"data `DelayedMatrix`, `matrix`, list matrices, 3 column `data.frame` APA results. params Optional `pgParams` object containing relevant function parameters. x Numeric unit object specifying x-location plot. y Numeric unit object specifying y-location plot. width Numeric unit object specifying width plot. height Numeric unit object specifying height plot. just String numeric vector specifying justification viewport relative (x, y) location. default.units String indicating default units use `x`, `y`, `width`, `height` given numeric vectors. draw Logical value indicating whether graphics output produced. palette `colorRampPalette` function use mapping values colors. zrange Vector length 2; max min values set color scale na.color String indicating color use mapping NA values.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot matrix — plotMatrix","text":"Function draw color-mapped matrix  return S3 object class `MatrixPlot`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot matrix — plotMatrix","text":"","code":"library(plotgardener) #>  #> Attaching package: ‘plotgardener’ #> The following object is masked from ‘package:base’: #>  #>     c library(RColorBrewer)  ## Create divergent matrix #### m <- matrix(data=rnorm(n=21*21, mean=0, sd=2), nrow=21, ncol=21)  ## Define parameters p <- pgParams(width=3, height=3, default.units=\"inches\")  ## Create page pageCreate(params=p)  ## Plot apa plot <- plotMatrix(data=m,                    x=p$width/2,                    y=p$height/2,                    width=p$width*0.5, height = p$width*0.5,                    just=c(\"center\", \"center\"),                    palette=colorRampPalette(c(\"blue\", \"white\", \"red\")),                    zrange=NULL) #> MatrixPlot[MatrixPlot1]  ## Annotate legend annoHeatmapLegend(plot=plot,                   x=2.3,                   y=0.75,                   width=0.1,                   height=0.75) #> heatmapLegend[heatmapLegend1]    ## Create sequential matrix m <- matrix(data=sample(0:100, 21*21, replace=TRUE), nrow=21, ncol=21)  ## Define parameters p <- pgParams(width=3, height=3, default.units=\"inches\")  ## Create page pageCreate(params=p)  ## Plot apa plot <- plotMatrix(data=m,                    x=p$width/2,                    y=p$height/2,                    width=p$width*0.5,                    height=p$width*0.5,                    just=c(\"center\", \"center\"),                    palette=colorRampPalette(c(\"white\", \"dark red\")),                    zrange = NULL) #> MatrixPlot[MatrixPlot1]  ## Annotate legend annoHeatmapLegend(plot=plot,                   x=2.3,                   y=0.75,                   width=0.1,                   height=0.75) #> heatmapLegend[heatmapLegend1]"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull submatrices from `.hic` files — pullHicMatrices","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"Pull submatrices `.hic` files","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"","code":"pullHicMatrices(   x,   files,   binSize,   ...,   h5File = tempfile(fileext = \".h5\"),   half = \"both\",   norm = \"NONE\",   matrix = \"observed\",   blockSize = 248956422,   onDisk = TRUE,   compressionLevel = 0,   chunkSize = 1 )  # S4 method for GInteractions,character,numeric pullHicMatrices(   x,   files,   binSize,   h5File,   half,   norm,   matrix,   blockSize,   onDisk,   compressionLevel,   chunkSize )"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"x GInteractions object containing interactions extract Hi-C files. files Character file paths `.hic` files. binSize Integer (numeric) describing resolution (range widths) paired data. ... Additional arguments. h5File Character file path save `.h5` file. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. matrix String (length one character vector) Type matrix extract. Must one \"observed\", \"oe\", \"expected\". \"observed\" observed counts, \"oe\" observed/expected counts, \"expected\" expected counts. blockSize Number (length one numeric vector) describing size base-pairs pull `.hic` file. Default 248956422 (length longest chromosome human hg38 genome). large `.hic` files `blockSize` can reduced conserve amount data read time. Larger `blockSize` values speed performance, use memory. onDisk Boolean (length one logical vector NA) indicating whether extracted data stored disk HDF5 file. Default TRUE. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file. chunkSize Number (length one numeric vector) indicating many values `x` chunk write HDF5 stored data. downstream implications accessing subsets later. small `compressionLevel` values use smaller `chunkSize` values large `compressionLevel` values use large (.e. `length(x)`) values improve performance.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"InteractionSet object 4-dimensional array  Hi-C submatrices, rownames, colnames. Array  stored following dimensions: Interactions `x`,  Hi-C `files`, rows submatrix, columns submatrix.  submatrices returned rows cooresponding anchor1  `x` columns correspond anchor2 `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"","code":"## Read .hic file paths hicFiles <-   system.file(\"extdata/test_hic\", package=\"mariner\") |>   list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loop pixels as GInteractions object pixels <-   system.file(\"extdata\", package=\"mariner\") |>   list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>   read.table(header=TRUE) |>   as_ginteractions(keep.extra.columns=FALSE) |>   binPairs(binSize=100e3)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Expand pixels to regions for pulling ## Hi-C submatrices regions <- pixelsToMatrices(x=pixels, buffer=5)  ## Extract 11x11 count matrices from the ## first 100 regions and 2 Hi-C files iarr <- pullHicMatrices(x=regions[1:100],                         files=hicFiles,                         binSize=100e3) iarr #> class: InteractionArray  #> dim: 100 interaction(s), 2 file(s), 11x11 count matrix(es) #> metadata(3): binSize norm matrix #> assays(3): counts rownames colnames #> rownames: NULL #> rowData names(0): #> colnames(2): LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #> colData names(2): files fileNames #> type: GInteractions #> regions: 12176  ## Access count matrices counts(iarr) #> <11 x 11 x 100 x 2> array of class DelayedArray and type \"double\": #> ,,1,LEUK_HEK_PJA27_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     4     3     4   .     0     0 #>  [2,]     6     9     3   .     2     1 #>   ...     .     .     .   .     .     . #> [10,]     1     1     4   .     2     2 #> [11,]     1     1     0   .     5     2 #>  #> ... #>  #> ,,100,LEUK_HEK_PJA30_inter_30.hic #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     1   .     0     0 #>  [2,]     2     0     0   .     1     1 #>   ...     .     .     .   .     .     . #> [10,]     5     8    32   .     0     5 #> [11,]     2     4     8   .     0     1 #>   ## Display the start bin of each ## interaction in the count ## matrices counts(iarr, showDimnames=TRUE) #> <11 x 11 x 100 x 2> array of class DelayedArray and type \"double\": #> ,,1,LEUK_HEK_PJA27_inter_30.hic #>          14200000 14300000 14400000 ... 15100000 15200000 #> 13900000        4        3        4   .        0        0 #> 14000000        6        9        3   .        2        1 #> 14100000       11        8        4   .        1        1 #> 14200000       38        8        4   .        0        0 #> 14300000        8       31       11   .        0        1 #> 14400000        4       11       35   .        3        2 #> 14500000        4        1       12   .        1        0 #> 14600000        2        0        4   .        3        2 #> 14700000        1        2        6   .        3        3 #> 14800000        1        1        4   .        2        2 #> 14900000        1        1        0   .        5        2 #>  #> ... #>  #> ,,100,LEUK_HEK_PJA30_inter_30.hic #>          16300000 16400000 16500000 ... 17200000 17300000 #> 15600000        0        0        1   .        0        0 #> 15700000        2        0        0   .        1        1 #> 15800000        1        2        1   .        0        1 #> 15900000        2        3        2   .        1        1 #> 16000000        1        2        0   .        1        1 #> 16100000        6        3        2   .        0        0 #> 16200000        4        4        3   .        1        0 #> 16300000       25        8        5   .        0        1 #> 16400000        8       19        8   .        0        0 #> 16500000        5        8       32   .        0        5 #> 16600000        2        4        8   .        0        1"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull contact frequency from `.hic` files — pullHicPixels","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"Pull contact frequency `.hic` files","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"","code":"pullHicPixels(   x,   files,   binSize,   ...,   h5File = tempfile(fileext = \".h5\"),   half = \"both\",   norm = \"NONE\",   matrix = \"observed\",   blockSize = 248956422,   onDisk = TRUE,   compressionLevel = 0,   chunkSize = 1 )  # S4 method for GInteractions,character,numeric pullHicPixels(   x,   files,   binSize,   h5File,   half,   norm,   matrix,   blockSize,   onDisk,   compressionLevel,   chunkSize )"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"x GInteractions object containing interactions extract Hi-C files. files Character file paths `.hic` files. binSize Integer (numeric) describing resolution (range widths) paired data. ... Additional arguments. h5File Character file path save `.h5` file. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. matrix String (length one character vector) Type matrix extract. Must one \"observed\", \"oe\", \"expected\". \"observed\" observed counts, \"oe\" observed/expected counts, \"expected\" expected counts. blockSize Number (length one numeric vector) describing size base-pairs pull `.hic` file. Default 248956422 (length longest chromosome human hg38 genome). large `.hic` files `blockSize` can reduced conserve amount data read time. Larger `blockSize` values speed performance, use memory. onDisk Boolean (length one logical vector NA) indicating whether extracted data stored disk HDF5 file. Default TRUE. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file. chunkSize Number (length one numeric vector) indicating many values `x` chunk write HDF5 stored data. downstream implications accessing subsets later. small `compressionLevel` values use smaller `chunkSize` values large `compressionLevel` values use large (.e. `length(x)`) values improve performance.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"InteractionSet object 2-dimensional array  Hi-C interactions (rows) Hi-C sample (columns).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"","code":"## Read .hic file paths hicFiles <-   system.file(\"extdata/test_hic\", package=\"mariner\") |>   list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loop pixels as GInteractions object pixels <-   system.file(\"extdata\", package=\"mariner\") |>   list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>   read.table(header=TRUE) |>   as_ginteractions(keep.extra.columns=FALSE) |>   binPairs(binSize=100e3)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Extract the first 100 pixels imat <- pullHicPixels(x=pixels[1:100],                       files=hicFiles,                       binSize=100e3) imat #> class: InteractionMatrix  #> dim: count matrix with 100 interactions and 2 file(s) #> metadata(3): binSize norm matrix #> assays(1): counts #> rownames: NULL #> rowData names(0): #> colnames(2): LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #> colData names(2): files fileNames #> type: GInteractions #> regions: 12176  ## Access count matrix counts(imat) #> <100 x 2> matrix of class DelayedMatrix and type \"double\": #>        LEUK_HEK_PJA27_inter_30.hic LEUK_HEK_PJA30_inter_30.hic #>   [1,]                           6                           4 #>   [2,]                           6                           6 #>   [3,]                          33                          30 #>   [4,]                           3                           2 #>   [5,]                           6                           6 #>    ...                           .                           . #>  [96,]                           3                           1 #>  [97,]                           2                           1 #>  [98,]                           2                           1 #>  [99,]                          10                           7 #> [100,]                           3                           5"},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"Get pixel representing strongest weakest interaction InteractionArray","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"","code":"selectPixel(   x,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE )  # S4 method for InteractionArray selectPixel(   x,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE )"},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"x InteractionArray object aggFUN Function use aggregating across Hi-C files. Must passable `.max` `.min`. Default \"sum\". selectFUN Function use selecting among aggregated interactions. Must one \".max\" \".min\". nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. Default TRUE.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"GInteractions object updated  pixel interactions, along column  aggregated max/min value pixel.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"","code":"## Read .hic file paths hicFiles <-     system.file(\"extdata/test_hic\", package=\"mariner\") |>     list.files(pattern=\".hic\", full.names=TRUE)  ## Read in loops as GInteractions object loops <-     system.file(\"extdata\", package=\"mariner\") |>     list.files(pattern=\"WT.*Loops.txt\", full.names=TRUE) |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE)  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Rebin loops to 2.5e6 resolution loops <- binPairs(x=loops, binSize=2.5e06)  ## Pull 5x5 matrices iarr <- pullHicMatrices(x=loops[1:5],                         files=hicFiles,                         binSize=500e3,                         norm=\"KR\",                         half='upper')  ## Select pixel selectPixel(iarr) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> GInteractions object with 5 interactions and 1 metadata column: #>       seqnames1             ranges1     seqnames2             ranges2 | #>           <Rle>           <IRanges>         <Rle>           <IRanges> | #>   [1]         9   14500000-15000000 ---         9   14500000-15000000 | #>   [2]         9   89500000-90000000 ---         9   89500000-90000000 | #>   [3]         9   23500000-24000000 ---         9   23500000-24000000 | #>   [4]         9 128500000-129000000 ---         9 128500000-129000000 | #>   [5]         9 113000000-113500000 ---         9 113000000-113500000 | #>           value #>       <numeric> #>   [1]   543.407 #>   [2]   503.798 #>   [3]   464.689 #>   [4]   719.754 #>   [5]   540.652 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize selection for a MatrixSelection object — selectRadius","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"Note: buffer must selection functions work appropriately `selectCoordinates`, `rowInd` `colInd` paired selected position matrix `c(rowInd[1:], colInd[1:j])` `` rows `j` columns.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"","code":"selectRadius(x, buffer, invert = FALSE)  selectCenterPixel(mhDist, buffer, invert = FALSE)  selectSubmatrix(m, invert = FALSE)  selectCoordinates(rowInd, colInd, buffer, invert = FALSE)  selectBlock(rowInd, colInd, buffer, invert = FALSE)  selectTopLeft(n, buffer, inset = 0, invert = FALSE)  selectTopRight(n, buffer, inset = 0, invert = FALSE)  selectBottomRight(n, buffer, inset = 0, invert = FALSE)  selectBottomLeft(n, buffer, inset = 0, invert = FALSE)  selectCorners(n, buffer, inset = 0, invert = FALSE)  selectRows(rows, buffer, invert = FALSE)  selectCols(cols, buffer, invert = FALSE)  selectInner(n, buffer, invert = FALSE)  selectOuter(n, buffer, invert = FALSE)  # S4 method for MatrixSelection show(object)  # S4 method for numeric selectRadius(x, buffer, invert = FALSE)  # S4 method for numeric selectCenterPixel(mhDist, buffer, invert = FALSE)  # S4 method for matrix selectSubmatrix(m, invert = FALSE)  # S4 method for numeric selectCoordinates(rowInd, colInd, buffer, invert = FALSE)  # S4 method for numeric selectBlock(rowInd, colInd, buffer, invert = FALSE)  # S4 method for numeric selectTopLeft(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectTopRight(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectBottomRight(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectBottomLeft(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectCorners(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectRows(rows, buffer, invert = FALSE)  # S4 method for numeric selectCols(cols, buffer, invert = FALSE)  # S4 method for numeric selectInner(n, buffer, invert = FALSE)  # S4 method for numeric selectOuter(n, buffer, invert = FALSE)"},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"x Integer vector manhattan distances select. buffer Integer describing number pixels surrounding central pixel. invert Boolean indicating whether invert selection. mhDist Integer vector manhattan distances select along center pixel. m matrix 1's indicating selected positions 0's indicated unselected positions. rowInd Integer describing row indices. colInd Integer describing column indices. n Integer describing number outer pixels select. Must length one. inset Integer describing number pixels inset selection outer edge matrix. Default 0 uses inset. rows Integer describing rows select. cols Integer describing cols select. object MatrixSelection object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"text-based visualization select matrix  indices. Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"","code":"res <- selectCenterPixel(0, 3) show(res) #> '0' = selected; '-' = unselected #>                       #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  0  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  selectRadius(x=c(2,3,4), buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  0  0  0  0  0  -  -  -  #>  -  -  0  0  0  -  0  0  0  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  0  0  0  -  0  0  0  -  -  #>  -  -  -  0  0  0  0  0  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCenterPixel(0, 5) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectSubmatrix(m = matrix(rep(c(1,0,1), 3), nrow=3, ncol=3)) #> '0' = selected; '- ' = unselected #>           #>  0  0  0  #>  -  -  -  #>  0  0  0  #> [1] 1 3 4 6 7 9 selectCoordinates(rowInd=1:3, colInd=1:3, buffer=5) #> '0' = selected; '-' = unselected #>                                   #>  0  -  -  -  -  -  -  -  -  -  -  #>  -  0  -  -  -  -  -  -  -  -  -  #>  -  -  0  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBlock(rowInd=1:3, colInd=1:3, buffer=5) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectTopLeft(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectTopRight(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBottomRight(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBottomLeft(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCorners(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectRows(rows=1:3, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  0  0  0  0  0  0  0  0  0  0  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCols(cols=1:3, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  selectInner(n=1, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectOuter(n=1, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  0  0  0  0  0  0  0  0  0  0"},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Get selectionMethod from MergedGInteractions object — selectionMethod","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"Get selectionMethod MergedGInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"","code":"selectionMethod(x, ...)  # S4 method for MergedGInteractions selectionMethod(x, ...)"},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"x MergedGInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"character vector describing selection  method used merging.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <-     system.file(\"extdata\", package = \"mariner\") |>     list.files(pattern = \"Loops.txt\", full.names = TRUE)  giList <-     lapply(bedpeFiles, fread) |>     lapply(as_ginteractions)  x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  selectionMethod(x) #> Select by column 'APScoreAvg'"},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly shifting GRanges according to strand — shiftRanges","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"Flexibly shifting GRanges according strand","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"","code":"shiftRanges(x, pos)  # S4 method for GRanges,character_OR_numeric shiftRanges(x, pos)"},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"x GRanges object pos Position within anchors resize bin. Can character integer vector length 1 `length(x)` designating position element bedpe. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"GRanges object single position range  shifted appropriately.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"","code":"library(GenomicRanges)  ## Create example GRanges gr1 <- GRanges(seqnames = \"chr1\",                ranges = IRanges(start = rep(5000,3),                                 end = rep(6000,3)),                strand = c('+', '-', '*'))  gr2 <- gr1 |> promoters(upstream = 2000, downstream = 200)  ## Shifting anchors by keyword shiftRanges(gr1, 'start') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5000      + #>   [2]     chr1      6000      - #>   [3]     chr1      5000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, 'end') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      6000      + #>   [2]     chr1      5000      - #>   [3]     chr1      6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, 'center') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5500      + #>   [2]     chr1      5500      - #>   [3]     chr1      5500      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Shifting anchors by position shiftRanges(gr1, 100) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5100      + #>   [2]     chr1      5900      - #>   [3]     chr1      5100      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, c(100, 200, 300)) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5100      + #>   [2]     chr1      5800      - #>   [3]     chr1      5300      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Shifting back to TSS shiftRanges(gr2, 2000) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5000      + #>   [2]     chr1      6000      - #>   [3]     chr1      5000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":null,"dir":"Reference","previous_headings":"","what":"Snap GRanges or GInteractions to nearest bins — snapToBins","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"Snap GRanges GInteractions nearest bins Snap paired-objects nearest bins","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"","code":"snapToBins(x, binSize)  # S4 method for GRanges,numeric snapToBins(x, binSize)  # S4 method for GInteractions,numeric snapToBins(x, binSize)"},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"x `GInteractions` object. binSize Integer (numeric) describing new size range.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"GRanges object snapped nearest `binSize`. Input object snapped nearest `binSize`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"","code":"library(GenomicRanges) ## Example GRanges object x <- GRanges(seqnames = c(\"chr1\"),              ranges = IRanges(start = c(1, 1, 25, 19, 21),                               end = c(15, 11, 31, 31, 39)))  snapToBins(x, binSize = 5) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-15      * #>   [2]     chr1      0-10      * #>   [3]     chr1     25-30      * #>   [4]     chr1     20-30      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 10) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-20      * #>   [2]     chr1      0-10      * #>   [3]     chr1     20-30      * #>   [4]     chr1     20-30      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 20) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-20      * #>   [2]     chr1      0-20      * #>   [3]     chr1     20-40      * #>   [4]     chr1     20-40      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  library(InteractionSet) ## Sample GInteractions object x <- GInteractions(anchor1 = c(GRanges(\"chr1:1-15\"),                                GRanges(\"chr1:1-11\")),                    anchor2 = c(GRanges(\"chr1:25-31\"),                                GRanges(\"chr1:19-31\")))  snapToBins(x, binSize = 5) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-15 ---      chr1     25-30 #>   [2]      chr1      0-10 ---      chr1     20-30 #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 10) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-20 ---      chr1     20-30 #>   [2]      chr1      0-10 ---      chr1     20-30 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 20) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-20 ---      chr1     20-40 #>   [2]      chr1      0-20 ---      chr1     20-40 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor for sources — sources","title":"Accessor for sources — sources","text":"Access names source files `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor for sources — sources","text":"","code":"sources(x)  # S4 method for MergedGInteractions sources(x)"},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor for sources — sources","text":"x MergedGInteractions object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor for sources — sources","text":"character vector names source  files `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessor for sources — sources","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  loopFiles <-     list.files(path = system.file(\"extdata\", package = \"mariner\"),                pattern = \"Loops.txt\",                full.names = TRUE)  giList <-     lapply(loopFiles, fread) |>     lapply(as_ginteractions)  x <- mergePairs(x = giList,                 radius = 10e03)  sources(x) #> [1] \"1\" \"2\""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset MergedGInteractions by source — subsetBySource","title":"Subset MergedGInteractions by source — subsetBySource","text":"Returns subset MergedGInteractions belong input source object (see `sources(x)`). source pairs come object, corresponding merged pair returned. However, least one source pair comes different object, merged pair returned.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset MergedGInteractions by source — subsetBySource","text":"","code":"subsetBySource(x, include, exclude)  # S4 method for MergedGInteractions,missing,missing subsetBySource(x)  # S4 method for MergedGInteractions,character_OR_missing,missing subsetBySource(x, include)  # S4 method for MergedGInteractions,missing,character_OR_missing subsetBySource(x, exclude)  # S4 method for MergedGInteractions,character_OR_missing,character_OR_missing subsetBySource(x, include, exclude)"},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset MergedGInteractions by source — subsetBySource","text":"x MergedGInteractions object. include (Optional) character vector sources pair must present. list available sources use `sources(x)`. exclude (Optional) character vector sources pair must absent. list available sources use `sources(x)`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset MergedGInteractions by source — subsetBySource","text":"list subsetted `MergedGInteractions` objects  `MergedGInteractions` object (`include` / `exclude` used).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset MergedGInteractions by source — subsetBySource","text":"Optional `include` `exclude` parameters modulate behaveior `subsetBySource` return different subsets originating pairs. example, `include` requires returned pairs present specific sources, `exclude` requires returned pairs absent specific sources. Sources listed either `include` `exclude` ignored (may may ) present returned `MergedGInteractions` object. `include` `exclude` can used indepedently combination return every possible set. sources used `include` `exclude` function return 0-length MergedGInteractions object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset MergedGInteractions by source — subsetBySource","text":"","code":"## Load required packages library(GenomicRanges) library(InteractionSet)  ## Define example anchor regions gr1 <-     GRanges(seqnames = \"chr1\",             ranges = IRanges(start = c(30,40,40,70,80),                              end = c(40,50,50,80,90))) gr2 <-     GRanges(seqnames = \"chr1\",             ranges = IRanges(start = c(30,30,50,10,30),                              end = c(40,40,60,20,40)))  ## Form GInteractions and split into two files giList <- split(x = GInteractions(gr1, gr2),                 f = c(rep(1,3), rep(2,2)))  ## Merge pairs x <- mergePairs(x = giList, radius = 20)  subsetBySource(x) #> $`2` #> MergedGInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1     70-80 ---      chr1     10-20 #>   [2]      chr1     80-90 ---      chr1     30-40 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths #>  #> $`1` #> MergedGInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1     40-50 ---      chr1     30-40 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths #>"},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-0990","dir":"Changelog","previous_headings":"","what":"mariner 0.99.0","title":"mariner 0.99.0","text":"Bug fixes improvements: Improve dispatch speed mergePairs() removing S4 method dispatch arguments just x radius. Fix bug mergePairs() pairs altered mean mode transformation. Now original pairs preserved accessed getPairClusters(). Set replace method counts<- accessor InteractionMatrix objects. Helpful converting DelayedMatrix matrix. Update pixelsToMatrix preserve metadata columns include additional tests. Add plotMatrix() function plotting matrix data heatmap. Useful visualizing DelayedMatrices pullHicMatrices() aggHicMatrices(). Compatible plotgardener package. Allow plotMatrix() accept na.color Bug fix mergePairs() allows columns named “radius” /“method”. Swap “binSize” “files” argument order pullHicPixels pullHicMatrices Allow pullHicPixels overwrite existing HDF5 files. Validity checks functions access/update HDF5 paths InteractionMatrix objects, even paths broken. Add temporary plotBullseye function. Selection functions selecting indices matrix: selectCenterPixel selectRadius selectSubmatrix selectCoordinates selectBlock selectTopLeft selectTopRight selectBottomRight selectBottomLeft selectCorners selectRows selectCols selectInner selectOuter calcLoopEnrichment function flexibly calculating enrichment interactions compared local background. adjustEnrichment plotEnrichment adjusting loop enrichment remove effect loop size enrichment visualize correction across chosen parameters.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-020","dir":"Changelog","previous_headings":"","what":"mariner 0.2.0","title":"mariner 0.2.0","text":"Methods pulling Hi-C pixels matrices .hic files storing -disk HDF5Array DelayedArray.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"overview-of-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Overview of functionality","title":"mariner 0.2.0","text":"New updated functions: snapToBins() “snaps” ranges GInteractions objects nearest bin boundary. Allows spanning multiple bins. pullHicPixels() extracts contact frequency .hic files returns InteractionMatrix object containing matrix Hi-C interactions (rows) samples (columns). Includes counts() accessor matrix. Custom show() method. rbind() cbind() methods. pullHicMatrices() extracts submatrices contact frequency .hic files returns InteractionArray object containing 4-dimensional array Hi-C submatrices, rownames, colnames. Includes counts() accessor submatrices. Custom show() method. rbind() cbind() methods. pixelsToMatrices() takes GInteractions containing single pixels (.e., range represents one binSize) expands ranges buffer pixels around range. changePixelRes() takes GInteractions object containing pixels interest resized resolution/binSize (already). count matrices extracted interaction .hic file using new resolution. Count matrices aggregated interactions supplied aggFUN new pixel selected supplied selectFUN. Allows block processing large datasets. object returned GInteractions object updated pixel ranges along column containing aggregated min/max value pixel. calcLoopEnrichment() pulls Hi-C pixels calculates enrichment background returning DelayedMatrix enrichment scores rows interactions columns Hi-C files. Accessors GInteractions objects seqnames1(), start1(), end1(), seqnames2(), start2(), end2().","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-010","dir":"Changelog","previous_headings":"","what":"mariner 0.1.0","title":"mariner 0.1.0","text":"First pre-release mariner functionality focused manipulating, clustering, merging paired interactions.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"overview-of-functionality-0-1-0","dir":"Changelog","previous_headings":"","what":"Overview of functionality","title":"mariner 0.1.0","text":"Conversion paired-range data GInteractions as_ginteractions/makeGInteractionsFromDataFrame Functions manipulating GInteractions GRanges objects binPairs, binRanges, shiftRanges. Functions clustering merging lists GInteractions objects mergePairs. Extensions GInteractions class MergedGInteractions, DelegatingGInteractions. Accessor functions MergedGInteractions: Aggregate metadata columns clustered interactions. Return interactions cluster interactions. Method used select pairs cluster interactions. List names (indices) used input clustering merging. Return interactions unique source combination sources.","code":""}]
