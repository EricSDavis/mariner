[{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Our Pledge","title":"Our Pledge","text":"interest fostering open welcoming environment, contributors maintainers pledge make participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Our Pledge","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Our Pledge","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Our Pledge","text":"Code Conduct applies within project spaces, also applies individual representing project community public spaces. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Our Pledge","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting authors package. uncomfortable reporting package authors, incidents can also reported members Bioconductor Project core team. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"http://ericscottdavis.com/mariner/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Our Pledge","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"why-mariner","dir":"Articles","previous_headings":"","what":"Why mariner?","title":"Introduction to mariner","text":"Disruption aberrant formation chromatin interactions can result developmental abnormalities disease. Therefore, deriving biological insights 3D chromatin structure experiments, Hi-C Micro-C, essential understanding correcting human disease. mariner R/Bioconductor package exploring 3D chromatin structure data Hi-C Micro-C experiments. enables users flexibly manipulate, extract, aggregate chromatin interaction data quickly efficiently. One ecosystemmariner extends common Bioconductor classes, leveraging thousands existing tools analyzing visualizing genomic data. Modular designmariner's functions can combined chained various ways produce custom workflows. Fast efficientmariner leverages HDF5 store large results uses block processing minimize hardware requirements.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to mariner","text":"package can installed Bioconductor: development version can installed via GitHub:","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"mariner\") if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"EricSDavis/mariner\")"},{"path":[]},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"manipulating-paired-ranges","dir":"Articles","previous_headings":"Key features","what":"Manipulating Paired Ranges","title":"Introduction to mariner","text":"mariner provides helpful functions converting, binning, shifting paired genomic ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"coercing-to-and-accessing-ginteractions","dir":"Articles","previous_headings":"Key features > Manipulating Paired Ranges","what":"Coercing to and accessing GInteractions","title":"Introduction to mariner","text":"Pairwise interactions genomic regions represented Bioconductor GInteractions class InteractionSet package. mariner provides additional utilities converting BEDPE-formatted data GInteractions well accessing relevant components objects. mariner extends InteractionSet’s accessors, allowing users extract component interactions vectors.","code":"library(mariner) library(marinerData)  ## BEDPE-formatted file bedpeFile <- marinerData::WT_5kbLoops.txt()  ## Read BEDPE bedpe <- read.table(bedpeFile, header = TRUE) head(bedpe) ##   chromosome1        x1        x2 chromosome2        y1        y2 color ## 1        chr9  14460000  14465000        chr9  14765000  14770000 0,0,0 ## 2        chr9  89565000  89570000        chr9  89810000  89815000 0,0,0 ## 3        chr9  23725000  23730000        chr9  23785000  23790000 0,0,0 ## 4        chr9 128165000 128170000        chr9 128670000 128675000 0,0,0 ## 5        chr9 113100000 113105000        chr9 113380000 113385000 0,0,0 ## 6        chr9  16570000  16575000        chr9  16865000  16870000 0,0,0 ##   APScoreAvg ProbabilityofEnrichment RegAPScoreAvg Avg_diffMaxNeihgboor_1 ## 1   3.272132               0.9868535      2.233533              1.0059373 ## 2   2.062756               0.9528638      1.326748              1.1275173 ## 3   1.953737               0.9335626      1.408335              0.6212205 ## 4   4.217386               0.9919898      2.144296              2.2130080 ## 5   2.527488               0.9682012      1.470122              1.3876540 ## 6   4.385120               0.9976317      2.230119              2.1201570 ##   Avg_diffMaxNeihgboor_2      avg       std    value ## 1              1.6455076 3.437883 0.5164226 4.332049 ## 2              1.1394584 2.052792 0.5861371 3.055030 ## 3              0.8722256 2.159580 0.3773057 2.711776 ## 4              2.6013327 2.860420 1.0796510 4.827538 ## 5              1.5604625 2.215215 0.6669347 3.448685 ## 6              3.5826060 4.161625 1.0922525 6.046209 ## Coerce to GInteractions gi <- as_ginteractions(bedpe, keep.extra.columns = FALSE) gi ## GInteractions object with 12095 interactions and 0 metadata columns: ##           seqnames1             ranges1     seqnames2             ranges2 ##               <Rle>           <IRanges>         <Rle>           <IRanges> ##       [1]      chr9   14460000-14465000 ---      chr9   14765000-14770000 ##       [2]      chr9   89565000-89570000 ---      chr9   89810000-89815000 ##       [3]      chr9   23725000-23730000 ---      chr9   23785000-23790000 ##       [4]      chr9 128165000-128170000 ---      chr9 128670000-128675000 ##       [5]      chr9 113100000-113105000 ---      chr9 113380000-113385000 ##       ...       ...                 ... ...       ...                 ... ##   [12091]     chr17   16900000-16905000 ---     chr17   17095000-17100000 ##   [12092]     chr17     7255000-7260000 ---     chr17     7470000-7475000 ##   [12093]     chr17   46880000-46885000 ---     chr17   46955000-46960000 ##   [12094]     chr17   17580000-17585000 ---     chr17   17695000-17700000 ##   [12095]     chr17   47645000-47650000 ---     chr17   48075000-48080000 ##   ------- ##   regions: 20390 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths seqnames1(gi) |> head() start1(gi) |> head() end1(gi) |> head() seqnames2(gi) |> head() start2(gi) |> head() end2(gi) |> head() ## [1] \"chr9\" \"chr9\" \"chr9\" \"chr9\" \"chr9\" \"chr9\" ## [1]  14460000  89565000  23725000 128165000 113100000  16570000 ## [1]  14465000  89570000  23730000 128170000 113105000  16575000 ## [1] \"chr9\" \"chr9\" \"chr9\" \"chr9\" \"chr9\" \"chr9\" ## [1]  14765000  89810000  23785000 128670000 113380000  16865000 ## [1]  14770000  89815000  23790000 128675000 113385000  16870000"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"assigning-paired-ranges-to-bins","dir":"Articles","previous_headings":"Key features > Manipulating Paired Ranges","what":"Assigning paired ranges to bins","title":"Introduction to mariner","text":"Chromatin interaction data usually binned specific resolutions. mariner provides helpful functions assigning GInteractions objects differently sized bins. Note GenomicRanges GInteractions use ranges 1-based .hic 0-based. correct downstream processing .hic files, functions put ranges 0-based bins. width function returns binSize + 1. function also allows pair, anchor, binned separately different reference points (e.g. pos1 pos2). binPairs() assigns pair ranges single bin, snapToBins() function assigns starts ends ranges nearest bin. allows anchor span multiple bins. following figure summarizes differences binning snapping.","code":"## Assign to 1Kb bins binned <- binPairs(x=gi, binSize = 1e3, pos1='center', pos2='center')  ## Show that each anchor is 1Kb library(InteractionSet) width(binned) |> lapply(unique) ## $first ## [1] 1001 ##  ## $second ## [1] 1001 ## Assign anchor1 to 1Kb bins and anchor2 to 25Kb bins binned <- binPairs(x=gi, binSize=c(1e3, 25e3), pos1=\"start\", pos2=\"center\")  ## Show that the first anchor is 1Kb and ## second anchor is 25Kb width(binned) |> lapply(unique) ## $first ## [1] 1001 ##  ## $second ## [1] 25001 ## Create an example GInteractions object gi <- GInteractions(     anchor1 = c(         GRanges(\"chr1:1-15\"),         GRanges(\"chr1:1-11\")     ),     anchor2 = c(         GRanges(\"chr1:25-31\"),         GRanges(\"chr1:19-31\")     ) )  ## Original interactions gi  ## Snap to bins with different binSizes snapToBins(x=gi, binSize=5) snapToBins(x=gi, binSize=10) ## GInteractions object with 2 interactions and 0 metadata columns: ##       seqnames1   ranges1     seqnames2   ranges2 ##           <Rle> <IRanges>         <Rle> <IRanges> ##   [1]      chr1      1-15 ---      chr1     25-31 ##   [2]      chr1      1-11 ---      chr1     19-31 ##   ------- ##   regions: 4 ranges and 0 metadata columns ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths ## GInteractions object with 2 interactions and 0 metadata columns: ##       seqnames1   ranges1     seqnames2   ranges2 ##           <Rle> <IRanges>         <Rle> <IRanges> ##   [1]      chr1      0-15 ---      chr1     25-30 ##   [2]      chr1      0-10 ---      chr1     20-30 ##   ------- ##   regions: 4 ranges and 0 metadata columns ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths ## GInteractions object with 2 interactions and 0 metadata columns: ##       seqnames1   ranges1     seqnames2   ranges2 ##           <Rle> <IRanges>         <Rle> <IRanges> ##   [1]      chr1      0-20 ---      chr1     20-30 ##   [2]      chr1      0-10 ---      chr1     20-30 ##   ------- ##   regions: 3 ranges and 0 metadata columns ##   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"clustering-merging-interactions","dir":"Articles","previous_headings":"Key features","what":"Clustering & Merging Interactions","title":"Introduction to mariner","text":"Group nearby interactions select one representative. combining BEDPE files, often important recognize reduce duplicate near duplicate interactions. mergePairs() allows users cluster interactions within specified genomic radius select representative interaction group. particularly helpful analysis chromatin loop multiple Hi-C replicates often identify loop assign different (often neighboring) pixel. avoid redundancy, mergePairs() identifies merges unified non-redundant loop set. , two example BEDPE files imported list GInteractions objects. cluster merge mergePairs(). Note metadata missing interactions. Since column provided, interaction may average one interaction. user can decide metadata cluster aggregated aggPairMcols(). resulting object MergedGInteractions class, interactions representative cluster one interactions. class behaves like GInteractions contains additional information clustered interactions. view clusters specific interactions, use getPairClusters() accessor. column argument provided frequently occurring interaction selected. pair , mean position anchors returned since neither frequent. Alternatively, users can specify column argument use custom metric selecting representative interaction. interaction higher value (selectMax=TRUE) “APScoreAvg” selected. subsetBySource() accessor allows users find interactions shared exclusive sets interactions giList. particularly useful identifying de novo, shared transient interactions. information see ?subsetBySource().","code":"library(mariner) library(marinerData)  ## BEDPE-formatted files bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read as list of GInteractions giList <-     lapply(bedpeFiles, read.table, header=TRUE) |>     lapply(as_ginteractions)  lapply(giList, summary) ## $FS ## [1] \"GInteractions object of length 8566 with 9 metadata columns\" ##  ## $WT ## [1] \"GInteractions object of length 12095 with 9 metadata columns\" mgi <- mergePairs(     x=giList,     radius=10e3 ) mgi ## MergedGInteractions object with 16716 interactions and 0 metadata columns: ##           seqnames1             ranges1     seqnames2             ranges2 ##               <Rle>           <IRanges>         <Rle>           <IRanges> ##       [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 ##       [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 ##       [3]      chr9 110180000-110185000 ---      chr9 111520000-111525000 ##       [4]      chr9   80375000-80380000 ---      chr9   80650000-80655000 ##       [5]      chr9 108380000-108385000 ---      chr9 108475000-108480000 ##       ...       ...                 ... ...       ...                 ... ##   [16712]     chr17   71422500-71427500 ---     chr17   72170000-72175000 ##   [16713]     chr17   28450000-28455000 ---     chr17   28657500-28662500 ##   [16714]     chr17   65375000-65380000 ---     chr17   65685000-65690000 ##   [16715]     chr17   77712500-77717500 ---     chr17   77965000-77970000 ##   [16716]     chr17   46880000-46885000 ---     chr17   46955000-46960000 ##   ------- ##   regions: 28189 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths mgi[12772] getPairClusters(mgi[12772]) ## MergedGInteractions object with 1 interaction and 0 metadata columns: ##       seqnames1           ranges1     seqnames2           ranges2 ##           <Rle>         <IRanges>         <Rle>         <IRanges> ##   [1]      chr9 90302500-90307500 ---      chr9 90430000-90435000 ##   ------- ##   regions: 28189 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths ## [[1]] ##    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 ## 1:      chr9 90300000 90305000   5001       *      chr9 90430000 90435000 ## 2:      chr9 90305000 90310000   5001       *      chr9 90430000 90435000 ##    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg ## 1:   5001       * 0,0,0   2.543816               0.9444922      1.887968 ## 2:   5001       * 0,0,0   2.718088               0.9531689      1.922928 ##    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value ## 1:              0.7340446              0.7978164 2.239048 0.4049837 2.891532 ## 2:              0.7962394              1.0013034 2.353757 0.5259836 3.061525 ##    src ## 1:  FS ## 2:  WT mgi <- mergePairs(     x=giList,     radius=10e3,     column=\"APScoreAvg\",     selectMax=TRUE ) mgi ## MergedGInteractions object with 16716 interactions and 9 metadata columns: ##           seqnames1             ranges1     seqnames2             ranges2 | ##               <Rle>           <IRanges>         <Rle>           <IRanges> | ##       [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | ##       [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | ##       [3]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | ##       [4]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | ##       [5]      chr9 108380000-108385000 ---      chr9 108475000-108480000 | ##       ...       ...                 ... ...       ...                 ... . ##   [16712]     chr17   71425000-71430000 ---     chr17   72170000-72175000 | ##   [16713]     chr17   28450000-28455000 ---     chr17   28660000-28665000 | ##   [16714]     chr17   65375000-65380000 ---     chr17   65685000-65690000 | ##   [16715]     chr17   77710000-77715000 ---     chr17   77965000-77970000 | ##   [16716]     chr17   46880000-46885000 ---     chr17   46955000-46960000 | ##                 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg ##           <character>  <numeric>               <numeric>     <numeric> ##       [1]       0,0,0    2.61103                0.986044       1.41438 ##       [2]       0,0,0    2.45301                0.982802       1.54370 ##       [3]       0,0,0    3.40635                0.996545       1.80221 ##       [4]       0,0,0    2.09352                0.946897       1.40194 ##       [5]       0,0,0    2.14182                0.936547       1.41005 ##       ...         ...        ...                     ...           ... ##   [16712]       0,0,0    4.05887                0.997252       2.12187 ##   [16713]       0,0,0    4.47565                0.995379       2.49118 ##   [16714]       0,0,0    3.91395                0.996974       2.83091 ##   [16715]       0,0,0    3.39028                0.979869       2.42961 ##   [16716]       0,0,0    3.89043                0.982768       2.73390 ##           Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2       avg       std ##                        <numeric>              <numeric> <numeric> <numeric> ##       [1]               1.875585                2.12164   2.60512  0.794220 ##       [2]               1.491568                1.60777   2.73756  0.856876 ##       [3]               3.768934                3.89112   4.49898  1.492786 ##       [4]               0.818514                1.10611   2.20826  0.589976 ##       [5]               0.907892                1.01824   1.95072  0.543293 ##       ...                    ...                    ...       ...       ... ##   [16712]               2.484298                3.15533   3.68911  1.144096 ##   [16713]               2.181075                2.63508   3.43889  0.827104 ##   [16714]               1.091847                1.96232   4.83071  0.753955 ##   [16715]               1.139229                1.15973   2.89326  0.589743 ##   [16716]               0.906871                1.43305   3.25531  0.368257 ##               value ##           <numeric> ##       [1]   4.27231 ##       [2]   4.06339 ##       [3]   7.84915 ##       [4]   2.93583 ##       [5]   2.75773 ##       ...       ... ##   [16712]   5.89737 ##   [16713]   5.37762 ##   [16714]   5.80124 ##   [16715]   3.90591 ##   [16716]   4.06142 ##   ------- ##   regions: 27152 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths mgi[12772] getPairClusters(mgi[12772]) ## MergedGInteractions object with 1 interaction and 9 metadata columns: ##       seqnames1           ranges1     seqnames2           ranges2 |       color ##           <Rle>         <IRanges>         <Rle>         <IRanges> | <character> ##   [1]      chr9 90305000-90310000 ---      chr9 90430000-90435000 |       0,0,0 ##       APScoreAvg ProbabilityofEnrichment RegAPScoreAvg Avg_diffMaxNeihgboor_1 ##        <numeric>               <numeric>     <numeric>              <numeric> ##   [1]    2.71809                0.953169       1.92293               0.796239 ##       Avg_diffMaxNeihgboor_2       avg       std     value ##                    <numeric> <numeric> <numeric> <numeric> ##   [1]                 1.0013   2.35376  0.525984   3.06153 ##   ------- ##   regions: 27152 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths ## [[1]] ##    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 ## 1:      chr9 90300000 90305000   5001       *      chr9 90430000 90435000 ## 2:      chr9 90305000 90310000   5001       *      chr9 90430000 90435000 ##    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg ## 1:   5001       * 0,0,0   2.543816               0.9444922      1.887968 ## 2:   5001       * 0,0,0   2.718088               0.9531689      1.922928 ##    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value ## 1:              0.7340446              0.7978164 2.239048 0.4049837 2.891532 ## 2:              0.7962394              1.0013034 2.353757 0.5259836 3.061525 ##    src ## 1:  FS ## 2:  WT ## List the input sources sources(mgi) ## [1] \"FS\" \"WT\" ## Interactions unique to each source subsetBySource(mgi) |> lapply(summary) ## $FS ## [1] \"MergedGInteractions object of length 4621 with 9 metadata columns\" ##  ## $WT ## [1] \"MergedGInteractions object of length 8150 with 9 metadata columns\" ## Interactions shared by both sources subsetBySource(x=mgi, include=sources(mgi)) ## MergedGInteractions object with 3945 interactions and 9 metadata columns: ##          seqnames1             ranges1     seqnames2             ranges2 | ##              <Rle>           <IRanges>         <Rle>           <IRanges> | ##      [1]      chr9   90305000-90310000 ---      chr9   90430000-90435000 | ##      [2]      chr9   17810000-17815000 ---      chr9   18210000-18215000 | ##      [3]      chr9   14615000-14620000 ---      chr9   14765000-14770000 | ##      [4]      chr9 123640000-123645000 ---      chr9 123690000-123695000 | ##      [5]      chr9 116350000-116355000 ---      chr9 116415000-116420000 | ##      ...       ...                 ... ...       ...                 ... . ##   [3941]     chr17   71425000-71430000 ---     chr17   72170000-72175000 | ##   [3942]     chr17   28450000-28455000 ---     chr17   28660000-28665000 | ##   [3943]     chr17   65375000-65380000 ---     chr17   65685000-65690000 | ##   [3944]     chr17   77710000-77715000 ---     chr17   77965000-77970000 | ##   [3945]     chr17   46880000-46885000 ---     chr17   46955000-46960000 | ##                color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg ##          <character>  <numeric>               <numeric>     <numeric> ##      [1]       0,0,0    2.71809                0.953169       1.92293 ##      [2]       0,0,0    6.67809                0.999825       3.09492 ##      [3]       0,0,0    4.03621                0.990983       1.88137 ##      [4]       0,0,0    1.80119                0.915252       1.30425 ##      [5]       0,0,0    3.98045                0.993344       2.34677 ##      ...         ...        ...                     ...           ... ##   [3941]       0,0,0    4.05887                0.997252       2.12187 ##   [3942]       0,0,0    4.47565                0.995379       2.49118 ##   [3943]       0,0,0    3.91395                0.996974       2.83091 ##   [3944]       0,0,0    3.39028                0.979869       2.42961 ##   [3945]       0,0,0    3.89043                0.982768       2.73390 ##          Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2       avg       std ##                       <numeric>              <numeric> <numeric> <numeric> ##      [1]               0.796239               1.001303   2.35376  0.525984 ##      [2]               4.171168               5.166137   4.94208  1.538564 ##      [3]               1.987963               2.934255   2.94201  0.802044 ##      [4]               0.674690               0.726729   1.86861  0.317171 ##      [5]               1.527367               2.450921   3.65504  0.677612 ##      ...                    ...                    ...       ...       ... ##   [3941]               2.484298                3.15533   3.68911  1.144096 ##   [3942]               2.181075                2.63508   3.43889  0.827104 ##   [3943]               1.091847                1.96232   4.83071  0.753955 ##   [3944]               1.139229                1.15973   2.89326  0.589743 ##   [3945]               0.906871                1.43305   3.25531  0.368257 ##              value ##          <numeric> ##      [1]   3.06153 ##      [2]   8.64979 ##      [3]   4.70909 ##      [4]   2.46833 ##      [5]   5.01270 ##      ...       ... ##   [3941]   5.89737 ##   [3942]   5.37762 ##   [3943]   5.80124 ##   [3944]   3.90591 ##   [3945]   4.06142 ##   ------- ##   regions: 27152 ranges and 0 metadata columns ##   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"extracting-aggregating-interactions","dir":"Articles","previous_headings":"Key features","what":"Extracting & Aggregating Interactions","title":"Introduction to mariner","text":"Pull Hi-C pixels matrices, aggregate files interactions. mariner provides two functions extracting contacts .hic files, pullHicPixels() pullHicMatrices(), use binSize argument determine data returned. short, pullHicPixels() returns matrix contact frequency interaction .hic file, pullHicMatrices() returns array contact matrices. following sections describe use functions.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"pulling-pixels","dir":"Articles","previous_headings":"Key features > Extracting & Aggregating Interactions","what":"Pulling pixels","title":"Introduction to mariner","text":"Pixels defined paired-ranges widths equal binSize. interactions pixels, pullHicPixels() returns InteractionMatrix object containing matrix contact frequency interaction (row) .hic file (column). described previous sections, BEDPE files containing locations chromatin loops can read merged. marinerData ExperimentHub package includes small .hic files can downloaded testing. strawr package includes functions visualizing available chromosomes, resolutions (binSizes), normalizations .hic files. Since chromosomes .hic files processed without “chr” prefix, important change seqLevelsStyle interactions match. interactions can binned desired resolution binPairs() function. Contact frequency can extracted pullHicPixels(). first 1000 pixels pulled demonstration purposes. Note many parameters pullHicPixels() function. Users can change normalization, type matrix pulled (e.g. “observed” vs “expected”), /-disk data stored. Users can also decrease amount data read memory decreasing blockSize. information see ?pullHicPixels() ?pullHicMatrices(). count matrix can extracted InteractionMatrix class counts() function. Note InteractionMatrix class extends InteractionSet SummarizedExperiment classes. See documentation classes instructions extract different parts InteractionMatrix object.","code":"library(mariner) library(marinerData)  ## BEDPE-formatted files bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read as list of GInteractions giList <-     lapply(bedpeFiles, read.table, header=TRUE) |>     lapply(as_ginteractions)  ## Merge mgi <- mergePairs(x=giList, radius=10e3, column=\"APScoreAvg\")  summary(mgi) ## [1] \"MergedGInteractions object of length 16716 with 9 metadata columns\" library(marinerData) hicFiles <- c(     LEUK_HEK_PJA27_inter_30.hic(),     LEUK_HEK_PJA30_inter_30.hic() ) names(hicFiles) <- c(\"FS\", \"WT\") hicFiles ##                                                      FS  ## \"/home/runner/.cache/R/ExperimentHub/7ac72d939a64_8147\"  ##                                                      WT  ## \"/home/runner/.cache/R/ExperimentHub/7ac77bf7b6f2_8148\" library(strawr)  ## Normalizations lapply(hicFiles, readHicNormTypes) ## $FS ## [1] \"VC\"      \"NONE\"    \"KR\"      \"VC_SQRT\" ##  ## $WT ## [1] \"VC\"      \"NONE\"    \"KR\"      \"VC_SQRT\" ## Resolutions lapply(hicFiles, readHicBpResolutions) ## $FS ## [1] 2500000 1000000  500000  250000  100000   50000   25000   10000    5000 ##  ## $WT ## [1] 2500000 1000000  500000  250000  100000   50000   25000   10000    5000 ## Chromosomes lapply(hicFiles, readHicChroms) |>     lapply(head) ## $FS ##   index              name    length ## 1     1                 1 248956422 ## 2    12                10 133797422 ## 3   174 10_GL383545V1_ALT    179254 ## 4    79 10_GL383546V1_ALT    309802 ## 5   168 10_KI270824V1_ALT    181496 ## 6   150 10_KI270825V1_ALT    188315 ##  ## $WT ##   index              name    length ## 1     1                 1 248956422 ## 2    12                10 133797422 ## 3   174 10_GL383545V1_ALT    179254 ## 4    79 10_GL383546V1_ALT    309802 ## 5   168 10_KI270824V1_ALT    181496 ## 6   150 10_KI270825V1_ALT    188315 GenomeInfoDb::seqlevelsStyle(mgi) <- 'ENSEMBL' ## Assign interactions to 100Kb bins binned <- binPairs(x=mgi, binSize=100e3) imat <- pullHicPixels(     x=binned[1:1000],     files=hicFiles,     binSize=100e3 ) imat ## class: InteractionMatrix  ## dim: count matrix with 1000 interactions and 2 file(s) ## metadata(3): binSize norm matrix ## assays(1): counts ## rownames: NULL ## rowData names(9): color APScoreAvg ... std value ## colnames(2): FS WT ## colData names(2): files fileNames ## type: MergedGInteractions ## regions: 13923 counts(imat) ## <1000 x 2> DelayedMatrix object of type \"double\": ##         FS WT ##    [1,]  4  1 ##    [2,]  8  5 ##    [3,]  3  2 ##    [4,]  3  3 ##    [5,] 14  8 ##     ...  .  . ##  [996,]  6 10 ##  [997,]  5  4 ##  [998,]  0  0 ##  [999,] 11  5 ## [1000,]  0  0"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"pulling-submatrices","dir":"Articles","previous_headings":"Key features > Extracting & Aggregating Interactions","what":"Pulling submatrices","title":"Introduction to mariner","text":"widths paired-ranges greater binSize, pullHicMatrices() returns InteractionArray object containing array contact matrices interaction .hic file. Using example , reducing binSize 25Kb data binned 100Kb results 4x4 count matrices interaction instead single value. results InteractionArray 1000 interactions, 4x4 count matrices across 2 .hic files. data can accessed counts() accessor. start bins interaction can shown setting showDimnames=TRUE. Note functions utilize DelayedArray HDF5Array framework efficiently store extracted data -disk, freeing RAM, allowing users work large contact data seamlessly. pixelsToMatrices() function helps prepare regions surrounding central pixel. example, code shows pull 3x3 matrices surrounding 100Kb pixel. also works rectangular selections.","code":"iarr <- pullHicMatrices(     x=binned[1:1000],     file=hicFiles,     binSize = 25e3 ) iarr ## class: InteractionArray  ## dim: 1000 interaction(s), 2 file(s), 4x4 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(9): color APScoreAvg ... std value ## colnames(2): FS WT ## colData names(2): files fileNames ## type: MergedGInteractions ## regions: 13923 counts(iarr) ## <4 x 4 x 1000 x 2> DelayedArray object of type \"double\": ## ,,1,FS ##      [,1] [,2] [,3] [,4] ## [1,]    0    0    0    0 ## [2,]    0    0    0    1 ## [3,]    0    1    0    1 ## [4,]    0    1    0    0 ##  ## ... ##  ## ,,1000,WT ##      [,1] [,2] [,3] [,4] ## [1,]    0    0    0    0 ## [2,]    0    0    0    0 ## [3,]    0    0    0    0 ## [4,]    0    0    0    0 counts(iarr, showDimnames=TRUE) ## <4 x 4 x 1000 x 2> DelayedArray object of type \"double\": ## ,,1,FS ##           119300000 119325000 119350000 119375000 ## 118600000         0         0         0         0 ## 118625000         0         0         0         1 ## 118650000         0         1         0         1 ## 118675000         0         1         0         0 ##  ## ... ##  ## ,,1000,WT ##           108700000 108725000 108750000 108775000 ## 107900000         0         0         0         0 ## 107925000         0         0         0         0 ## 107950000         0         0         0         0 ## 107975000         0         0         0         0 ## Define region with 1-pixel buffer regions <- pixelsToMatrices(x=binned[1:1000], buffer=1)  ## Pull 3x3 matrices from 1000 interactions and 2 hic files iarr <- pullHicMatrices(     x=regions,     files=hicFiles,     binSize=100e3 )  ## See count matrices counts(iarr) ## <3 x 3 x 1000 x 2> DelayedArray object of type \"double\": ## ,,1,FS ##      [,1] [,2] [,3] ## [1,]    1    3    2 ## [2,]    1    4    4 ## [3,]    3    0    4 ##  ## ,,2,FS ##      [,1] [,2] [,3] ## [1,]    3    4    3 ## [2,]   11    8    2 ## [3,]   40    8    5 ##  ## ,,3,FS ##      [,1] [,2] [,3] ## [1,]    0    1    1 ## [2,]    1    3    0 ## [3,]    2    2    2 ##  ## ... ##  ## ,,998,WT ##      [,1] [,2] [,3] ## [1,]    0    1    1 ## [2,]    0    0    0 ## [3,]    2    1    2 ##  ## ,,999,WT ##      [,1] [,2] [,3] ## [1,]    8    3    2 ## [2,]   13    5    2 ## [3,]   42   10    5 ##  ## ,,1000,WT ##      [,1] [,2] [,3] ## [1,]    3    0    0 ## [2,]    0    0    0 ## [3,]    0    1    2 ## Bin at two different resolutions binned <- binPairs(x=mgi, binSize=c(100e3, 250e3))  ## Pull 10x25 matrices from 1000 interactions and 2 hic files iarr2 <- pullHicMatrices(     x=binned[1:1000],     files=hicFiles,     binSize=10e3 )  ## See count matrices counts(iarr2) ## <10 x 25 x 1000 x 2> DelayedArray object of type \"double\": ## ,,1,FS ##        [,1]  [,2]  [,3] ... [,24] [,25] ##  [1,]     0     0     0   .     0     0 ##  [2,]     0     0     0   .     0     0 ##   ...     .     .     .   .     .     . ##  [9,]     0     0     0   .     0     0 ## [10,]     0     0     0   .     0     0 ##  ## ... ##  ## ,,1000,WT ##        [,1]  [,2]  [,3] ... [,24] [,25] ##  [1,]     0     0     0   .     0     0 ##  [2,]     0     0     0   .     0     0 ##   ...     .     .     .   .     .     . ##  [9,]     0     0     0   .     0     0 ## [10,]     0     0     0   .     0     0"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"aggregating-count-matrices","dir":"Articles","previous_headings":"Key features > Extracting & Aggregating Interactions","what":"Aggregating count matrices","title":"Introduction to mariner","text":"aggHicMatrices() function allows flexible aggregation InteractionArray objects interactions, Hi-C files, (default). FUN argument controls contacts aggregated (default sum). Note aggHicMatrices() function uses block processing operate DelayedArray count matrices. nBlocks argument controls many blocks data split processing. can conducted parallel setting BPPARAM. See ?aggHicMatrices() information.","code":"## One matrix per interaction aggHicMatrices(x=iarr, by=\"interactions\") ## / Reading and realizing block 1/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 2/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 3/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 4/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 5/5 ... OK ## \\ Processing it ... OK ## <3 x 3 x 1000> DelayedArray object of type \"double\": ## ,,1 ##      [,1] [,2] [,3] ## [1,]    1    4    2 ## [2,]    4    5    7 ## [3,]    4    3    6 ##  ## ,,2 ##      [,1] [,2] [,3] ## [1,]    7    5    7 ## [2,]   15   13    3 ## [3,]   63   19    9 ##  ## ,,3 ##      [,1] [,2] [,3] ## [1,]    1    1    2 ## [2,]    4    5    2 ## [3,]    3    6    2 ##  ## ... ##  ## ,,998 ##      [,1] [,2] [,3] ## [1,]    0    1    2 ## [2,]    1    0    0 ## [3,]    5    2    3 ##  ## ,,999 ##      [,1] [,2] [,3] ## [1,]   18    8    7 ## [2,]   29   16    5 ## [3,]   97   31    9 ##  ## ,,1000 ##      [,1] [,2] [,3] ## [1,]    4    1    2 ## [2,]    1    0    1 ## [3,]    3    2    2 ## One matrix per file aggHicMatrices(x=iarr, by=\"files\") ## / Reading and realizing block 1/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 2/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 3/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 4/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 5/5 ... OK ## \\ Processing it ... OK ## <3 x 3 x 2> DelayedArray object of type \"double\": ## ,,FS ##       [,1]  [,2]  [,3] ## [1,]  6803  3789  2709 ## [2,] 11212  6874  3776 ## [3,] 13871 11029  6562 ##  ## ,,WT ##       [,1]  [,2]  [,3] ## [1,]  5645  3180  2240 ## [2,]  8964  5678  2996 ## [3,] 11282  9085  5614 ## One matrix total aggHicMatrices(x=iarr) ## / Reading and realizing block 1/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 2/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 3/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 4/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 5/5 ... OK ## \\ Processing it ... OK ## <3 x 3> DelayedMatrix object of type \"double\": ##       [,1]  [,2]  [,3] ## [1,] 12448  6969  4949 ## [2,] 20176 12552  6772 ## [3,] 25153 20114 12176"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"visualizing-aggregated-matrices","dir":"Articles","previous_headings":"Key features > Extracting & Aggregating Interactions","what":"Visualizing aggregated matrices","title":"Introduction to mariner","text":"mariner provides plotMatrix() function visualizing aggregated .hic matrices, aggregate peak analysis.  function compatible plotgardener, R/Bioconductor genomic visualization package. plotgardener gives precise control size placement plots page, making suitable complex, publication-ready figure building. information plotgardener visit https://phanstiellab.github.io/plotgardener/.","code":"mat <- aggHicMatrices(x=iarr) ## / Reading and realizing block 1/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 2/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 3/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 4/5 ... OK ## \\ Processing it ... OK ## / Reading and realizing block 5/5 ... OK ## \\ Processing it ... OK plotMatrix(data=mat) ## MatrixPlot[MatrixPlot1]"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"calculating-loop-enrichment","dir":"Articles","previous_headings":"Key features","what":"Calculating Loop Enrichment","title":"Introduction to mariner","text":"Determine loop enrichment local background selection functions flexibility select foreground background. calcLoopEnrichment() function combines many steps described previous sections single function pulls Hi-C pixels calculates enrichment selected foreground compared selected background. mariner provides several different selection functions easily flexibly selecting different parts matrix. code shows examples functions can used combined select virtually part square matrix. selection functions can passed calcLoopEnrichment() along GInteractions object defining loop pixels calculate enrichment .hic file. results DelayedMatrix rows interaction columns corresponding .hic file.","code":"## Define the buffer buffer <- 3  ## Select center pixel selectCenterPixel(mhDist=0, buffer=buffer) ## '0' = selected; '-' = unselected ##                       ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  0  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  - ## With a radial distance selectCenterPixel(mhDist=0:1, buffer=buffer) ## '0' = selected; '-' = unselected ##                       ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  0  -  -  -  ##  -  -  0  0  0  -  -  ##  -  -  -  0  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  - ## Select all corners selectCorners(n=2, buffer=buffer) ## '0' = selected; '-' = unselected ##                       ##  0  0  -  -  -  0  0  ##  0  0  -  -  -  0  0  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  0  0  -  -  -  0  0  ##  0  0  -  -  -  0  0 ## Combine functions selectTopLeft(n=2, buffer=buffer) +     selectBottomRight(n=2, buffer=buffer) ## '0' = selected; '-' = unselected ##                       ##  0  0  -  -  -  -  -  ##  0  0  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  -  -  ##  -  -  -  -  -  0  0  ##  -  -  -  -  -  0  0 library(mariner) library(marinerData)  ## Define hicFiles hicFiles <- c(     LEUK_HEK_PJA27_inter_30.hic(),     LEUK_HEK_PJA30_inter_30.hic() ) |> setNames(c(\"FS\", \"WT\"))  ## Read in loops loops <-      WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE, nrows=1000) |>     as_ginteractions() |>     binPairs(binSize=100e3) |>     GenomeInfoDb::`seqlevelsStyle<-`('ENSEMBL')  ## Define foreground & background buffer <- 10 fg <- selectCenterPixel(mhDist=0:1, buffer=buffer) bg <- selectTopLeft(n=2, buffer=buffer) +     selectBottomRight(n=2, buffer=buffer)  ## Calculate loop enrichment enrich <- calcLoopEnrichment(     x=loops,     files=hicFiles,     fg=fg,     bg=bg ) enrich ## <1000 x 2> DelayedMatrix object of type \"double\": ##                FS        WT ##    [1,] 1.1111111 1.2500000 ##    [2,] 0.6250000 1.1666667 ##    [3,] 0.9090909 1.5294118 ##    [4,] 0.8888889 0.6666667 ##    [5,] 0.6363636 0.9333333 ##     ...         .         . ##  [996,] 0.8372093 0.5714286 ##  [997,] 0.9795918 1.1034483 ##  [998,] 1.3333333 1.2000000 ##  [999,] 1.6000000 0.6666667 ## [1000,] 1.5000000 1.0000000"},{"path":"http://ericscottdavis.com/mariner/articles/mariner.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Introduction to mariner","text":"","code":"sessionInfo() ## R version 4.3.1 RC (2023-06-08 r84522) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] strawr_0.0.91               InteractionSet_1.28.0       ##  [3] SummarizedExperiment_1.30.2 Biobase_2.60.0              ##  [5] MatrixGenerics_1.12.2       matrixStats_1.0.0           ##  [7] GenomicRanges_1.52.0        GenomeInfoDb_1.36.0         ##  [9] IRanges_2.34.0              S4Vectors_0.38.1            ## [11] BiocGenerics_0.46.0         marinerData_1.0.0           ## [13] mariner_1.1.0               ##  ## loaded via a namespace (and not attached): ##   [1] RColorBrewer_1.1-3            jsonlite_1.8.5                ##   [3] magrittr_2.0.3                rmarkdown_2.22                ##   [5] fs_1.6.2                      BiocIO_1.10.0                 ##   [7] zlibbioc_1.46.0               ragg_1.2.5                    ##   [9] vctrs_0.6.2                   memoise_2.0.1                 ##  [11] Rsamtools_2.16.0              RCurl_1.98-1.12               ##  [13] htmltools_0.5.5               S4Arrays_1.0.4                ##  [15] progress_1.2.2                AnnotationHub_3.8.0           ##  [17] curl_5.0.1                    Rhdf5lib_1.22.0               ##  [19] rhdf5_2.44.0                  gridGraphics_0.5-1            ##  [21] sass_0.4.6                    bslib_0.5.0                   ##  [23] desc_1.4.2                    cachem_1.0.8                  ##  [25] GenomicAlignments_1.36.0      mime_0.12                     ##  [27] lifecycle_1.0.3               pkgconfig_2.0.3               ##  [29] Matrix_1.5-4.1                R6_2.5.1                      ##  [31] fastmap_1.1.1                 GenomeInfoDbData_1.2.10       ##  [33] shiny_1.7.4                   digest_0.6.31                 ##  [35] colorspace_2.1-0              AnnotationDbi_1.62.1          ##  [37] rprojroot_2.0.3               ExperimentHub_2.8.0           ##  [39] textshaping_0.3.6             RSQLite_2.3.1                 ##  [41] filelock_1.0.2                fansi_1.0.4                   ##  [43] httr_1.4.6                    abind_1.4-5                   ##  [45] compiler_4.3.1                bit64_4.0.5                   ##  [47] withr_2.5.0                   BiocParallel_1.34.2           ##  [49] DBI_1.1.3                     highr_0.10                    ##  [51] HDF5Array_1.28.1              rappdirs_0.3.3                ##  [53] DelayedArray_0.26.3           rjson_0.2.21                  ##  [55] tools_4.3.1                   interactiveDisplayBase_1.38.0 ##  [57] httpuv_1.6.11                 glue_1.6.2                    ##  [59] restfulr_0.0.15               dbscan_1.1-11                 ##  [61] rhdf5filters_1.12.1           promises_1.2.0.1              ##  [63] grid_4.3.1                    generics_0.1.3                ##  [65] gtable_0.3.3                  data.table_1.14.8             ##  [67] hms_1.1.3                     utf8_1.2.3                    ##  [69] XVector_0.40.0                BiocVersion_3.17.1            ##  [71] pillar_1.9.0                  stringr_1.5.0                 ##  [73] yulab.utils_0.0.6             later_1.3.1                   ##  [75] dplyr_1.1.2                   BiocFileCache_2.8.0           ##  [77] lattice_0.21-8                rtracklayer_1.60.0            ##  [79] bit_4.0.5                     tidyselect_1.2.0              ##  [81] Biostrings_2.68.1             knitr_1.43                    ##  [83] xfun_0.39                     colourvalues_0.3.9            ##  [85] stringi_1.7.12                yaml_2.3.7                    ##  [87] evaluate_0.21                 codetools_0.2-19              ##  [89] tibble_3.2.1                  BiocManager_1.30.21           ##  [91] ggplotify_0.1.0               cli_3.6.1                     ##  [93] xtable_1.8-4                  systemfonts_1.0.4             ##  [95] munsell_0.5.0                 jquerylib_0.1.4               ##  [97] Rcpp_1.0.10                   dbplyr_2.3.2                  ##  [99] png_0.1-8                     XML_3.99-0.14                 ## [101] parallel_4.3.1                ellipsis_0.3.2                ## [103] pkgdown_2.0.7                 ggplot2_3.4.2                 ## [105] assertthat_0.2.1              blob_1.2.4                    ## [107] prettyunits_1.1.1             plyranges_1.20.0              ## [109] bitops_1.0-7                  scales_1.2.1                  ## [111] plotgardener_1.6.0            purrr_1.0.1                   ## [113] crayon_1.5.2                  rlang_1.1.1                   ## [115] KEGGREST_1.40.0"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"when-to-use-pullhicpixels","dir":"Articles","previous_headings":"","what":"When to use pullHicPixels()","title":"Pulling Hi-C data with mariner","text":"want single value interaction .hic file use pullHicPixels() function. define “pixel” interaction anchors width. binSize argument used check desired pixel resolution matches input interactions.  Note can check .hic file see resolutions available binSize argument strawr::readHicBpResolutions(). See binPairs() set interactions acceptable resolution. following example pulls 100-Kb pixels two .hic files: results InteractionMatrix object contains extracted Hi-C data, interactions, metadata interactions .hic files. extracted Hi-C data stored count matrix every row interaction (.e pixel) column .hic file. Use counts() function access count matrix InteractionMatrix object. count matrix stored -disk (onDisk=TRUE) HDF5-backed DelayedArray object. data stored provided file path h5File argument. file path isn’t provided, temporary file created current Rsession. access update location HDF5 file using pullHicPixels() function, use path() function. Note Using DelayedArray instead normal R matrix number benefits, especially users working limited computer memory. See ?DelayedArray package documentation vignettes information. count matrix can used downstream analysis differential interaction analysis DESeq2. learn access components InteractionMatrix objects, see InteractionMatrix class section .","code":"## Load mariner library(mariner)  ## Use example .hic files from ExperimentHub hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) names(hicFiles) <- c(\"hic1\", \"hic2\")  ## Make some example interactions gi <- read.table(     text=\"     1 51000000 51100000 1 51000000 51100000     1 150000000 150100000 1 150000000 150100000     2 51000000 51100000 2 51000000 51100000     2 150000000 150100000 2 150000000 150100000     \" ) gi <- as_ginteractions(gi)  ## Pull Hi-C pixels pixels <- pullHicPixels(x=gi, files=hicFiles, binSize=100e3) pixels ## class: InteractionMatrix  ## dim: count matrix with 4 interactions and 2 file(s) ## metadata(3): binSize norm matrix ## assays(1): counts ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 counts(pixels) ## <4 x 2> DelayedMatrix object of type \"double\": ##      hic1 hic2 ## [1,]   53   49 ## [2,]   63   56 ## [3,]   36   16 ## [4,]   43   24 path(pixels) ## [1] \"/tmp/Rtmpah11Nc/file7e9d8c92a77.h5\""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"when-to-use-pullhicmatrices","dir":"Articles","previous_headings":"","what":"When to use pullHicMatrices()","title":"Pulling Hi-C data with mariner","text":"want matrix values interaction use pullHicMatrices() function. matrices made multiple “pixels”, defined dividing range interaction supplied binSize parameter.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"square-matrices","dir":"Articles","previous_headings":"When to use pullHicMatrices()","what":"Square matrices","title":"Pulling Hi-C data with mariner","text":"example, define 500x500 Kb interactions setting width anchors 500 Kb set binSize 100 Kb produces count matrices 5 rows 5 columns. count matrices stored InteractionArray class accessible counts() function. can supply showDimnames=TRUE display start bin anchor. 4-dimensional arrays use first second dimensions rows columns count matrices, third dimension interaction, fourth dimension .hic file. want convert pixels square Hi-C regions, can use pixelsToMatrices() function. buffer argument describes many pixels expand ranges either side center pixel. example, expand 100x100 Kb pixels regions 500x500 Kb, specify buffer=2 add two additional 100 Kb pixels sides central 100 Kb pixels. pulled pullHicMatrices() using binSize=100e3 odd, 5x5 matrices result.","code":"## Create 500x500 Kb regions regions <- binPairs(x=gi, binSize=500e3, pos1=\"start\", pos2=\"start\") ## Pull Hi-C matrices matrices <- pullHicMatrices(x=regions, files=hicFiles, binSize=100e3) matrices ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 5x5 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 counts(matrices) ## <5 x 5 x 4 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   53   15    5    1    4 ## [2,]   15   68   19    8    5 ## [3,]    5   19   69   12    2 ## [4,]    1    8   12   48   13 ## [5,]    4    5    2   13   48 ##  ## ... ##  ## ,,4,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   24   11    3    7    4 ## [2,]   11   26    2    6    5 ## [3,]    3    2   41   17    4 ## [4,]    7    6   17   42   14 ## [5,]    4    5    4   14   44 counts(matrices, showDimnames=TRUE) ## <5 x 5 x 4 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##          51000000 51100000 51200000 51300000 51400000 ## 51000000       53       15        5        1        4 ## 51100000       15       68       19        8        5 ## 51200000        5       19       69       12        2 ## 51300000        1        8       12       48       13 ## 51400000        4        5        2       13       48 ##  ## ... ##  ## ,,4,hic2 ##           150000000 150100000 150200000 150300000 150400000 ## 150000000        24        11         3         7         4 ## 150100000        11        26         2         6         5 ## 150200000         3         2        41        17         4 ## 150300000         7         6        17        42        14 ## 150400000         4         5         4        14        44 regions <- pixelsToMatrices(x=gi, buffer=2) IRanges::width(regions) ## $first ## [1] 500001 500001 500001 500001 ##  ## $second ## [1] 500001 500001 500001 500001 pullHicMatrices(x=regions, files=hicFiles, binSize=100e3) ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 5x5 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"rectangular-matrices","dir":"Articles","previous_headings":"When to use pullHicMatrices()","what":"Rectangular matrices","title":"Pulling Hi-C data with mariner","text":"previous example returns square count matrices width anchors interaction. mariner also supports rectangular count matrices widths rows columns equal. example, can define 300x600 Kb interactions setting width first anchor 300 Kb second anchor 600 Kb. set binSize 100 Kb produces InteractionArray object count matrices 3 rows 6 columns. Extracting square rectangular matrices data results InteractionArray objects. See InteractionArray class learn accessing data objects.","code":"## Create 300x600 Kb regions regions <- binPairs(     x=gi,     binSize=c(300e3, 600e3),     pos1=\"start\",     pos2=\"start\" ) ## Pull Hi-C matrices matrices <- pullHicMatrices(x=regions, files=hicFiles, binSize=100e3) matrices ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 3x6 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 8 counts(matrices, showDimnames=TRUE) ## <3 x 6 x 4 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##          51000000 51100000 51200000 51300000 51400000 51500000 ## 51000000       53       15        5        1        4        1 ## 51100000       15       68       19        8        5        5 ## 51200000        5       19       69       12        2        2 ##  ## ... ##  ## ,,4,hic2 ##           150000000 150100000 150200000 150300000 150400000 150500000 ## 150000000        24        11         3         7         4         1 ## 150100000        11        26         2         6         5         0 ## 150200000         3         2        41        17         4         9"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"variable-matrices","dir":"Articles","previous_headings":"When to use pullHicMatrices()","what":"Variable matrices","title":"Pulling Hi-C data with mariner","text":"mariner also supports extracting count matrices different dimensions interaction. example, three interactions dimensions 1x3, 3x3, 3x2 pulling matrices binSize 100e3: resulting object class InteractionJaggedArray. class different previous examples classes InteractionArray inherits designed regular, rectangular data types. custom class called JaggedArray used hold irregular, jagged, arrays data. counts() function returns JaggedArray objects containing Hi-C count data interaction .hic file. See InteractionJaggedArray class section learn accessing transforming data InteractionJaggedArray JaggedArray objects.","code":"## Interactions of different dimensions regions <- read.table(     text=\"     1 51000000 51100000 1 51000000 51300000     1 150000000 150300000 1 150000000 150300000     2 51000000 51300000 2 51000000 51200000     \" ) regions <- as_ginteractions(regions)  ## Pull Hi-C matrices matrices <- pullHicMatrices(x=regions, files=hicFiles, binSize=100e3) matrices ## class: InteractionJaggedArray ## dim: 3 interaction(s), 2 file(s), variable count matrix(es) ## metadata(3): binSize, norm, matrix ## colData: hic1, hic2 ## colData names(2): files, fileNames ## HDF5: /tmp/Rtmpah11Nc/file7e9d1ea8c63a.h5 counts(matrices) ## <n x m x 3 x 2> JaggedArray: ## ,,1,1 ## <1 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   53   15    5 ##  ## ... ##  ## ,,3,2 ## <3 x 2> matrix ##      [,1] [,2] ## [1,]   16    6 ## [2,]    6   17 ## [3,]    3    7"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"interactionmatrix-class","dir":"Articles","previous_headings":"","what":"InteractionMatrix class","title":"Pulling Hi-C data with mariner","text":"InteractionMatrix class extends InteractionSet SummarizedExperiment classes. Therefore, also inherits accessors methods objects. example, can access original interactions, metadata experiment, row column metadata, subset index slices objects. following sections highlight useful accessors methods InteractionMatrix using example object:","code":"## Load mariner library(mariner)  ## Use example .hic files from ExperimentHub hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) names(hicFiles) <- c(\"hic1\", \"hic2\")  ## Make some example interactions gi <- read.table(     text=\"     1 51000000 51100000 1 51000000 51100000     1 150000000 150100000 1 150000000 150100000     2 51000000 51100000 2 51000000 51100000     2 150000000 150100000 2 150000000 150100000     \" ) gi <- as_ginteractions(gi)  ## InteractionMatrix imat <- pullHicPixels(x=gi, files=hicFiles, binSize=100e3)"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"common-accessors","dir":"Articles","previous_headings":"InteractionMatrix class","what":"Common accessors","title":"Pulling Hi-C data with mariner","text":"","code":"## Show method imat ## class: InteractionMatrix  ## dim: count matrix with 4 interactions and 2 file(s) ## metadata(3): binSize norm matrix ## assays(1): counts ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 ## Dimensions dim(imat) ## [1] 4 2 ## Metadata about Hi-C extraction metadata(imat) ## $binSize ## [1] 1e+05 ##  ## $norm ## [1] \"NONE\" ##  ## $matrix ## [1] \"observed\" ## Metadata about interactions SummarizedExperiment::rowData(imat) ## DataFrame with 4 rows and 0 columns ## Metadata about columns SummarizedExperiment::colData(imat) ## DataFrame with 2 rows and 2 columns ##                       files         fileNames ##                 <character>       <character> ## hic1 /home/runner/.cache/.. 7ac72d939a64_8147 ## hic2 /home/runner/.cache/.. 7ac77bf7b6f2_8148 ## Interactions interactions(imat) ## GInteractions object with 4 interactions and 0 metadata columns: ##       seqnames1             ranges1     seqnames2             ranges2 ##           <Rle>           <IRanges>         <Rle>           <IRanges> ##   [1]         1   51000000-51100000 ---         1   51000000-51100000 ##   [2]         1 150000000-150100000 ---         1 150000000-150100000 ##   [3]         2   51000000-51100000 ---         2   51000000-51100000 ##   [4]         2 150000000-150100000 ---         2 150000000-150100000 ##   ------- ##   regions: 4 ranges and 0 metadata columns ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths ## Count matrices counts(imat) ## <4 x 2> DelayedMatrix object of type \"double\": ##      hic1 hic2 ## [1,]   53   49 ## [2,]   63   56 ## [3,]   36   16 ## [4,]   43   24"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"indexing-and-subsetting","dir":"Articles","previous_headings":"InteractionMatrix class","what":"Indexing and subsetting","title":"Pulling Hi-C data with mariner","text":"can subset interactions files object directly first position subsets interactions second subsets files.","code":"imat[1:3] |> counts() ## <3 x 2> DelayedMatrix object of type \"double\": ##      hic1 hic2 ## [1,]   53   49 ## [2,]   63   56 ## [3,]   36   16 imat[3:1] |> counts() ## <3 x 2> DelayedMatrix object of type \"double\": ##      hic1 hic2 ## [1,]   36   16 ## [2,]   63   56 ## [3,]   53   49 imat[,2] |> counts() ## <4 x 1> DelayedMatrix object of type \"double\": ##      hic2 ## [1,]   49 ## [2,]   56 ## [3,]   16 ## [4,]   24 imat[1,1] |> counts() ## <1 x 1> DelayedMatrix object of type \"double\": ##      hic1 ## [1,]   53"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"concatenating","dir":"Articles","previous_headings":"InteractionMatrix class","what":"Concatenating","title":"Pulling Hi-C data with mariner","text":"Use rbind() cbind() functions combine interactions row-wise column-wise, respectively. Note column metadata must using rbind row interactions must using cbind.","code":"cbind(imat[,1], imat[,2]) ## class: InteractionMatrix  ## dim: count matrix with 4 interactions and 2 file(s) ## metadata(3): binSize norm matrix ## assays(1): counts ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 rbind(imat[1:2,], imat[3:4,]) ## class: InteractionMatrix  ## dim: count matrix with 4 interactions and 2 file(s) ## metadata(3): binSize norm matrix ## assays(1): counts ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 rbind(imat[1:2,1], imat[3:4,2]) ## Error in `rbind()`: ## ! Can't rbind InteractionMatrix objects with different colData. cbind(imat[1:2,1], imat[3:4,2]) ## Error in `cbind()`: ## ! interactions must be identical in 'cbind'"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"overlapping","dir":"Articles","previous_headings":"InteractionMatrix class","what":"Overlapping","title":"Pulling Hi-C data with mariner","text":"Methods subsetByOverlaps(), findOverlaps(), countOverlaps(), overlapsAny() inherited InteractionSet IRanges packages. See documentation vignettes packages usage behavior functions.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"interactionarray-class","dir":"Articles","previous_headings":"","what":"InteractionArray class","title":"Pulling Hi-C data with mariner","text":"InteractionArray class extends InteractionSet SummarizedExperiment classes. Therefore, also inherits accessors methods objects. example, can access original interactions, metadata experiment, row column metadata, subset index slices objects. Unlike InteractionMatrix class returns “interaction--Hi-C” matrix, InteractionArray class returns count matrices interaction .hic file. results 4-dimensional array, first two dimensions rows columns count matrices, third dimension supplied interactions, fourth dimension supplied .hic files. stored DelayedArray accessible via counts() accessor. following sections highlight useful accessors methods InteractionMatrix using example object:","code":"## Load mariner library(mariner)  ## Use example .hic files from ExperimentHub hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) names(hicFiles) <- c(\"hic1\", \"hic2\")  ## Create 500x500 Kb regions regions <- read.table(     text=\"     1 51000000 51500000 1 51000000 51500000     1 150000000 150500000 1 150000000 150500000     2 51000000 51500000 2 51000000 51500000     2 150000000 150500000 2 150000000 150500000     \" ) regions <- as_ginteractions(regions)  ## InteractionArray ia <- pullHicMatrices(x=regions, files=hicFiles, binSize=100e3)"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"common-accessors-1","dir":"Articles","previous_headings":"InteractionArray class","what":"Common accessors","title":"Pulling Hi-C data with mariner","text":"","code":"## Show method ia ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 5x5 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 ## Dimensions dim(ia) ## [1] 4 2 ## Metadata about Hi-C extraction metadata(ia) ## $binSize ## [1] 1e+05 ##  ## $norm ## [1] \"NONE\" ##  ## $matrix ## [1] \"observed\" ## Metadata about interactions SummarizedExperiment::rowData(ia) ## DataFrame with 4 rows and 0 columns ## Metadata about columns SummarizedExperiment::colData(ia) ## DataFrame with 2 rows and 2 columns ##                       files         fileNames ##                 <character>       <character> ## hic1 /home/runner/.cache/.. 7ac72d939a64_8147 ## hic2 /home/runner/.cache/.. 7ac77bf7b6f2_8148 ## Interactions interactions(ia) ## GInteractions object with 4 interactions and 0 metadata columns: ##       seqnames1             ranges1     seqnames2             ranges2 ##           <Rle>           <IRanges>         <Rle>           <IRanges> ##   [1]         1   51000000-51500000 ---         1   51000000-51500000 ##   [2]         1 150000000-150500000 ---         1 150000000-150500000 ##   [3]         2   51000000-51500000 ---         2   51000000-51500000 ##   [4]         2 150000000-150500000 ---         2 150000000-150500000 ##   ------- ##   regions: 4 ranges and 0 metadata columns ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths ## Count matrices counts(ia) ## <5 x 5 x 4 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   53   15    5    1    4 ## [2,]   15   68   19    8    5 ## [3,]    5   19   69   12    2 ## [4,]    1    8   12   48   13 ## [5,]    4    5    2   13   48 ##  ## ... ##  ## ,,4,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   24   11    3    7    4 ## [2,]   11   26    2    6    5 ## [3,]    3    2   41   17    4 ## [4,]    7    6   17   42   14 ## [5,]    4    5    4   14   44 ## Counts with start bins for anchor1 and 2 counts(ia, showDimnames=TRUE) ## <5 x 5 x 4 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##          51000000 51100000 51200000 51300000 51400000 ## 51000000       53       15        5        1        4 ## 51100000       15       68       19        8        5 ## 51200000        5       19       69       12        2 ## 51300000        1        8       12       48       13 ## 51400000        4        5        2       13       48 ##  ## ... ##  ## ,,4,hic2 ##           150000000 150100000 150200000 150300000 150400000 ## 150000000        24        11         3         7         4 ## 150100000        11        26         2         6         5 ## 150200000         3         2        41        17         4 ## 150300000         7         6        17        42        14 ## 150400000         4         5         4        14        44"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"indexing-and-subsetting-1","dir":"Articles","previous_headings":"InteractionArray class","what":"Indexing and subsetting","title":"Pulling Hi-C data with mariner","text":"can subset interactions files object directly first position subsets interactions second subsets files. Subsetting indexing can also done DelayedArray object accessed counts(). example, following code shows access top left corner count matrix first interaction .hic file.","code":"ia[1:3] |> counts() ## <5 x 5 x 3 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   53   15    5    1    4 ## [2,]   15   68   19    8    5 ## [3,]    5   19   69   12    2 ## [4,]    1    8   12   48   13 ## [5,]    4    5    2   13   48 ##  ## ... ##  ## ,,3,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   16    6    3    2    4 ## [2,]    6   17    7    2    0 ## [3,]    3    7   23    6    0 ## [4,]    2    2    6   23    2 ## [5,]    4    0    0    2   24 ia[3:1] |> counts() ## <5 x 5 x 3 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   36    5    5    2    4 ## [2,]    5   30   13    4    1 ## [3,]    5   13   22    6    6 ## [4,]    2    4    6   30    4 ## [5,]    4    1    6    4   21 ##  ## ... ##  ## ,,3,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   49   27    4    5    3 ## [2,]   27   49   13    2    6 ## [3,]    4   13   56    7    8 ## [4,]    5    2    7   48   10 ## [5,]    3    6    8   10   47 ia[,2] |> counts() ## <5 x 5 x 4 x 1> DelayedArray object of type \"double\": ## ,,1,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   49   27    4    5    3 ## [2,]   27   49   13    2    6 ## [3,]    4   13   56    7    8 ## [4,]    5    2    7   48   10 ## [5,]    3    6    8   10   47 ##  ## ... ##  ## ,,4,hic2 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   24   11    3    7    4 ## [2,]   11   26    2    6    5 ## [3,]    3    2   41   17    4 ## [4,]    7    6   17   42   14 ## [5,]    4    5    4   14   44 ia[1,1] |> counts() ## <5 x 5 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] [,4] [,5] ## [1,]   53   15    5    1    4 ## [2,]   15   68   19    8    5 ## [3,]    5   19   69   12    2 ## [4,]    1    8   12   48   13 ## [5,]    4    5    2   13   48 counts(ia)[1:3, 1:3, 1, 1] ## <3 x 3> DelayedMatrix object of type \"double\": ##      [,1] [,2] [,3] ## [1,]   53   15    5 ## [2,]   15   68   19 ## [3,]    5   19   69"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"concatenating-1","dir":"Articles","previous_headings":"InteractionArray class","what":"Concatenating","title":"Pulling Hi-C data with mariner","text":"Use rbind() cbind() functions combine interactions row-wise column-wise, respectively. Note column metadata must using rbind row interactions must using cbind.","code":"cbind(ia[,1], ia[,2]) ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 5x5 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 rbind(ia[1:2,], ia[3:4,]) ## class: InteractionArray  ## dim: 4 interaction(s), 2 file(s), 5x5 count matrix(es) ## metadata(3): binSize norm matrix ## assays(3): counts rownames colnames ## rownames: NULL ## rowData names(0): ## colnames(2): hic1 hic2 ## colData names(2): files fileNames ## type: GInteractions ## regions: 4 rbind(ia[1:2,1], ia[3:4,2]) ## Error in `rbind()`: ## ! Can't rbind InteractionArray objects with different colData. cbind(ia[1:2,1], ia[3:4,2]) ## Error in `cbind()`: ## ! interactions must be identical in 'cbind'"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"overlapping-1","dir":"Articles","previous_headings":"InteractionArray class","what":"Overlapping","title":"Pulling Hi-C data with mariner","text":"Methods subsetByOverlaps(), findOverlaps(), countOverlaps(), overlapsAny() inherited InteractionSet IRanges packages. See documentation vignettes packages usage behavior functions.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"interactionjaggedarray-class","dir":"Articles","previous_headings":"","what":"InteractionJaggedArray class","title":"Pulling Hi-C data with mariner","text":"InteractionJaggedArray class new class designed holding irregularly sized count matrices, also known “ragged” “jagged” arrays along important information extracted Hi-C data. count matrices managed JaggedArray class analogous DelayedArray class. JaggedArray data stored -disk HDF5 file, subsetting/indexing operations delayed similarly DelayedArray. Continue reading learn use InteractionJaggedArray JaggedArray objects, convert InteractionArray DelayedArray objects regularize() function downstream analysis.","code":"## Load mariner library(mariner)  ## Use example .hic files from ExperimentHub hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) names(hicFiles) <- c(\"hic1\", \"hic2\")  ## Create regions of different dimensions regions <- read.table(     text=\"     1 51000000 51100000 1 51000000 51300000     1 150000000 150300000 1 150000000 150300000     2 51000000 51300000 2 51000000 51200000     \" ) regions <- as_ginteractions(regions)  ## InteractionJaggedArray ija <- pullHicMatrices(x=regions, files=hicFiles, binSize=100e3)"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"common-accessors-2","dir":"Articles","previous_headings":"InteractionJaggedArray class","what":"Common accessors","title":"Pulling Hi-C data with mariner","text":"variable dimensions jagged arrays can accessed dim() function: counts() function returns JaggedArray can converted nested R list .list() function, outer level refers .hic file inner level contains matrix interaction.","code":"## Show method ija ## class: InteractionJaggedArray ## dim: 3 interaction(s), 2 file(s), variable count matrix(es) ## metadata(3): binSize, norm, matrix ## colData: hic1, hic2 ## colData names(2): files, fileNames ## HDF5: /tmp/Rtmpah11Nc/file7e9d6360b925.h5 ## Dimensions dim(ija) ## $interactions ## [1] 3 ##  ## $files ## [1] 2 ##  ## $rows ## [1] 1 3 3 ##  ## $cols ## [1] 3 3 2 ## Metadata about Hi-C extraction metadata(ija) ## $binSize ## [1] 1e+05 ##  ## $norm ## [1] \"NONE\" ##  ## $matrix ## [1] \"observed\" ## Metadata about columns SummarizedExperiment::colData(ija) ## DataFrame with 2 rows and 2 columns ##                       files         fileNames ##                 <character>       <character> ## hic1 /home/runner/.cache/.. 7ac72d939a64_8147 ## hic2 /home/runner/.cache/.. 7ac77bf7b6f2_8148 ## Access HDF5 filepath path(ija) ## [1] \"/tmp/Rtmpah11Nc/file7e9d6360b925.h5\" ## Interactions interactions(ija) ## GInteractions object with 3 interactions and 0 metadata columns: ##       seqnames1             ranges1     seqnames2             ranges2 ##           <Rle>           <IRanges>         <Rle>           <IRanges> ##   [1]         1   51000000-51100000 ---         1   51000000-51300000 ##   [2]         1 150000000-150300000 ---         1 150000000-150300000 ##   [3]         2   51000000-51300000 ---         2   51000000-51200000 ##   ------- ##   regions: 5 ranges and 0 metadata columns ##   seqinfo: 2 sequences from an unspecified genome; no seqlengths ## Count matrices as JaggedArray ja <- counts(ija) ja ## <n x m x 3 x 2> JaggedArray: ## ,,1,1 ## <1 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   53   15    5 ##  ## ... ##  ## ,,3,2 ## <3 x 2> matrix ##      [,1] [,2] ## [1,]   16    6 ## [2,]    6   17 ## [3,]    3    7 as.list(ja) ## [[1]] ## [[1]][[1]] ##      [,1] [,2] [,3] ## [1,]   53   15    5 ##  ## [[1]][[2]] ##      [,1] [,2] [,3] ## [1,]   63   25   15 ## [2,]   25   68   28 ## [3,]   15   28   87 ##  ## [[1]][[3]] ##      [,1] [,2] ## [1,]   36    5 ## [2,]    5   30 ## [3,]    5   13 ##  ##  ## [[2]] ## [[2]][[1]] ##      [,1] [,2] [,3] ## [1,]   49   27    4 ##  ## [[2]][[2]] ##      [,1] [,2] [,3] ## [1,]   56   26    8 ## [2,]   26   60   14 ## [3,]    8   14   89 ##  ## [[2]][[3]] ##      [,1] [,2] ## [1,]   16    6 ## [2,]    6   17 ## [3,]    3    7"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"indexing-and-subsetting-2","dir":"Articles","previous_headings":"InteractionJaggedArray class","what":"Indexing and subsetting","title":"Pulling Hi-C data with mariner","text":"can subset interactions files object directly first position subsets interactions second subsets files. Notice indexing results subset data dimensions automatically coerced InteractionArray DelayedArray. can also subset index JaggedArray object selecting desired interactions(s) third dimension .hic file(s) fourth dimension. Since first two dimensions variable, subsetting/indexing supported. selection results DelayedArray normal indexing rules apply:","code":"ija[1:2] |> counts() ## <n x m x 2 x 2> JaggedArray: ## ,,1,1 ## <1 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   53   15    5 ##  ## ... ##  ## ,,2,2 ## <3 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   56   26    8 ## [2,]   26   60   14 ## [3,]    8   14   89 ija[2:1] |> counts() ## <n x m x 2 x 2> JaggedArray: ## ,,1,1 ## <3 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   63   25   15 ## [2,]   25   68   28 ## [3,]   15   28   87 ##  ## ... ##  ## ,,2,2 ## <1 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   49   27    4 ija[,2] |> counts() ## <n x m x 3 x 1> JaggedArray: ## ,,1,1 ## <1 x 3> matrix ##      [,1] [,2] [,3] ## [1,]   49   27    4 ##  ## ... ##  ## ,,3,1 ## <3 x 2> matrix ##      [,1] [,2] ## [1,]   16    6 ## [2,]    6   17 ## [3,]    3    7 ija[1,1] |> counts() ## <1 x 3 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,hic1 ##      [,1] [,2] [,3] ## [1,]   53   15    5 ija[3,1] |> class() ## [1] \"InteractionArray\" ## attr(,\"package\") ## [1] \"mariner\" ija[3,1] |> counts() |> class() ## [1] \"DelayedArray\" ## attr(,\"package\") ## [1] \"DelayedArray\" ja[,,3,2] ## <3 x 2 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,1 ##      [,1] [,2] ## [1,]   16    6 ## [2,]    6   17 ## [3,]    3    7 ja[,,3,2][1:2,1,1,1] ## [1] 16  6"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"concatenating-2","dir":"Articles","previous_headings":"InteractionJaggedArray class","what":"Concatenating","title":"Pulling Hi-C data with mariner","text":"Concatenating InteractionJaggedArray JaggedArray objects currently supported. need functionality please post issue mariner repository (even better) submit pull request implementation.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"overlapping-2","dir":"Articles","previous_headings":"InteractionJaggedArray class","what":"Overlapping","title":"Pulling Hi-C data with mariner","text":"Methods subsetByOverlaps(), findOverlaps(), countOverlaps(), overlapsAny() inherited InteractionSet IRanges packages. See documentation vignettes packages usage behavior functions.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"converting-to-regular-arrays","dir":"Articles","previous_headings":"InteractionJaggedArray class","what":"Converting to regular arrays","title":"Pulling Hi-C data with mariner","text":"downstream aggregation visualization, helpful convert irregular/jagged arrays regular arrays. regularize() function stretches (optionally) scales count matrices desired rectangular (square) matrices dimensions supplied ndim. function works InteractionJaggedArray JaggedArray objects. using regularize() extracting counts, can take advantage block parallel processing functionality aggregating aggHicMatrices():","code":"regularize(x=ija, ndim=c(3,3)) |> counts() ## Loading required namespace: fields ## <3 x 3 x 3 x 2> DelayedArray object of type \"double\": ## ,,1,hic1 ##            [,1]       [,2]       [,3] ## [1,] 0.24200913 0.06849315 0.02283105 ## [2,] 0.24200913 0.06849315 0.02283105 ## [3,] 0.24200913 0.06849315 0.02283105 ##  ## ,,2,hic1 ##            [,1]       [,2]       [,3] ## [1,] 0.17796610 0.07062147 0.04237288 ## [2,] 0.07062147 0.19209040 0.07909605 ## [3,] 0.04237288 0.07909605 0.24576271 ##  ## ,,3,hic1 ##            [,1]       [,2]       [,3] ## [1,] 0.25531915 0.14539007 0.03546099 ## [2,] 0.03546099 0.12411348 0.21276596 ## [3,] 0.03546099 0.06382979 0.09219858 ##  ## ,,1,hic2 ##            [,1]       [,2]       [,3] ## [1,] 0.20416667 0.11250000 0.01666667 ## [2,] 0.20416667 0.11250000 0.01666667 ## [3,] 0.20416667 0.11250000 0.01666667 ##  ## ,,2,hic2 ##            [,1]       [,2]       [,3] ## [1,] 0.18604651 0.08637874 0.02657807 ## [2,] 0.08637874 0.19933555 0.04651163 ## [3,] 0.02657807 0.04651163 0.29568106 ##  ## ,,3,hic2 ##            [,1]       [,2]       [,3] ## [1,] 0.19393939 0.13333333 0.07272727 ## [2,] 0.07272727 0.13939394 0.20606061 ## [3,] 0.03636364 0.06060606 0.08484848 regularize(x=ja, ndim=c(3,3)) ## <3 x 3 x 3 x 2> HDF5Array object of type \"double\": ## ,,1,1 ##            [,1]       [,2]       [,3] ## [1,] 0.24200913 0.06849315 0.02283105 ## [2,] 0.24200913 0.06849315 0.02283105 ## [3,] 0.24200913 0.06849315 0.02283105 ##  ## ,,2,1 ##            [,1]       [,2]       [,3] ## [1,] 0.17796610 0.07062147 0.04237288 ## [2,] 0.07062147 0.19209040 0.07909605 ## [3,] 0.04237288 0.07909605 0.24576271 ##  ## ,,3,1 ##            [,1]       [,2]       [,3] ## [1,] 0.25531915 0.14539007 0.03546099 ## [2,] 0.03546099 0.12411348 0.21276596 ## [3,] 0.03546099 0.06382979 0.09219858 ##  ## ,,1,2 ##            [,1]       [,2]       [,3] ## [1,] 0.20416667 0.11250000 0.01666667 ## [2,] 0.20416667 0.11250000 0.01666667 ## [3,] 0.20416667 0.11250000 0.01666667 ##  ## ,,2,2 ##            [,1]       [,2]       [,3] ## [1,] 0.18604651 0.08637874 0.02657807 ## [2,] 0.08637874 0.19933555 0.04651163 ## [3,] 0.02657807 0.04651163 0.29568106 ##  ## ,,3,2 ##            [,1]       [,2]       [,3] ## [1,] 0.19393939 0.13333333 0.07272727 ## [2,] 0.07272727 0.13939394 0.20606061 ## [3,] 0.03636364 0.06060606 0.08484848 regularize(x=ija, ndim=c(3,3), nBlocks=1) |>     aggHicMatrices(nBlocks=1) ## / Reading and realizing block 1/1 ... OK ## \\ Processing it ... OK ## <3 x 3> DelayedMatrix object of type \"double\": ##           [,1]      [,2]      [,3] ## [1,] 1.2594470 0.6167168 0.2166369 ## [2,] 0.7113643 0.8359265 0.5839320 ## [3,] 0.5869514 0.4310367 0.7579886"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"other-pullhic-arguments","dir":"Articles","previous_headings":"","what":"Other pullHic* arguments","title":"Pulling Hi-C data with mariner","text":"previous sections provided examples using pullHicPixels() pullHicMatrices(), extracting Hi-C pixels count matrices, respectively. functions require three mandatory arguments: x interactions, files .hic file paths, binSize Hi-C resolution. Additionally, remaining arguments allow greater control Hi-C data extraction process. arguments control type Hi-C data extracted, efficiency extraction, specify storage location extracted data. section delve deeper utilization arguments effectively extract Hi-C data.","code":""},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"normalization-and-matrix-type","dir":"Articles","previous_headings":"Other pullHic* arguments","what":"Normalization and matrix type","title":"Pulling Hi-C data with mariner","text":"norm matrix arguments passed strawr extraction step. norm refers Hi-C normalization limited pre-computed normalizations .hic file. Use readHicNormTypes() function strawr package see available normalizations. matrix argument specifies type values extract. default “observed” contact frequency values. options include “expected” contact frequency “oe” observed/expected values. -depth description matrix types see Durand et al. 2016","code":"pullHicPixels(x=gi, files=hicFiles, binSize=100e3, norm=\"none\") ## Error in `.checkStrawArgs()`: ## ! `norm` must be one of \"KR\", \"VC\", \"VC_SQRT\", or \"NONE\", not \"none\". ## ℹ Did you mean \"NONE\"? pullHicPixels(x=gi, files=hicFiles, binSize=100e3, matrix=\"oe\") |>     counts() ## <4 x 2> DelayedMatrix object of type \"double\": ##           hic1      hic2 ## [1,] 1.0564467 1.1543123 ## [2,] 1.2557763 1.3192140 ## [3,] 0.9188343 0.5032488 ## [4,] 1.0974965 0.7548732"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"the-half-parameter","dir":"Articles","previous_headings":"Other pullHic* arguments","what":"The half parameter","title":"Pulling Hi-C data with mariner","text":"Hi-C matrix square, symmetric matrix captures frequency pair-wise interactions genomic loci. words, point Hi-C matrix represents interaction frequency two pairs, anchors, genomic regions. mariner, Hi-C matrix oriented origin (lowest genomic coordinates) upper left corner linear genomic position increasing right.  first anchor, genomic locus, corresponds vertical axis (rows matrix) second anchor corresponds horizontal axis (columns matrix). Together, anchors specify two-dimensional region Hi-C matrix.  relative positions anchors determines “half” matrix data extracted. genomic position first anchor less second anchor region resides upper trianglar.  genomic position first anchor greater second anchor region resides lower triangular.  first second anchors equal region diagonal values mirrored across diagonal.  summarize: first < second - upper triangular first > second - lower triangular first == second - mirrored diagonal half parameter controls portion Hi-C matrix returned, regardless anchor position. half=\"upper\" upper-triangular data returned. half=\"lower\" lower-triangular data returned. half=\"\" returns upper lower triangular data. NA values returned portions matrix match region matrix specified half. figure code show data returned region resides diagonal, crossing upper lower triangular Hi-C matrix.  Since chromosomes inherent order linear genomic space, half parameter ignored interchromosomal interactions. pullHicPixels() behaves way half parameter.","code":"## Hic file hic <- marinerData::LEUK_HEK_PJA27_inter_30.hic()  ## On-diagonal interaction diagonal <- as_ginteractions(read.table(text=\"     1 51000000 51300000 1 51000000 51300000 \"))  ## half=\"upper\" pullHicMatrices(x=diagonal, files=hic, binSize=100e3, half=\"upper\") |>     counts() ## <3 x 3 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,EH8088 ##      [,1] [,2] [,3] ## [1,]   53   15    5 ## [2,]   NA   68   19 ## [3,]   NA   NA   69 ## half=\"lower\" pullHicMatrices(x=diagonal, files=hic, binSize=100e3, half=\"lower\") |>     counts() ## <3 x 3 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,EH8088 ##      [,1] [,2] [,3] ## [1,]   53   NA   NA ## [2,]   15   68   NA ## [3,]    5   19   69 ## half=\"both\" pullHicMatrices(x=diagonal, files=hic, binSize=100e3, half=\"both\") |>     counts() ## <3 x 3 x 1 x 1> DelayedArray object of type \"double\": ## ,,1,EH8088 ##      [,1] [,2] [,3] ## [1,]   53   15    5 ## [2,]   15   68   19 ## [3,]    5   19   69"},{"path":"http://ericscottdavis.com/mariner/articles/pull_hic.html","id":"changing-blocksize-for-large-data","dir":"Articles","previous_headings":"Other pullHic* arguments","what":"Changing blockSize for large data","title":"Pulling Hi-C data with mariner","text":"pullHicPixels() pullHicMatrices() allow tune efficiency memory-usage Hi-C data extraction grouping nearby interactions blocks. block data loaded memory, assigned interactions, written back disk HDF5 file. can modify blockSize (base-pairs) control size number blocks extracted. Pulling larger blocks decreases run-time, requires RAM store data smaller blocks increase run-time, allows extract counts large Hi-C files may otherwise fit memory. Adjustments blockSize can optimize efficiency extraction. trade-size block number iterations required extract interactions. size placement interactions genome also affects blockSize. example, worst-case performance scenario extracting interaction individually (setting blockSize width interaction). Generally, efficient extract largest blocks possible. data small enough, pulling whole chromosomes usually efficient. However, optimal blockSize highly dependent interactions .hic files, may want experiment parameter find best trade-data. compressionLevel chunkSize parameters control way extracted data written back HDF5-file. See ?pullHicMatrices ?pullHicPixels -depth description parameters.","code":""},{"path":"http://ericscottdavis.com/mariner/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Davis. Author, maintainer. Sarah Parker. Author.","code":""},{"path":"http://ericscottdavis.com/mariner/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eric S. Davis, Sarah M. Parker, Douglas H. Phanstiel (2022). Mariner: Explore Hi-Cs. R package version 1.1.0. https://doi.org/10.5281/zenodo.7514362","code":"@Unpublished{,   title = {Mariner: Explore the Hi-Cs},   author = {Eric S. Davis and Sarah M. Parker and Douglas H. Phanstiel},   year = {2022},   note = {R package version 1.1.0},   doi = {10.5281/zenodo.7514361}, }"},{"path":[]},{"path":"http://ericscottdavis.com/mariner/index.html","id":"why-mariner","dir":"","previous_headings":"","what":"Why mariner?","title":"Mariner: Explore the Hi-Cs","text":"Disruption aberrant formation chromatin interactions can result developmental abnormalities disease. Therefore, deriving biological insights 3D chromatin structure experiments, Hi-C Micro-C, essential understanding correcting human disease. mariner R/Bioconductor package exploring Hi-C data. enables users flexibly manipulate, extract, aggregate chromatin interaction data quickly efficiently. One ecosystemmariner extends common Bioconductor classes, leveraging thousands existing tools analyzing visualizing genomic data. Modular designmariner’s functions can combined chained various ways produce custom workflows. Fast efficientmariner leverages HDF5 store large results uses block processing minimize hardware requirements.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"key-features","dir":"","previous_headings":"","what":"Key features","title":"Mariner: Explore the Hi-Cs","text":"Manipulating Paired RangesConvert, bin, shift paired genomic ranges Clustering & Merging InteractionsGroup nearby interactions select one representative Extracting & Aggregating InteractionsPull Hi-C pixels matrices, aggregate files interactions Calculating Loop EnrichmentDetermine loop enrichment local background selection functions flexibility select foreground background.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mariner: Explore the Hi-Cs","text":"package can installed Bioconductor: development version can installed via GitHub:","code":"if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"mariner\") if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"EricSDavis/mariner\")"},{"path":"http://ericscottdavis.com/mariner/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Mariner: Explore the Hi-Cs","text":"outlines propose change mariner. (Template adapted tidyverse contribution guide).","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"setting-up-the-development-environment","dir":"","previous_headings":"Contributing","what":"Setting up the development environment","title":"Mariner: Explore the Hi-Cs","text":"Every push dev main branch repository builds pushes development container dockerhub mariner dependencies pre-installed. don’t docker, follow installation instructions https://www.docker.com/. Follow steps set reproducible development environment: terminal, clone repository: Pull latest image development image dockerhub: Run container: navigate localhost:8787 sign RStudio username=rstudio password=bioc. Alternatively, docker-compose can run yaml file:","code":"git clone https://github.com/EricSDavis/mariner docker pull ericsdavis/r-mariner docker run \\     --name mariner \\     -e PASSWORD=bioc \\     -p 8787:8787 \\     -v \"$(pwd)/mariner:/home/rstudio/mariner\" \\     ericsdavis/r-mariner:latest services:   mariner-devel:     container_name: mariner-devel     image: \"ericsdavis/r-mariner\"     ports:       - \"8787:8787\"     environment:       - PASSWORD=bioc     volumes:       - type: bind         source: ./mariner         target: /home/rstudio/mariner"},{"path":"http://ericscottdavis.com/mariner/index.html","id":"fixing-typos","dir":"","previous_headings":"Contributing","what":"Fixing typos","title":"Mariner: Explore the Hi-Cs","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"bigger-changes","dir":"","previous_headings":"Contributing","what":"Bigger changes","title":"Mariner: Explore the Hi-Cs","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"pull-request-process","dir":"","previous_headings":"Contributing","what":"Pull request process","title":"Mariner: Explore the Hi-Cs","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"EricSDavis/mariner\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"code-style","dir":"","previous_headings":"Contributing","what":"Code style","title":"Mariner: Explore the Hi-Cs","text":"use roxygen2 documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"http://ericscottdavis.com/mariner/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Mariner: Explore the Hi-Cs","text":"Please note mariner project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"CountMatrix Class — CountMatrix-class","title":"CountMatrix Class — CountMatrix-class","text":"class displaying dimnames associated count matrices resulting pullHicMatrices() |> counts(showDimnames=TRUE).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CountMatrix Class — CountMatrix-class","text":"","code":"# S4 method for CountMatrix show(object)"},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CountMatrix Class — CountMatrix-class","text":"object CountMatrix object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CountMatrix Class — CountMatrix-class","text":"CountMatrix object (clone DelayedArray) DelayedArray object dimnames  first two dimensions.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CountMatrix Class — CountMatrix-class","text":"class used attaching \"show\" method.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"CountMatrix Class — CountMatrix-class","text":"object InteractionArray object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/CountMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CountMatrix Class — CountMatrix-class","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loop pixels as GInteractions object pixels <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) |>     binPairs(binSize=100e3) #> see ?marinerData and browseVignettes('marinerData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Expand pixels to regions for pulling ## Hi-C submatrices regions <- pixelsToMatrices(x=pixels, buffer=5)  ## Extract 11x11 count matrices from the ## first 100 regions and 2 Hi-C files iarr <- pullHicMatrices(x=regions[1:100],                         files=hicFiles,                         binSize=100e3)  ## Display the start bin of each ## interaction in the count ## matrices counts(iarr, showDimnames=TRUE) #> <11 x 11 x 100 x 2> DelayedArray object of type \"double\": #> ,,1,FS #>          14200000 14300000 14400000 ... 15100000 15200000 #> 13900000        4        3        4   .        0        0 #> 14000000        6        9        3   .        2        1 #> 14100000       11        8        4   .        1        1 #> 14200000       38        8        4   .        0        0 #> 14300000        8       31       11   .        0        1 #> 14400000        4       11       35   .        3        2 #> 14500000        4        1       12   .        1        0 #> 14600000        2        0        4   .        3        2 #> 14700000        1        2        6   .        3        3 #> 14800000        1        1        4   .        2        2 #> 14900000        1        1        0   .        5        2 #>  #> ... #>  #> ,,100,WT #>          16300000 16400000 16500000 ... 17200000 17300000 #> 15600000        0        0        1   .        0        0 #> 15700000        2        0        0   .        1        1 #> 15800000        1        2        1   .        0        1 #> 15900000        2        3        2   .        1        1 #> 16000000        1        2        0   .        1        1 #> 16100000        6        3        2   .        0        0 #> 16200000        4        4        3   .        1        0 #> 16300000       25        8        5   .        0        1 #> 16400000        8       19        8   .        0        0 #> 16500000        5        8       32   .        0        5 #> 16600000        2        4        8   .        0        1"},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"Uses delegate `GInteractions` object initialization assign `GInteractions` slots.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"DelegatingGInteractions virtual class","code":""},{"path":"http://ericscottdavis.com/mariner/reference/DelegatingGInteractions-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Virtual class for delegating GInteractions — DelegatingGInteractions-class","text":"delegate `GInteractions` object used initialize `GInteractions`-specific slots.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":null,"dir":"Reference","previous_headings":"","what":"Access each portion of a GInteractions-like object — seqnames1","title":"Access each portion of a GInteractions-like object — seqnames1","text":"Access portion GInteractions-like object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access each portion of a GInteractions-like object — seqnames1","text":"","code":"seqnames1(x, ...)  seqnames2(x, ...)  start1(x, ...)  end1(x, ...)  start2(x, ...)  end2(x, ...)  # S4 method for GInteractions_OR_InteractionSet seqnames1(x)  # S4 method for GInteractions_OR_InteractionSet seqnames2(x)  # S4 method for GInteractions_OR_InteractionSet start1(x)  # S4 method for GInteractions_OR_InteractionSet end1(x)  # S4 method for GInteractions_OR_InteractionSet start2(x)  # S4 method for GInteractions_OR_InteractionSet end2(x)"},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access each portion of a GInteractions-like object — seqnames1","text":"x GInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access each portion of a GInteractions-like object — seqnames1","text":"vector values corresponding  requested component GInteractions-like object.  seqnames1 seqnames2 RLE coerced  character vector.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/GInteractions-accessors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access each portion of a GInteractions-like object — seqnames1","text":"","code":"library(InteractionSet) #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians ## Create example reference interactions objects gi <- read.table(text=\"     chr1 10 20 chr1 50 60     chr2 30 40 chr2 60 70     chr1 50 60 chr3 10 20\") |>     as_ginteractions()  iset <- InteractionSet(assays=matrix(nrow=3),                        interactions=gi)  ## Access vectors of values seqnames1(gi) #> [1] \"chr1\" \"chr2\" \"chr1\" start1(gi) #> [1] 10 30 50 end1(gi) #> [1] 20 40 60 seqnames2(gi) #> [1] \"chr1\" \"chr2\" \"chr3\" start2(gi) #> [1] 50 60 10 end2(gi) #> [1] 60 70 20  ## Also works for InteractionSet-like objects seqnames1(iset) #> [1] \"chr1\" \"chr2\" \"chr1\" start1(iset) #> [1] 10 30 50 end1(iset) #> [1] 20 40 60 seqnames2(iset) #> [1] \"chr1\" \"chr2\" \"chr3\" start2(iset) #> [1] 50 60 10 end2(iset) #> [1] 60 70 20"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InteractionArray Class — InteractionArray-class","title":"InteractionArray Class — InteractionArray-class","text":"`InteractionArray` class extends `InteractionSet` provide interface accessing submatrices pulled Hi-C data.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InteractionArray Class — InteractionArray-class","text":"","code":"InteractionArray(assays, interactions, ...)  # S4 method for ANY,GInteractions InteractionArray(assays, interactions, ...)  # S4 method for missing,missing InteractionArray(assays, interactions, ...)  # S4 method for InteractionArray show(object)  # S4 method for InteractionArray rbind(..., deparse.level = 1)  # S4 method for InteractionArray cbind(..., deparse.level = 1)"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InteractionArray Class — InteractionArray-class","text":"assays, interactions See ?InteractionSet ... InteractionArray objects combined column-wise. objects must class. object InteractionArray object. deparse.level integer scalar; see `?base::cbind` description argument.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InteractionArray Class — InteractionArray-class","text":"InteractionArray (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InteractionArray Class — InteractionArray-class","text":"class constructed `pullHicMatrices()` function paired ranges equal dimensions.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/InteractionArray-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InteractionArray Class — InteractionArray-class","text":"","code":"InteractionArray() #> class: InteractionArray  #> dim: 0 interaction(s), 0 file(s), 0x0 count matrix(es) #> metadata(0): #> assays(0): #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> type: GInteractions #> regions: 0"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InteractionJaggedArray Class — InteractionJaggedArray-class","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"`InteractionJaggedArray` class creates container storing interaction data alongside irregular arrays. allows storage matrices different dimensions -disk using HDF5. Subset InteractionJaggedArray interactions ([,]) Hi-C files ([,j]).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"","code":"# S4 method for InteractionJaggedArray show(object)  # S4 method for InteractionJaggedArray dim(x)  # S4 method for InteractionJaggedArray interactions(x)  # S4 method for InteractionJaggedArray metadata(x)  # S4 method for InteractionJaggedArray colData(x)  # S4 method for InteractionJaggedArray counts(object)  # S4 method for InteractionJaggedArray path(object)  # S4 method for InteractionJaggedArray length(x)  # S4 method for InteractionJaggedArray,ANY,ANY,ANY [(x, i, j)"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"object InteractionJaggedArray object. x InteractionJaggedArray object. Numeric vector indicating indices interactions extract. j Numeric vector indicating indices files extract.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"`InteractionJaggedArray()` creates  InteractionJaggedArray object. `dim()` returns list dimensions  interactions, files, count matrices. `interactions()` returns interactions. `metadata()` returns metadata. `colData()` returns column data. `counts()` returns JaggedArray object  containing count matrix information. `path()` returns character vector  path HDF5 file JaggedArray data. `length()` returns integer  number interactions InteractionJaggedArray object. Subsetting returns InteractionJaggedArray  InteractionArray object (see Details).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"object returned InteractionJaggedArray submatrices contain different dimensions. However, returned object automatically coerced InteractionArray possible (.e. dimensions rows columns submatrices .)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"interactions GInteractions object. colData Column data describing Hi-C files. counts JaggedArray object data. metadata List metadata describing object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InteractionJaggedArray Class — InteractionJaggedArray-class","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Create test interactions gi <- read.table(text=\"             1 51000000 51300000 1 51000000 51500000             2 52000000 52300000 3 52000000 52500000             1 150000000 150500000 1 150000000 150300000             2 52000000 52300000 2 52000000 52800000\") |>     as_ginteractions()  ## InteractionJaggedArray object iarr <- pullHicMatrices(gi, hicFiles, 100e03, half=\"both\") iarr #> class: InteractionJaggedArray #> dim: 4 interaction(s), 2 file(s), variable count matrix(es) #> metadata(3): binSize, norm, matrix #> colData: FS, WT #> colData names(2): files, fileNames #> HDF5: /tmp/Rtmpj6yIad/file7ac75fe7b829.h5  ## Show dimensions dim(iarr) #> $interactions #> [1] 4 #>  #> $files #> [1] 2 #>  #> $rows #> [1] 3 3 5 3 #>  #> $cols #> [1] 5 5 3 8 #>   ## Access interactions interactions(iarr) #> GInteractions object with 4 interactions and 0 metadata columns: #>       seqnames1             ranges1     seqnames2             ranges2 #>           <Rle>           <IRanges>         <Rle>           <IRanges> #>   [1]         1   51000000-51300000 ---         1   51000000-51500000 #>   [2]         2   52000000-52300000 ---         3   52000000-52500000 #>   [3]         1 150000000-150500000 ---         1 150000000-150300000 #>   [4]         2   52000000-52300000 ---         2   52000000-52800000 #>   ------- #>   regions: 7 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths  ## Access metadata metadata(iarr) #> $binSize #> [1] 1e+05 #>  #> $norm #> [1] \"NONE\" #>  #> $matrix #> [1] \"observed\" #>   ## Access colData colData(iarr) #> DataFrame with 2 rows and 2 columns #>                     files         fileNames #>               <character>       <character> #> FS /home/runner/.cache/.. 7ac72d939a64_8147 #> WT /home/runner/.cache/.. 7ac77bf7b6f2_8148  ## Access count matrices counts(iarr) #> <n x m x 4 x 2> JaggedArray: #> ,,1,1 #> <3 x 5> matrix #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> ... #>  #> ,,4,2 #> <3 x 8> matrix #>      [,1] [,2] [,3] ... [,7] [,8] #> [1,]   31    7    2   .    0    0 #> [2,]    7   22    5   .    1    1 #> [3,]    2    5   26   .    0    2 #>   ## Access path to HDF5 data path(iarr) #> [1] \"/tmp/Rtmpj6yIad/file7ac75fe7b829.h5\"  ## length length(iarr) #> [1] 4  ## Subsetting iarr[1:3,1] #> class: InteractionJaggedArray #> dim: 3 interaction(s), 1 file(s), variable count matrix(es) #> metadata(3): binSize, norm, matrix #> colData: FS #> colData names(2): files, fileNames #> HDF5: /tmp/Rtmpj6yIad/file7ac75fe7b829.h5"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-overlaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Overlap methods for InteractionJaggedArray — findOverlaps","title":"Overlap methods for InteractionJaggedArray — findOverlaps","text":"Overlap methods InteractionJaggedArray","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-overlaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overlap methods for InteractionJaggedArray — findOverlaps","text":"","code":"# S4 method for InteractionJaggedArray,InteractionJaggedArray findOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,Vector findOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,missing findOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,InteractionJaggedArray countOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,Vector countOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,missing countOverlaps(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   select = c(\"all\", \"first\", \"last\", \"arbitrary\"),   ignore.strand = TRUE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,InteractionJaggedArray overlapsAny(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,Vector overlapsAny(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,missing overlapsAny(   query,   subject,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,InteractionJaggedArray subsetByOverlaps(   x,   ranges,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   invert = FALSE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,Vector subsetByOverlaps(   x,   ranges,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   invert = FALSE,   ...,   use.region = \"both\" )  # S4 method for InteractionJaggedArray,missing subsetByOverlaps(   x,   ranges,   maxgap = -1L,   minoverlap = 0L,   type = c(\"any\", \"start\", \"end\", \"within\", \"equal\"),   invert = FALSE,   ...,   use.region = \"both\" )"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-overlaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overlap methods for InteractionJaggedArray — findOverlaps","text":"query, subject, x, ranges InteractionJaggedArray, Vector, GInteractions InteractionSet object, depending specified method. least one must `subject` can missing query InteractionJaggedArray object. maxgap, minoverlap, type, select see ?`findOverlaps` GenomicRanges package. ignore.strand see ?`findOverlaps` InteractionSet package information. ... see ?`findOverlaps` InteractionSet package information use.region see ?`findOverlaps` InteractionSet package information. invert Boolean (TRUE/FALSE) invert selection. Default TRUE.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-overlaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Overlap methods for InteractionJaggedArray — findOverlaps","text":"`findOverlaps` returns Hits object.  `countOverlaps` returns integer vector  overlaps interaction `query`.  `overlapsAny` returns logical vector  overlaps interaction `query`.  `subsetByOverlaps` returns overlapping  interactions InteractionJaggedArray.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionJaggedArray-overlaps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overlap methods for InteractionJaggedArray — findOverlaps","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Create test interactions gi <- read.table(text=\"             1 51000000 51300000 1 51000000 51500000             2 52000000 52300000 3 52000000 52500000             1 150000000 150500000 1 150000000 150300000             2 52000000 52300000 2 52000000 52800000\") |>     as_ginteractions()  ## InteractionJaggedArray object iarr <- pullHicMatrices(gi, hicFiles, 100e03, half=\"both\")  ## Shift first two ranges out of range gi2 <- c(binPairs(gi[1:2], binSize=100e3, pos1=-200e3), gi[3:4])  ## Find overlaps findOverlaps(iarr, gi2) #> Hits object with 2 hits and 0 metadata columns: #>       queryHits subjectHits #>       <integer>   <integer> #>   [1]         3           3 #>   [2]         4           4 #>   ------- #>   queryLength: 4 / subjectLength: 4 countOverlaps(iarr, gi2) #> [1] 0 0 1 1 countOverlaps(iarr, gi2, maxgap=100e3) #> [1] 1 1 1 1 overlapsAny(iarr, gi2) #> [1] FALSE FALSE  TRUE  TRUE subsetByOverlaps(iarr, gi2) #> class: InteractionJaggedArray #> dim: 2 interaction(s), 2 file(s), variable count matrix(es) #> metadata(3): binSize, norm, matrix #> colData: FS, WT #> colData names(2): files, fileNames #> HDF5: /tmp/Rtmpj6yIad/file7ac775759494.h5 subsetByOverlaps(iarr, gi2, invert=TRUE) #> class: InteractionArray  #> dim: 2 interaction(s), 2 file(s), 3x5 count matrix(es) #> metadata(3): binSize norm matrix #> assays(1): counts #> rownames: NULL #> rowData names(0): #> colnames(2): FS WT #> colData names(2): files fileNames #> type: GInteractions #> regions: 7"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":null,"dir":"Reference","previous_headings":"","what":"InteractionMatrix Class — InteractionMatrix-class","title":"InteractionMatrix Class — InteractionMatrix-class","text":"`InteractionMatrix` class extends `InteractionSet` provide interface accessing count matrix pulled Hi-C data.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"InteractionMatrix Class — InteractionMatrix-class","text":"","code":"InteractionMatrix(assays, interactions, ...)  # S4 method for ANY,GInteractions InteractionMatrix(assays, interactions, ...)  # S4 method for missing,missing InteractionMatrix(assays, interactions, ...)  # S4 method for InteractionMatrix show(object)  # S4 method for InteractionMatrix rbind(..., deparse.level = 1)  # S4 method for InteractionMatrix cbind(..., deparse.level = 1)"},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"InteractionMatrix Class — InteractionMatrix-class","text":"assays, interactions See ?InteractionSet ... InteractionMatrix objects combined column-wise. objects must class. object InteractionMatrix object. deparse.level integer scalar; see `?base::cbind` description argument.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"InteractionMatrix Class — InteractionMatrix-class","text":"InteractionMatrix (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"InteractionMatrix Class — InteractionMatrix-class","text":"class constructed `pullHicPixels()` function paired ranges define single pixel.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/InteractionMatrix-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"InteractionMatrix Class — InteractionMatrix-class","text":"","code":"InteractionMatrix() #> class: InteractionMatrix  #> dim: count matrix with 0 interactions and 0 file(s) #> metadata(0): #> assays(0): #> rownames: NULL #> rowData names(0): #> colnames: NULL #> colData names(0): #> type: GInteractions #> regions: 0"},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":null,"dir":"Reference","previous_headings":"","what":"JaggedArray Class — JaggedArray-class","title":"JaggedArray Class — JaggedArray-class","text":"`JaggedArray` class creates container storing irregular jagged array data. allows storage matrices different dimensions -disk using HDF5. Subset JaggedArray interactions ([,]) Hi-C files ([,j]). `.list` reads -disk data returns -memory list matrices.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JaggedArray Class — JaggedArray-class","text":"","code":"# S4 method for JaggedArray show(object)  # S4 method for JaggedArray,ANY,ANY,ANY [(x, i, j, ..., drop = TRUE)  # S4 method for JaggedArray as.list(x)  # S4 method for JaggedArray path(object)  # S4 method for JaggedArray dim(x)"},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"JaggedArray Class — JaggedArray-class","text":"object JaggedArray object. x JaggedArray object. Numeric vector indicating indices interactions extract. j Numeric vector indicating indices files extract. ... Additional indices subsetting multidimensional arrays. drop accepted JaggedArray objects.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"JaggedArray Class — JaggedArray-class","text":"`JaggedArray()` creates JaggedArray  object. Subsetting returns JaggedArray DelayedArray object  (see Details). `.list()` returns list matrices. `path()` returns character vector path  HDF5 file JaggedArray data. `dim()` returns list dimensions  JaggedArray rows, cols, interactions  files.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JaggedArray Class — JaggedArray-class","text":"NOTE: class designed specifically holding 4-dimensional JaggedArray <n x m x x j> n x m rows cols count matrices, interactions, j Hi-C files. object returned JaggedArray submatrices contain different dimensions. However, returned object automatically coerced DelayedArray possible (.e. dimensions rows columns .) JaggedArray data still stored -disk HDF5 file coerced DelayedArray realized list matrices.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"JaggedArray Class — JaggedArray-class","text":"h5File path file creating storing data HDF5 file. dim dimensions describing number matrices contained. dim[1] number interactions, dim[2] number files. subList list length 2 first position refers interactions second refers files. list used record subsetting operations later applied accessing data stored HDF5 file.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/JaggedArray-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"JaggedArray Class — JaggedArray-class","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Create test interactions gi <- read.table(text=\"             1 51000000 51300000 1 51000000 51500000             2 52000000 52300000 3 52000000 52500000             1 150000000 150500000 1 150000000 150300000             2 52000000 52300000 2 52000000 52800000\") |>     as_ginteractions()  ## InteractionJaggedArray object iarr <- pullHicMatrices(gi, hicFiles, 100e03, half=\"both\") arr <- counts(iarr) arr #> <n x m x 4 x 2> JaggedArray: #> ,,1,1 #> <3 x 5> matrix #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> ... #>  #> ,,4,2 #> <3 x 8> matrix #>      [,1] [,2] [,3] ... [,7] [,8] #> [1,]   31    7    2   .    0    0 #> [2,]    7   22    5   .    1    1 #> [3,]    2    5   26   .    0    2 #>   ## Subsetting arr[,,1,] # DelayedArray #> <3 x 5 x 1 x 2> DelayedArray object of type \"double\": #> ,,1,1 #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> ,,1,2 #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   49   27    4    5    3 #> [2,]   27   49   13    2    6 #> [3,]    4   13   56    7    8 #>  arr[,,,1] # JaggedArray #> <n x m x 4 x 1> JaggedArray: #> ,,1,1 #> <3 x 5> matrix #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> ... #>  #> ,,4,1 #> <3 x 8> matrix #>      [,1] [,2] [,3] ... [,7] [,8] #> [1,]   29    7    3   .    1    2 #> [2,]    7   28   12   .    0    0 #> [3,]    3   12   29   .    0    1 #>   ## Realize as list as.list(arr) #> [[1]] #> [[1]][[1]] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> [[1]][[2]] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    0    0    0    0    0 #> [3,]    0    0    0    0    0 #>  #> [[1]][[3]] #>      [,1] [,2] [,3] #> [1,]   63   25   15 #> [2,]   25   68   28 #> [3,]   15   28   87 #> [4,]    4    7   45 #> [5,]    2    3   11 #>  #> [[1]][[4]] #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]   29    7    3    3    1    4    1    2 #> [2,]    7   28   12    4    2    3    0    0 #> [3,]    3   12   29   11    3    1    0    1 #>  #>  #> [[2]] #> [[2]][[1]] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   49   27    4    5    3 #> [2,]   27   49   13    2    6 #> [3,]    4   13   56    7    8 #>  #> [[2]][[2]] #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0    0 #> [2,]    0    0    0    0    0 #> [3,]    0    0    1    0    0 #>  #> [[2]][[3]] #>      [,1] [,2] [,3] #> [1,]   56   26    8 #> [2,]   26   60   14 #> [3,]    8   14   89 #> [4,]    9   10   22 #> [5,]    2    2   15 #>  #> [[2]][[4]] #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]   31    7    2    2    2    3    0    0 #> [2,]    7   22    5    6    1    2    1    1 #> [3,]    2    5   26   10    4    2    0    2 #>  #>   ## Find the data path path(arr) #> [1] \"/tmp/Rtmpj6yIad/file7ac773650adc.h5\"  ## Find the data path dim(arr) #> $rows #> [1] 3 3 5 3 #>  #> $cols #> [1] 5 5 3 8 #>  #> $interactions #> [1] 4 #>  #> $files #> [1] 2 #>"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MatrixSelection Class — MatrixSelection-class","title":"MatrixSelection Class — MatrixSelection-class","text":"object containing selected indices matrix.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MatrixSelection Class — MatrixSelection-class","text":"MatrixSelection object (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MatrixSelection Class — MatrixSelection-class","text":"x Vector selected indices matrix `dim = buffer*2+1`. buffer Integer indicating buffer size, number pixels around matrix.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MatrixSelection Class — MatrixSelection-class","text":"","code":"selectCenterPixel(0, 5) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":null,"dir":"Reference","previous_headings":"","what":"Names S3 method for autocomplete — names.MatrixSelection","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"Names S3 method autocomplete Extract `$` operator MatrixSelection Extract `[[` operator MatrixSelection Concatenate MatrixSelection objects Concatenate MatrixSelection objects","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"","code":"# S3 method for MatrixSelection names(x)  # S4 method for MatrixSelection $(x, name)  # S4 method for MatrixSelection,ANY,ANY [[(x, i)  # S4 method for MatrixSelection,MatrixSelection +(e1, e2)  # S4 method for MatrixSelection,MatrixSelection -(e1, e2)"},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"x `MatrixSelection` object. name Name slot. character numeric extract. object `MatrixSelection` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MatrixSelection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names S3 method for autocomplete — names.MatrixSelection","text":"different data metadata concerning MatrixSelection object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MergedGInteractions Class — MergedGInteractions-class","title":"MergedGInteractions Class — MergedGInteractions-class","text":"`MergedGInteractions` class extends `GInteractions` contain additional information pairs merged.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MergedGInteractions Class — MergedGInteractions-class","text":"MergedGInteractions object (see description)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MergedGInteractions Class — MergedGInteractions-class","text":"`MergedGInteractions` class uses delegate object initialization assign `GInteractions` slots. addition containing information pairs, also behaves `GInteractions` object. `mergePairs()` builds object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MergedGInteractions Class — MergedGInteractions-class","text":"delegate `GInteractions` object used initialize `GInteractions`-specific slots. mergedPairs set interactions. ids integer vector ids linking indices `delegate` slot pairs (`allPairs` slot). indices parallel `delegate`. allPairs `data.table` containing input pairs combined. Also contains metadata pair 1) source file, 2) id, 3) chromosome pair belongs (.e. `grp`), 4) assigned cluster `dbscan` (.e. `clst`). selectionMethod Character describing method used select final pair cluster merged pairs.","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/MergedGInteractions-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MergedGInteractions Class — MergedGInteractions-class","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, fread, nrows=1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  class(x) #> [1] \"MergedGInteractions\" #> attr(,\"package\") #> [1] \"mariner\""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"Adjust loop enrichment remove distance- dependent effect. Show diagnostic plot loop enrichment distance adjustment.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"","code":"plotEnrichment(scores, interactions, k = 25, nknots = 10, plot = TRUE)  adjustEnrichment(x, interactions, k = 25, nknots = 10)  # S4 method for DelayedMatrix_OR_matrix,GInteractions adjustEnrichment(x, interactions, k = 25, nknots = 10)  # S4 method for numeric,GInteractions plotEnrichment(scores, interactions, k = 25, nknots = 10, plot = TRUE)"},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"scores Numeric vector enrichment scores. interactions GInteractions Object containing interactions used calculate enrichment scores. k Number observations rolling window. nknots integer function giving number knots use see `?smooth.spline` info. plot Boolean (default=FALSE), whether show diagnostic plot. x DelayedMatrix matrix enrichment scores.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"DelayedMatrix enrichment scores rows  loops columns Hi-C files. plot (associated data) visualizing  loop enrichment distance adjustment.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/adjustEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust loop enrichment to remove distance-\ndependent effect. — plotEnrichment","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loops as GInteractions object loops <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE, nrows=1000) |>     as_ginteractions(keep.extra.columns=FALSE) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Calculate loop enrichment enrich <- calcLoopEnrichment(     x=binPairs(loops, 100e03),     files=hicFiles ) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselected #>                                   #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK  adjustEnrichment(enrich, loops) #> <1000 x 2> DelayedMatrix object of type \"double\": #>                FS        WT #>    [1,] 1.0374631 1.6937594 #>    [2,] 0.9777110 1.4011917 #>    [3,] 1.2571415 1.5567901 #>    [4,] 1.2220412 0.9160190 #>    [5,] 0.7536427 0.7885722 #>     ...         .         . #>  [996,] 1.3596398 0.8349367 #>  [997,] 1.2835860 1.0864142 #>  [998,] 0.6372802 1.4945152 #>  [999,] 1.5484673 0.9612419 #> [1000,] 0.5487884 0.4555145   plotEnrichment(enrich[,1], loops)  #> $rollEnrich #>      rollMedSize rollMedScore #>   1:          NA           NA #>   2:       40000     1.272727 #>   3:       45000     1.240741 #>   4:       50000     1.181818 #>   5:       55000     1.210526 #>  ---                          #> 216:     1470000     1.000000 #> 217:     1500000     1.000000 #> 218:     1515000     1.000000 #> 219:     1545000     1.000000 #> 220:     1550000     1.000000 #>  #> $splineFit #> Call: #> smooth.spline(x = na.omit(re), nknots = nknots) #>  #> Smoothing Parameter  spar= 0.1146557  lambda= 6.375813e-05 (16 iterations) #> Equivalent Degrees of Freedom (Df): 10.55666 #> Penalized Criterion (RSS): 2.365803 #> GCV: 0.01192468 #>  #> $corrFactor #>    [1]  1.0374631  0.9777110  0.7961896  0.9165309  1.0228008  1.0335348 #>    [7]  0.9421412  0.7989606  0.8009662  0.9669477  0.9486945  0.8532821 #>   [13]  0.9484175  0.9621551  1.0187595  0.8060715 -2.1223211  0.9401591 #>   [19]  0.7989606  0.9120695  0.9285543  1.0024476  0.9847265  0.9650631 #>   [25]  0.8359769  0.9238790  0.9301534  0.9039897  0.9927136  0.9165309 #>   [31]  0.9338669  0.9196405  0.9120695  0.8960631  0.8807888  0.9665021 #>   [37]  1.0067554  0.9709256  0.9146474  0.8992000  1.0067554  0.9691452 #>   [43]  1.0123554  0.8734958  0.9559203  0.9497401  0.7973727  0.9709256 #>   [49]  0.9452232  0.8532821  0.9214478  0.8680955  0.8857022  0.9452232 #>   [55]  0.8960631  0.7959876  0.8046553  1.0314277  1.0062732  0.9777110 #>   [61]  1.0389982  0.8471710  0.9385895  1.0287168  0.9421412  0.9179396 #>   [67]  0.8471710  0.9404746  0.8217287  1.0402033  1.0388317  0.9421412 #>   [73]  0.9143324  0.9580368  0.8261422  0.8924328  0.7952948  0.8941787 #>   [79]  0.8734958  0.9120695  0.9156945  0.9927136  0.8139015  1.0306190 #>   [85]  0.8359769  1.0067554  0.7984271  0.8308910  0.7973727  0.7954000 #>   [91]  0.9691924  0.9669477  0.8912290  0.8532821  1.0383451  0.9754082 #>   [97]  0.8686921  1.0314277  1.0270456  0.9691924  0.8104866  0.9216199 #>  [103]  0.9617372  0.9404746  0.9927136  0.9458628  0.8664653  0.9120695 #>  [109]  1.0270456  0.9853624  1.0123554  0.9691452  0.8001642  0.9619671 #>  [115]  1.0358096  0.8139015  0.9980374  0.8664653  0.8261422  1.0389311 #>  [121]  0.9497401  1.0062732  0.9263597  1.0335348  1.0337789  0.9799317 #>  [127]  1.0433298  0.8807888  1.0067554  0.9181207  1.0358096  0.8972355 #>  [133]  0.9777110  1.0389982  0.9617372  0.9165309  1.0335348  0.8960631 #>  [139]  0.9665021  0.9799317  0.8060715  1.0187595  0.7973727  0.9431420 #>  [145]  0.9777110  0.9165309  0.9385895  0.9368858  0.8682537  0.9600973 #>  [151]  0.9534503  1.0374631  0.7949611  0.9537581  0.9646903  1.0309262 #>  [157]  0.9421412  0.7973727  0.9980374  0.9535226  1.0335348  2.4930620 #>  [163]  0.9179396  1.0400161  0.9754082  1.0337789  0.9799317  0.9977643 #>  [169]  0.9404746  0.9980374  1.0389311  0.9927136  0.7961896  0.8807888 #>  [175]  0.9887108  0.9853624  0.9368858  0.9537581  0.9580368  0.9703270 #>  [181]  0.9196818  0.8664653  0.9486945  0.9646903  1.0256796  0.7954000 #>  [187]  0.8176487  0.8807888  0.8703565  0.9368858  0.7949611  0.8060715 #>  [193]  1.0187595  0.8217287  0.8471710  0.9778046  0.8009662  0.9202695 #>  [199]  0.7954000  0.8734958  0.8414026  0.9558123  0.9691924  0.8034038 #>  [205]  0.9927136  0.8308910  0.9421412  0.8308910  1.0385178  0.8597203 #>  [211]  0.9537581  0.8883200  1.0358096  0.8217287  0.9214478  0.8883200 #>  [217]  0.8060715  1.0123554  0.9154286  1.0178864  0.8176487  0.9698176 #>  [223]  0.9932865  0.9452232  0.8060715  0.8359769  0.9890250  1.0123554 #>  [229]  0.8261422  1.0109306  0.9039897  0.9617372  0.7952948  0.8883200 #>  [235]  0.9853624  0.8074042  0.9431420  1.0306190  1.0215593  1.0067554 #>  [241]  0.9946605  0.8139015  1.0337789  0.9452232  0.7949935  1.0372701 #>  [247]  1.0149425  0.9763442  0.8308910  1.0178864  0.9431420  1.0314277 #>  [253]  0.9632851  0.8139015  0.9156945  0.7973727  0.8261422  0.7949935 #>  [259]  0.9320520  0.8022412  0.9619671  0.9927136  0.9636238  0.9202695 #>  [265]  0.9997047  0.9452232  0.8960631  0.8471710  0.9120695  0.7952948 #>  [271]  0.9694064  1.0223495  0.9799317  0.8883200  0.7949935  0.9659125 #>  [277]  0.8532821  0.9535226  0.7984271  0.9230120  0.8359769  0.9238641 #>  [283]  0.7954000  0.7952948  0.9509768  0.9690331  0.9665021  0.9600973 #>  [289]  0.8471710  1.0385178  0.9181207  0.9617011  0.9404746  1.0187595 #>  [295]  0.9170588  0.8060715  1.0178864  0.7970334  0.9181207  1.0357373 #>  [301]  0.9277721  0.9036170  0.7970334  0.7989606  0.9154286  0.9677921 #>  [307]  0.8960631  0.7970334  1.0024476  1.0223495  0.8009662  1.3468990 #>  [313]  0.7954000  1.0335348  0.9537581  0.8680955  0.7970334  0.9156945 #>  [319]  0.8972355  0.8664653  0.8261422  0.9690331  0.8414026  1.0372701 #>  [325]  0.8060715  0.9579017  1.0383451  1.0335348  1.0109306  0.9142022 #>  [331]  0.9255135  0.9684420  1.0372701  0.9216199  0.8217287  0.7954000 #>  [337]  0.7989606  1.0123554  0.9285543  0.9263597  0.9196405  0.9385895 #>  [343]  0.8807888  0.9458628  0.8217287  0.9690331  0.7949935  0.9179396 #>  [349]  0.9452232  0.9368858  0.8217287  0.9263597  1.0389982  0.9997047 #>  [355]  1.0187595  0.9230120  0.9777110  0.8664653  0.8060715  0.9709256 #>  [361]  0.9431400  0.8261422  0.8734958  0.8597203  0.8863608  0.9202695 #>  [367]  0.9148701  0.9601266  0.9285543  1.0149425  0.8734958  0.9457977 #>  [373]  1.0114148  0.9120695  1.0223495  0.9326362  0.9148701  0.9039897 #>  [379]  0.9997047  1.0109306  0.8261422  0.8359769  1.0256796  0.9421412 #>  [385]  0.8074042  1.0389311  0.9777110  1.0337789  1.0290609  0.9619671 #>  [391]  0.8359769  0.7973727  1.0314277  0.9204738  0.8217287  0.9686647 #>  [397]  0.9497401  0.8686921  0.9669477  0.9238641  0.9980374  0.8139015 #>  [403]  0.8664653  0.9745660  0.9935538  0.8034038  1.0314277  0.9621551 #>  [409]  1.0385178  0.9927136  1.0389982  0.8414026  0.9421412  0.7954000 #>  [415]  1.0314277  0.9672928  0.9351989  0.8597203  1.0357373  0.8941787 #>  [421]  0.7954000  0.9146474  0.9649475  0.9141026  1.0383451  0.9255135 #>  [427]  0.8308910  0.9421412  0.9509768  1.0335348  0.9665021  0.8009662 #>  [433]  0.7954000  0.8960631  0.7949611  0.8217287  1.0270456  0.9378192 #>  [439]  0.9709256  1.0389311  1.0389982  0.9421412  0.8359769 -0.9673523 #>  [445]  0.9165309  1.0388477  1.0143379  0.9927136  1.0357373  0.9421412 #>  [451]  0.8883200  0.8074042  1.0228383  0.8308910  0.9196818  0.8176487 #>  [457]  1.0187595  2.9050821  1.0178864  0.9537581  0.9136502  0.9154286 #>  [463]  0.9102636  0.8217287  0.9509768  1.0372701  0.9799317  0.8104866 #>  [469]  0.9385895  0.9141026  1.0306190  0.8104866  0.9459876  0.9617372 #>  [475]  0.8857022  0.8471710  0.9457977  0.9370618  0.9497401  0.8734958 #>  [481]  0.9421412  0.9890250  0.8764847  0.7984271  0.8810468  0.8104866 #>  [487]  1.0256796  1.0270456  1.0160853  1.0248357  0.9579017  0.8734958 #>  [493]  0.8597203  0.9421412  0.9709256  0.9120695  0.8261422  1.0358096 #>  [499]  0.8532821  0.8308910  0.8734958  0.8734958  0.9039897  0.8261422 #>  [505]  0.9385895  0.9853624  0.9285543  1.0062732  1.4322558  0.9497401 #>  [511]  0.8359769  0.9691452  1.0389982  0.9927136  0.9277721  1.0109306 #>  [517]  0.8664653  0.9285543  0.8009662  0.9599426  0.8176487  1.0374631 #>  [523]  1.0306190  0.9457826  0.8785293  0.8664653  1.0374631  0.9709256 #>  [529]  0.9619671  0.8941787  0.8883993  0.9285543  1.1679189  0.8308910 #>  [535]  0.9636238  1.0062732  0.8471710  0.9368858  0.8471710  0.9156945 #>  [541]  1.0372701  0.8022412  0.9352218  0.9636238  0.9698176  0.9290935 #>  [547]  0.9680852  0.8734958  0.9684420  0.8682537  0.9659125  0.9997047 #>  [553]  0.9141026  0.9997047  0.9484175  0.7989606  0.8471710  0.8001642 #>  [559]  0.9890250  0.9512556  1.0270456  0.9698176  0.9659125  0.8807888 #>  [565]  0.9537581  0.8217287  0.9509768  0.9154286  0.9509768  0.9617372 #>  [571]  0.8001642  1.0278628  0.9690331  0.9927136  0.8359769  0.8992000 #>  [577]  1.0187595  0.8034038  0.9534503  0.8664653  0.8960631  0.9997047 #>  [583]  0.9216199  0.9890250  0.9102636  0.9214478  1.9910448  0.8046553 #>  [589] -0.9793287  0.8217287  1.0389982  0.9665021  0.9202695  1.0024476 #>  [595]  0.9535226  0.8703565  0.8664653  0.9632851  0.9263597  0.8597203 #>  [601]  0.8471710  0.9368858  0.8104866  0.8807888  0.8664653  0.9320520 #>  [607]  1.0306190  1.0123554  0.8785293  1.0067554  0.9458628  0.9167849 #>  [613]  1.0385178  0.8471710  1.0228008  0.9039897  0.8074042  0.9727786 #>  [619]  0.8022412  0.9285543  0.9579017  1.0223495  0.9777110  0.9684420 #>  [625]  0.8034038  0.9617372  1.0374631  0.9039897  0.8217287  0.9844771 #>  [631]  0.7984271  0.9263597  0.9662858  0.8734958  1.0228008  1.0385178 #>  [637]  0.8074042  0.9452232  0.9890250  0.8217287  1.0388477  0.9997047 #>  [643]  0.8034038  0.9141026  1.0306190  0.9233985  0.8139015  0.8764847 #>  [649]  1.0358096  0.8863608  0.9457826  0.9853624  0.9141026  0.9431420 #>  [655]  0.8139015  0.8261422  0.9352218  0.8308910  1.0278628  0.9621551 #>  [661]  0.9120695  0.8176487  1.0389982  1.0374631  0.9665021  0.9579017 #>  [667]  1.0372701  0.9558123  0.9698176  0.8074042  0.8359769  0.8686424 #>  [673]  0.8034038  0.9665021  0.9698176  1.0256796  0.9844771  1.0337789 #>  [679]  0.8046553  0.9263597  1.6233067  0.7984271  0.8532821  1.0314277 #>  [685]  0.8261422  0.9698176  0.9890250  1.0389311  0.9277721  0.8139015 #>  [691]  0.9621551  0.9698176  1.0256796  0.9196405  0.7970334  0.9698176 #>  [697]  1.0024476  0.9351989  0.9649475  0.8022412  0.9154286  0.8001642 #>  [703]  0.8414026  0.9698176  1.3702305  0.9535226  0.9684420  1.0389311 #>  [709]  0.7952948  1.0389982  0.9534503  0.9632851  0.9669477  0.9665021 #>  [715]  0.9997047  1.0389311  0.8359769  0.9145589  0.9214478  0.9285543 #>  [721]  0.9196818  0.9997047  0.8217287  0.9351989  0.9844771  0.8471710 #>  [727]  0.9165309  0.7954000  0.8883200  0.7970334  0.9255135  1.0066941 #>  [733]  0.8217287  0.9535226  0.9039897  0.7954000  1.0306190  0.8022412 #>  [739]  0.8532821  0.9558123  0.8176487  1.0372701  1.0314277  0.9142022 #>  [745]  0.9686647  0.9536658  1.0389311  0.8686424  0.8532821  0.8664653 #>  [751]  1.0187595  0.7984271  0.8471710  0.8597203  0.9142022  0.8807888 #>  [757]  0.8972355  0.9632851  1.0024476  1.0114148  0.9352218  0.9559203 #>  [763]  0.9600973  0.8863608  0.8471710  0.9277721  0.9202695  0.9691452 #>  [769]  0.8308910  1.0187595  0.8074042  0.9039897  1.0024476  0.9650631 #>  [775]  1.0223495  0.9458628  0.8786935  0.9338669  0.9069143  1.0344882 #>  [781]  1.0256796  0.8001642  0.8359769  0.9156945  0.8686424  0.9927136 #>  [787]  0.9580368  0.9621551  0.9167849  1.0314277  0.9142022  0.9927136 #>  [793]  0.8883200  0.9431420  1.0389311  0.9688941  0.9318810  0.8807888 #>  [799]  0.9777110  0.7989606  0.9579017  0.8308910  1.0306190  0.9204738 #>  [805]  0.9165309  0.9352218  0.8729866  0.9497401  0.9659125  0.9146474 #>  [811]  1.0187595  0.9458628  0.7970334  1.0223495  0.9202695  0.9202695 #>  [817]  1.0149425  1.0389982  0.9290935  0.9847265  0.8807888  0.9204738 #>  [823]  0.9579017  1.0357373  0.9120695  1.0223495  0.9579017  0.9632851 #>  [829]  0.9277721  0.8261422  0.8734958  1.0178864  0.9305928  0.8009662 #>  [835]  0.9680852  0.9709256  0.9368858  0.9202695  1.0256796 -5.9603587 #>  [841]  0.8139015  1.0123554  0.9534503  0.8831501  0.9890250  1.0160853 #>  [847]  0.9580368  1.0385178  1.0256796  1.0389982  0.8734958  0.8217287 #>  [853]  0.9351989  0.8359769  0.9320520  0.9535226  1.0383451  0.9320520 #>  [859]  1.0372701  0.9404746  0.9039897  0.9927136  0.9181207  1.0062732 #>  [865]  0.9285543  0.8471710  0.9196405  0.8941787  0.9890250  0.9844771 #>  [871]  0.9512556  0.9421412  1.0352834  1.0389982  0.9143324  0.9202695 #>  [877]  0.9263597  0.9890250  1.0149425  0.9165309  1.0244508  0.9535226 #>  [883]  0.9484175  0.9255135  0.8359769  0.9497401  0.9727048  0.9709256 #>  [889]  0.9497401  0.9599426  0.9907617  0.8217287  0.9277721  0.9431400 #>  [895]  0.9179396  1.0024476  0.9690331  1.0256796  1.0062732  0.8414026 #>  [901]  0.9691924  1.0067554  0.9039897  0.9431420  0.9401591  0.8960631 #>  [907]  0.9537581  0.9600973  0.9142022  0.9636238  0.9196405  1.0123554 #>  [913]  1.0357373  1.0123554  0.8139015  1.0183793  0.7954000  1.0358096 #>  [919]  0.8034038  0.7952948  0.9421412  1.0306190  0.8046553  0.9927136 #>  [925]  0.9793343  0.7961896  0.9368858  0.8217287  0.7952948  0.9459876 #>  [931]  1.0270456  0.8729866  0.9326362  0.8734958  1.0256796  0.9285543 #>  [937]  0.9233985  1.0335348  0.9458628  0.9167849  0.7949935  0.9777110 #>  [943]  0.9684420  1.0228008  0.9277721  1.0109306  1.0306190  0.8046553 #>  [949]  0.7984271  0.9301534  1.0330942  1.0388317  0.9617011  0.9039897 #>  [955]  0.8414026  0.9352218  0.9320520  0.9662858  0.8714905  0.8532821 #>  [961]  0.8176487  0.8734958  1.0337789  0.9537581  0.7970334  0.8308910 #>  [967]  0.8001642  0.8139015  0.7961896  1.0389311  0.9579017  1.0256796 #>  [973]  1.0383451  0.9326362  0.9148701  0.9646903  0.9273995  0.9537581 #>  [979]  1.0256796  1.0306209  0.9290935  0.9799317  0.9181207  0.7949611 #>  [985]  1.0024476  0.8022412  0.8883993  0.9754082  0.9179396  0.9196405 #>  [991]  0.9401591  0.8972355  1.0187595  0.9497401  1.0357373  0.8308910 #>  [997]  0.8022412  0.9559203  0.9677921  0.9146474 #>  #> $adjusted #>    [1]   1.0374631   0.9777110   1.2571415   1.2220412   0.7536427   1.3780464 #>    [7]   0.7066059   1.4099304   0.6553360   0.3223159   0.7115209   0.9599424 #>   [13]   0.9484175   0.8247044   0.8150076   3.2242861  -2.1223211   2.8204772 #>   [19]   1.1571153   1.7227980   0.9285543   1.5422271   0.9847265   3.8602526 #>   [25]   0.4399878   0.9238790   0.5580921   0.7533248   0.5956282   0.9165309 #>   [31]   0.9338669   1.1035686   1.1803252   1.0375467   1.6776930   0.7732017 #>   [37]   1.4382219   1.3592958   0.9146474   2.2480000   1.6779256   0.7753162 #>   [43]   1.4725170   0.8007045   0.7647362   1.2663201   0.7554057   1.2945675 #>   [49]   0.6751594   0.7876451   0.9214478   1.7361911   0.5904681   1.1342678 #>   [55]   0.7168505   1.4782628   0.7241897   0.3438092   0.6708488   1.4339762 #>   [61]   1.1544425   0.5446100   0.9385895   0.8572640   1.6487470   0.4589698 #>   [67]   0.7134072   1.8809492   1.4791116   0.5201017   1.7313862   0.9421412 #>   [73]   1.8286648   1.9160737   1.3218276   0.4462164   0.9543538   1.7883574 #>   [79]   0.8221137   0.4800366   0.9156945   1.2539541   1.0682457   0.6870794 #>   [85]   1.0818524   0.7550665   1.2680901   2.1810888   0.9745666   0.9628526 #>   [91]   0.4845962   0.9669477   1.3368435   0.9480913   1.0383451   1.2192602 #>   [97]   0.8686921   0.6188566   2.8441263   1.9383849   1.3715926   1.8432398 #>  [103]   0.9617372   0.9404746   0.9927136   1.2611504   0.9283557   0.3648278 #>  [109]   1.0270456   0.3695109   2.0247108   0.9691452   1.2269185   0.9619671 #>  [115]   1.7263493   1.4469359   2.4950935   1.1856894   0.6609138   0.9590133 #>  [121]   0.8442134   1.1180813   1.3895396   0.9540321   1.5506684   0.3563388 #>  [127]   1.0433298   1.1210040   1.0067554   0.9181207   1.2748426   1.0254119 #>  [133]   0.6518074   1.0389982   3.8469489   0.9165309   1.2919185   0.9956257 #>  [139]   0.8786382   1.3719043   1.4424438   0.8150076   0.7973727   0.9431420 #>  [145]   0.9777110   1.2831433   0.7039421   0.6517467   0.8682537   1.4401460 #>  [151]   0.6356335   0.4446271   0.7949611   1.2716775   1.2862538   2.0618525 #>  [157]   2.8264235   0.8698611   0.7485281   0.9535226   0.7751511   1.2465310 #>  [163]   0.9179396   0.6933440   0.7315561   1.3783719   0.7349488   0.4988821 #>  [169]   1.8809492   0.7485281   1.3852415   1.1168028   0.8685705   0.8130359 #>  [175]   0.9887108   1.7632800   1.1072287   1.1445097   0.9580368   0.9703270 #>  [181]   0.6131212   0.9747735   0.4743472   1.2862538   1.1722053   0.8723742 #>  [187]   0.7592452   1.0569466   1.1604753   1.6863945   0.8561120   0.8060715 #>  [193]   1.5281393   0.8804236   0.1588446   0.9778046   0.7588101   1.2593162 #>  [199]   1.1802710   0.9982809   0.8414026   0.3823249   0.7753540   1.0176449 #>  [205]   1.5883418   0.9775188   3.4993815   1.4402110   1.2462214   1.7194406 #>  [211]   1.4306372   0.8075637   1.0358096   0.4833698   0.9214478   1.2214400 #>  [217]   1.1997344   1.5387802   1.2205715   1.0178864   1.3627478   0.9698176 #>  [223]   0.4966432   0.8592938   0.8060715   0.7165516   1.0989166   1.0123554 #>  [229]   1.3080586   2.0218612   0.9943887   1.2823163   1.8352958   0.4441600 #>  [235]   1.8475544   0.9498873   1.4147130   1.8035833   0.6810395   0.5033777 #>  [241]   1.9893210   1.3836325   0.5638794   0.8101913   0.9085640   1.2965876 #>  [247]   0.7612069   0.9763442   0.9970692   1.1104215   0.6287613   0.6446423 #>  [253]   0.9632851   0.7399104   0.6104630   1.1391038   1.4243832   1.2822476 #>  [259]   1.4912831   0.8022412   0.6413114   1.7372489   0.6424159   0.9910595 #>  [265]   1.0585108   0.4050957   1.0240721   0.9488316   0.5067053   0.7130230 #>  [271]   0.9694064   0.8178796   2.2048463   0.8883200   0.8594525   1.1039000 #>  [277]   1.5846668   0.5297348   1.0379552   0.6153413   0.8359769   0.9238641 #>  [283]   1.4913750   0.9089084   0.6339845   0.9690331   3.8660083   1.4401460 #>  [289]   1.6943421   0.5192589   0.7344966   1.4425517   0.9404746   0.9261450 #>  [295]   0.9170588   1.0150530   1.8507026   1.2752535   0.9181207   1.3809831 #>  [301]   0.6185147   0.9036170   0.4383684   0.6965297   0.9154286   2.4194802 #>  [307]   0.5659346   1.5247596   0.7518357   2.2305807   0.8009662   1.7958653 #>  [313]   0.7512111   1.0335348   0.9537581   1.3021433   1.6826262   1.6024654 #>  [319]   0.4486177   0.9331165   0.9913707   1.4535496   1.5838166   0.7779526 #>  [325]   1.3021155   1.7242231   0.3461150   0.9540321   0.7581979   2.2855056 #>  [331]   1.8510269   0.9684420   1.0372701   1.8432398   1.2052020   0.6526359 #>  [337]   0.7609148   0.6074132   1.8571086   1.2351463   0.6130937   0.4331951 #>  [343]   0.7046311   0.9458628   1.3147658   1.9380661   1.1483240   0.7868054 #>  [349]   1.1633516   1.4990174   0.7585188   0.7410878   2.4243291   0.8747416 #>  [355]   3.0562786   0.4615060   1.7109943   1.2378076   1.1379833   1.4563884 #>  [361]   1.4147099   0.8261422   0.5823305   0.8597203   0.8863608   0.8282426 #>  [367]   0.7318961   0.7681012   1.8571086   1.6608150   1.9341693   3.7831908 #>  [373]   1.0114148   0.4209552   1.0223495   0.4663181   0.9148701   1.6271815 #>  [379]   0.5924176   0.7581979   1.5251857   1.3584624   2.5641990   1.1305694 #>  [385]   0.6624855   1.2120863   1.2221388   1.5036784   1.0290609   0.9619671 #>  [391]   0.5901013   1.3747804   2.5785692   1.3807107   0.5976208   1.4529970 #>  [397]   0.4221067   0.8686921   0.9669477   0.9238641   1.6633957   1.3022423 #>  [403]   0.8664653   0.9745660   1.9871076   1.2159626   1.0314277   2.3519348 #>  [409]   1.3846904   0.9927136   0.9445438   0.9616029   0.3768565   0.7158600 #>  [415]   1.2892846   0.7738342   0.9351989   0.7565539   1.7527862   0.8941787 #>  [421]   1.0075067   0.4573237   1.2865966   0.9141026   1.2779632   1.3882702 #>  [427]   1.0226350   0.6280941   0.6339845   0.3758308   0.5271829   0.9153899 #>  [433]   0.9721556   1.0752757   0.9635893   0.8217287   1.2838070   0.6252128 #>  [439]   0.9709256   1.4385200   0.5667263   1.6487470   1.2357919  -1.9347045 #>  [445]   2.2913273   1.5582716   1.0143379   1.1912564   1.4796247   1.6487470 #>  [451]   1.6721318   0.4749437   1.5342575   1.4125147   0.6131212   1.0512626 #>  [457]   3.0562786   2.9050821   1.1309849   3.1791937   0.6091002   0.6865715 #>  [463]   0.4551318   1.4193495   2.8529304   1.8152226   0.4199707   1.5091819 #>  [469]   1.1732368   2.1329060   1.5855678   0.9725839   1.2613168   0.8014477 #>  [475]   1.7714044   0.7701555   0.9457977   0.9370618   1.4246101   0.6551218 #>  [481]   1.1776765   1.0789363   1.3147271   0.7185844   1.7620935   0.1350811 #>  [487]   1.2308155   1.5800701   1.0160853   1.0248357   0.7982514   1.8389385 #>  [493]   1.1961326   1.8842823   0.7767405   1.4924774   1.3218276   0.8286477 #>  [499]   0.8532821   1.2463365   0.8319008   1.7469916   0.9515682   1.3769037 #>  [505]   0.7508716   0.4926812   0.6554501   1.0062732   1.4322558   0.2374350 #>  [511]   0.5573179   1.9382905   1.1874265   1.4890705   0.9277721   0.6739537 #>  [517]   1.3330236   1.6249701   0.5950034   1.0970773   1.4717677   1.2968289 #>  [523]   0.7594035   0.9457826   0.8785293   0.7581572   0.8299705   0.9709256 #>  [529]   3.3668849   0.8941787   1.7767986   1.4591568   1.1679189   1.2282736 #>  [535]   1.4454357   0.8050185   0.6589108   0.2162044   1.1295614   1.2209260 #>  [541]   0.7779526   0.9766415   0.6234812   1.2848317   1.1083629   1.5484891 #>  [547]   0.9680852   0.5516816   1.2912560   1.7365075   1.3798750   0.6664698 #>  [553]   1.5235043   0.6664698   0.5690505   1.2471579   1.0668080   1.0463686 #>  [559]   1.2362812   1.2683408   0.8558713   1.0910448   0.5519500   0.9608606 #>  [565]   1.1921977   0.8765106   1.4264652   1.1442858   0.3803907   0.4808686 #>  [571]   0.9001847   1.0278628   0.8305998   0.5672649   1.2075222   1.3488000 #>  [577]   1.4262633   1.4139907   2.8603509   0.8664653   1.3440946   0.9997047 #>  [583]   1.1520249   1.4835374   0.3034212   0.6142985   0.9955224   4.0232764 #>  [589]  -0.9793287   1.0347694   0.6493739   1.4497531   0.6401875   0.3759179 #>  [595]   0.7946021   4.3517824   1.0727666   0.4281267   2.1615060   1.1125792 #>  [601]   0.9966718   0.7753538   1.4503444   0.9227312   0.6601641   1.8641039 #>  [607]   0.8588492   1.3498072   1.7570587   0.5752888   1.3242080   0.9167849 #>  [613]   1.2462214   1.4632954   0.5578913   0.4017732   1.0765389   0.4863893 #>  [619]   1.6044825   0.9285543   0.8210586   0.4381498   2.6072295   1.2912560 #>  [625]   1.0225140   0.7693898   0.3772593   0.7231918   1.1504201   1.0938635 #>  [631]   0.8710114   1.8527194   1.2078573   1.3102437   1.7046679   1.5577767 #>  [637]   1.1303659   0.8270703   0.7192909   0.6723234   1.0388477   1.1107829 #>  [643]   0.9494773   0.6855769   1.6031852   2.4623960   1.6859387   0.8764847 #>  [649]   2.0716192   0.5909072   0.9457826   0.7390218   0.9141026   1.1789275 #>  [655]   1.1162077   1.4319799   2.1821842   0.5934936   0.5139314   0.9621551 #>  [661]   0.7600579   0.7267988   0.6233989   2.0749263   0.7248765   0.9579017 #>  [667]   0.5186350   0.6372082   0.1686639   1.2748488   1.3932948   1.3029636 #>  [673]   2.5708923   1.0738912   1.4778173   1.0256796   0.9844771   0.5907308 #>  [679]   0.8470056   0.5052871   0.8116533   0.5666257   0.7584730   0.7501292 #>  [685]   1.4269730   0.5968108   0.9890250   1.2467174   0.6185147   1.0231904 #>  [691]   1.6494088   0.3636816   0.7692597   0.7357124   0.7970334   0.9698176 #>  [697]   1.1138307   1.2469318   1.4474212   1.4440342   0.6865715   1.3093596 #>  [703]   1.0096831   1.2930901   1.3702305   0.8974330   1.1621304   0.3777931 #>  [709]   0.9872626   1.0389982   0.6356335   1.9265703   0.9669477   1.9330041 #>  [715]   1.5995274   0.9590133   0.8851520   0.9145589   1.3821717   0.5714180 #>  [721]   2.4524848   1.7889452   1.5777190   1.5586648   1.9689543   0.2946682 #>  [727]   1.3093299   1.4317200   0.8883200   1.7711854   0.6941351   0.5033470 #>  [733]   0.5800438   0.5804050   0.9039897   1.0748649   0.9369264   1.3477653 #>  [739]   1.0038613   0.5213522   1.0063369   0.6223620   0.8595231   0.3656809 #>  [745]   3.8746588   4.7683291   0.8311449   0.5790949   1.3652514   1.1552871 #>  [751]   0.6112557   0.9124881   4.7749641   0.5373252   0.4986558   2.2019721 #>  [757]   0.8972355   1.4449277   1.2530595   1.0114148   0.6234812   0.9559203 #>  [763]   2.2402271   1.7727216   0.9036491   1.5462868   1.2992040   0.9691452 #>  [769]   0.6996977   0.2546899   0.9688851   1.8079795   0.6014686   0.5514647 #>  [775]   1.5903214   2.2070133   1.3180402   2.3346672   0.4534572   2.0689763 #>  [781]   0.6837864   0.5091954   1.8391492   1.5261576   1.7372848   1.2846882 #>  [787]   0.4790184   1.1545862   0.6111899   0.7934059   0.9142022   1.1030152 #>  [793]   0.7315577   0.4715710   0.7991778   0.9688941   0.4659405   0.8130359 #>  [799]   0.9777110   0.6214138   0.9579017   0.7270296   1.0306190   1.3807107 #>  [805]   0.4999260   2.1821842   0.4364933   0.7123051   3.8636501   1.0162748 #>  [811]   1.0187595   0.9458628   0.8316871   0.6815663   1.4461378   0.8494795 #>  [817]   1.5224137   1.7001789   0.3378522   1.4770898   0.8807888   0.9204738 #>  [823]   0.8514682   2.4167204   1.0640811   0.6815663   1.4368526   0.7224639 #>  [829]   2.7833162   0.9294100   1.3438397   1.2214637   1.3958892   1.3349436 #>  [835]   0.6453901   0.7281942   0.8197751   1.3561866   0.9467812 -11.9207174 #>  [841]   1.2077247   1.0123554   1.2712671   1.3247251   0.4564731   1.0160853 #>  [847]   0.9580368   0.8654315   0.4395770   1.7001789   0.9248779   1.1952417 #>  [853]   0.3740795   1.1146359   1.1650650   0.7628180   0.5191725   0.7767100 #>  [859]   1.3201619   1.8809492   1.6788381   0.6109007   1.2241610   0.8050185 #>  [865]   0.8571271   0.9318882   0.5517843   2.2354467   0.9890250   0.7875817 #>  [871]   1.2683408   1.4132117   2.0705668   1.0389982   0.9143324   1.1909370 #>  [877]   0.9263597   0.3596454   1.0149425   1.8330618   3.0733523   1.0037080 #>  [883]   1.5806959   1.2340179   0.8359769   0.6331600   1.4590572   1.2945675 #>  [889]   0.6331600   0.7679541   0.9907617   1.3147658   1.3253887   1.4147099 #>  [895]   0.6884547   1.5036715   1.9380661   0.7326283   1.2075278   0.7479134 #>  [901]   0.6461283   0.8054043   1.7128227   1.5719033   0.7521273   0.9558006 #>  [907]   0.5722549   1.2801298   0.6856517   0.7708990   0.6130937   1.3015998 #>  [913]   1.0357373   0.5061777   1.6859387   0.5091897   0.6730308   1.1837824 #>  [919]   1.3055312   0.5532486   2.8264235   0.7361565   0.7724691   1.0829603 #>  [925]   0.9793343   0.9731207   1.1242630   0.8217287   1.3394440   1.8919752 #>  [931]   0.6162274   0.8729866   0.2331591   0.8734958   0.7692597   1.2380724 #>  [937]   0.9233985   1.0335348   0.8107396   1.8335698   1.3134676   0.6843977 #>  [943]   0.4842210   0.9375674   1.3916581   1.7972099   0.9699944   0.6258430 #>  [949]   0.6248560   5.1158438   1.0330942   2.0776634   0.9617011   0.7748484 #>  [955]   1.1473671   1.2469624   1.8641039   0.5797715   0.8714905   1.8284617 #>  [961]   1.1680696   0.7279132   0.8270231   2.1459558   1.3127610   0.9970692 #>  [967]   1.0076142   1.0358746   1.1942845   1.0389311   2.5544046   0.6154078 #>  [973]   0.5537840   2.1761512   1.1435877   0.6431269   0.4636997   1.6690767 #>  [979]   0.8205437   2.0612418   2.3227337   0.3919727   0.4590604   1.1356588 #>  [985]   0.8019581   1.2224628   1.0660792   0.9754082   0.6884547   0.6130937 #>  [991]   0.9401591   2.2430886   0.7640696   0.7123051   1.2083602   1.3596398 #>  [997]   1.2835860   0.6372802   1.5484673   0.5487884 #>"},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"Aggregation count matrices done blocks avoid large memory usage. Use `nBlocks` control number blocks read memory . Blocks defined `length(interactions(x))/nBlocks`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"","code":"aggHicMatrices(   x,   by = NULL,   FUN = sum,   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   compressionLevel = 0 )  # S4 method for InteractionArray aggHicMatrices(   x,   by = NULL,   FUN = sum,   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   compressionLevel = 0 )"},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"x InteractionArray object. String (length one character vector) describing whether aggregate interactions, files, neither (.e. NULL default). FUN Function use aggregating. nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. BPPARAM Parallelization params (passed `BiocParallel::bplapply()`). Default result `BiocParallel::bpparams()`. Parallel processing available `=interactions`. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"aggregated `DelayedArray` object.  `=interactions` `=files` 3-dimensional  `DelayedArray` returned. `=NULL` (default)  2-dimensional `DelayedMatrix` returned.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"Since interactions typically largest dimension InteractionArray, using `=interactions` creates HDF5-backed array store large arrays. Currently parallel processing HDF5-backed arrays supported regardless value `BPPARAM`. `=NULL` `=files` support parallel processing.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggHicMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate count matrices from\nInteractionArray objects — aggHicMatrices","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loops as GInteractions object loops <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Expand pixel ranges with a 5 pixel buffer on either side loops <-     binPairs(loops, binSize=100e3) |>     pixelsToMatrices(buffer=5)  ## Extract 10, 11x11 count matrices from 2 hic files iarr <-     loops[1:10] |>     pullHicMatrices(binSize=100e3,                     files=hicFiles)  ## Aggregate all, by files, or by interactions aggHicMatrices(x=iarr) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11> DelayedMatrix object of type \"double\": #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   250    85    44   .     9    27 #>  [2,]   203   201    87   .    14    23 #>  [3,]   231   210   255   .    18    24 #>  [4,]   320   225   201   .    25    28 #>  [5,]   123   279   177   .    22    23 #>  [6,]   254   170   294   .    43    38 #>  [7,]   116   216   169   .    40    30 #>  [8,]    93   104   276   .    55    42 #>  [9,]    56   118   110   .    89    61 #> [10,]    42    53   114   .   175    85 #> [11,]    34    46    46   .   200   190 aggHicMatrices(x=iarr, by=\"files\") #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11 x 2> DelayedArray object of type \"double\": #> ,,FS #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   143    51    27   .     6    13 #>  [2,]   108   110    44   .     8    15 #>   ...     .     .     .   .     .     . #> [10,]    25    26    63   .    71    54 #> [11,]    11    24    18   .    95    97 #>  #> ,,WT #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]   107    34    17   .     3    14 #>  [2,]    95    91    43   .     6     8 #>   ...     .     .     .   .     .     . #> [10,]    17    27    51   .   104    31 #> [11,]    23    22    28   .   105    93 #>  aggHicMatrices(x=iarr, by=\"interactions\") #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <11 x 11 x 10> DelayedArray object of type \"double\": #> ,,1 #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     7     4     6   .     0     0 #>  [2,]     8    11     5   .     3     1 #>   ...     .     .     .   .     .     . #> [10,]     2     2     8   .     8     2 #> [11,]     2     1     3   .     9     6 #>  #> ... #>  #> ,,10 #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     5     3     0   .     0     3 #>  [2,]     3     5     4   .     0     2 #>   ...     .     .     .   .     .     . #> [10,]     8    11    53   .     4     4 #> [11,]     8     7    10   .     6     8 #>"},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate the metadata columns of merged pairs — aggPairMcols","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"Aggregate metadata columns merged pairs","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"","code":"aggPairMcols(x, columns, funs)  # S4 method for MergedGInteractions,character,character_OR_function_OR_list aggPairMcols(x, columns, funs)"},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"x MergedGInteractions object. columns Character vector columns aggregate. funs Character vector functions apply `columns`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"`x` aggregated metadata columns","code":""},{"path":"http://ericscottdavis.com/mariner/reference/aggPairMcols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate the metadata columns of merged pairs — aggPairMcols","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, read.table, header=TRUE, nrows=1000) |>     lapply(as_ginteractions) |>     setNames(gsub(\"^.*extdata/(.{2}).*$\", \"\\\\1\", bedpeFiles))  ## Add names describing the source and loop giList <- lapply(seq_along(giList), \\(i) {     x <- giList[[i]]     x$name <- paste0(names(giList)[i], \"_loop_\", length(x))     return(x) })  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 5e03)  ## List loop names aggPairMcols(x, columns = \"name\", fun = \"list\") #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>                                              list.name #>                                                 <list> #>      [1]                        /home/runner/.cache/.. #>      [2]                        /home/runner/.cache/.. #>      [3]                        /home/runner/.cache/.. #>      [4]                        /home/runner/.cache/.. #>      [5]                        /home/runner/.cache/.. #>      ...                                           ... #>   [1782] /home/runner/.cache/..,/home/runner/.cache/.. #>   [1783] /home/runner/.cache/..,/home/runner/.cache/.. #>   [1784] /home/runner/.cache/..,/home/runner/.cache/.. #>   [1785] /home/runner/.cache/..,/home/runner/.cache/.. #>   [1786] /home/runner/.cache/..,/home/runner/.cache/.. #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths  ## Aggregate values aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = \"mean\") #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg #>                <numeric> #>      [1]         2.61103 #>      [2]         2.45301 #>      [3]         4.73751 #>      [4]         3.40635 #>      [5]         2.09352 #>      ...             ... #>   [1782]         2.89949 #>   [1783]         5.40040 #>   [1784]         4.60903 #>   [1785]         2.86398 #>   [1786]         4.48766 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths aggPairMcols(x, columns = c(\"APScoreAvg\", \"avg\"), fun = \"mean\") #> MergedGInteractions object with 1786 interactions and 2 metadata columns: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg  mean.avg #>                <numeric> <numeric> #>      [1]         2.61103   2.60512 #>      [2]         2.45301   2.73756 #>      [3]         4.73751   4.68239 #>      [4]         3.40635   4.49898 #>      [5]         2.09352   2.20826 #>      ...             ...       ... #>   [1782]         2.89949   2.08193 #>   [1783]         5.40040   3.58636 #>   [1784]         4.60903   3.34010 #>   [1785]         2.86398   2.43657 #>   [1786]         4.48766   3.98591 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = c(\"mean\", \"median\")) #> MergedGInteractions object with 1786 interactions and 2 metadata columns: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          mean.APScoreAvg median.APScoreAvg #>                <numeric>         <numeric> #>      [1]         2.61103           2.61103 #>      [2]         2.45301           2.45301 #>      [3]         4.73751           4.73751 #>      [4]         3.40635           3.40635 #>      [5]         2.09352           2.09352 #>      ...             ...               ... #>   [1782]         2.89949           2.89949 #>   [1783]         5.40040           5.40040 #>   [1784]         4.60903           4.60903 #>   [1785]         2.86398           2.86398 #>   [1786]         4.48766           4.48766 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths  ## Custom functions aggPairMcols(x, columns = c(\"APScoreAvg\"), fun = \\(x) {     ifelse(is.na(sd(x)), 0, sd(x)) }) #> MergedGInteractions object with 1786 interactions and 1 metadata column: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9   17815000-17820000 ---      chr9   18205000-18210000 | #>      [4]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [5]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1782]      chr7   33795000-33800000 ---      chr7   33932500-33937500 | #>   [1783]      chr7   25295000-25300000 ---      chr7   25887500-25892500 | #>   [1784]      chr7   86567500-86572500 ---      chr7   86775000-86780000 | #>   [1785]      chr7 116622500-116627500 ---      chr7 116760000-116765000 | #>   [1786]      chr7 140215000-140220000 ---      chr7 140347500-140352500 | #>          fun1.APScoreAvg #>                <numeric> #>      [1]               0 #>      [2]               0 #>      [3]               0 #>      [4]               0 #>      [5]               0 #>      ...             ... #>   [1782]      0.03410843 #>   [1783]      0.96721962 #>   [1784]      0.00133997 #>   [1785]      0.15114917 #>   [1786]      0.04735593 #>   ------- #>   regions: 2962 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DataFrames to GInteraction objects — as_ginteractions","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"`as_ginteractions` takes paired-interaction (.e. BEDPE) formatted data-frame-like object converts GInteractions object. convenience, `makeGInteractionsFromDataFrame` can used alias.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"","code":"as_ginteractions(   df,   keep.extra.columns = TRUE,   starts.in.df.are.0based = FALSE,   ... )  makeGInteractionsFromDataFrame(   df,   keep.extra.columns = TRUE,   starts.in.df.are.0based = FALSE,   ... )  # S4 method for DF_OR_df_OR_dt,logical_OR_missing,logical_OR_missing makeGInteractionsFromDataFrame(df, keep.extra.columns, starts.in.df.are.0based)  # S4 method for DF_OR_df_OR_dt,logical_OR_missing,logical_OR_missing as_ginteractions(df, keep.extra.columns, starts.in.df.are.0based)"},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"df data.table, data.frame, DataFrame object. Assumes first 6 colummns format chr1, start1, end1 chr2, start2, end2, representing pair interactions. keep.extra.columns TRUE FALSE (default). TRUE, columns df used form genomic ranges returned GRanges object returned metadata columns object. Otherwise, ignored. df width column, always ignored. starts..df..0based TRUE FALSE (default). TRUE, start positions genomic ranges df considered 0-based converted 1-based returned GRanges object. feature intended make convenient handle input contains data obtained resources using \"0-based start\" convention. notorious example resource UCSC Table Browser (http://genome.ucsc.edu/cgi-bin/hgTables). ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"GInteraction object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/as_ginteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert DataFrames to GInteraction objects — as_ginteractions","text":"","code":"## data.frame df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000) makeGInteractionsFromDataFrame(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## data.frame df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## data.table library(data.table) df <- data.table::data.table(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                              chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## DataFrame library(S4Vectors) df <- DataFrame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                 chr2 = \"chr1\", y1 = 30000, y2 = 40000) as_ginteractions(df) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Alias df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000,                  pval = 0.05, dist = 10000) makeGInteractionsFromDataFrame(df) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Additional metadata df <- data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                  chr2 = \"chr1\", y1 = 30000, y2 = 40000,                  pval = 0.05, dist = 10000) as_ginteractions(df) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Remove additional metadata as_ginteractions(df, keep.extra.columns = FALSE) #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 #>           <Rle>   <IRanges>         <Rle>   <IRanges> #>   [1]      chr1 10000-20000 ---      chr1 30000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Add 1 to starts (for 0-based programs) as_ginteractions(df, starts.in.df.are.0based = TRUE) #> GInteractions object with 1 interaction and 2 metadata columns: #>       seqnames1     ranges1     seqnames2     ranges2 |      pval      dist #>           <Rle>   <IRanges>         <Rle>   <IRanges> | <numeric> <numeric> #>   [1]      chr1 10001-20000 ---      chr1 30001-40000 |      0.05     10000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly bin paired ranges — binPairs","title":"Flexibly bin paired ranges — binPairs","text":"Paired range objects (like `GInteractions` BEDPE-formatted `data.frame`-like objects) can binned separately set ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly bin paired ranges — binPairs","text":"","code":"binPairs(x, binSize, pos1 = \"center\", pos2 = \"center\", ...)  # S4 method for DF_OR_df_OR_dt,numeric,character_OR_numeric_OR_missing,character_OR_numeric_OR_missing binPairs(x, binSize, pos1, pos2)  # S4 method for GInteractions,numeric,character_OR_numeric_OR_missing,character_OR_numeric_OR_missing binPairs(x, binSize, pos1, pos2)"},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly bin paired ranges — binPairs","text":"x `GInteractions` `data.frame`-like object paired interactions. binSize Integer (numeric) vector describing new size pair ranges. Accepts 2 values adjusting pair. pos1, pos2 Position within anchors resize bin. Can character integer vector length 1 `length(x)` designating position element `x`. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly bin paired ranges — binPairs","text":"GInteractions-like object binned `binSize`  `pos1` `pos2`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly bin paired ranges — binPairs","text":"","code":"## Construct interactions as data.frame df1 <-     data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                chr2 = \"chr1\", y1 = 30000, y2 = 40000)  ## Assign each range to 20-kb bins from the start positions binPairs(x = df1,          binSize = 20000,          pos1 = 'start',          pos2 = 'start') #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2     ranges2 #>           <Rle> <IRanges>         <Rle>   <IRanges> #>   [1]      chr1   0-20000 ---      chr1 20000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Construct GInteractions library(InteractionSet) gi1 <-     data.frame(chr1 = \"chr1\", x1 = 10000, x2 = 20000,                chr2 = \"chr1\", y1 = 30000, y2 = 40000) |>     as_ginteractions()  ## Assign each range to 20-kb bins from the start positions binPairs(x = gi1,          binSize = 20000,          pos1 = 'start',          pos2 = 'start') #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2     ranges2 #>           <Rle> <IRanges>         <Rle>   <IRanges> #>   [1]      chr1   0-20000 ---      chr1 20000-40000 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly bin ranges — binRanges","title":"Flexibly bin ranges — binRanges","text":"Flexibly bin ranges","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly bin ranges — binRanges","text":"","code":"binRanges(x, binSize, pos = \"center\")  # S4 method for GRanges,numeric,character_OR_numeric_OR_missing binRanges(x, binSize, pos = \"center\")"},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly bin ranges — binRanges","text":"x `GRanges` object binSize Integer (numeric) describing new size range. pos Position within range resize bin. Can character integer vector length 1 `length(x)` designating position element `x`. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly bin ranges — binRanges","text":"`GRanges` object shifted  `pos` assigned bins `binSize`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/binRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly bin ranges — binRanges","text":"","code":"library(GenomicRanges)  ## Create example GRanges gr1 <- GRanges(seqnames = \"chr1\",                ranges = IRanges::IRanges(start = rep(5000,3),                                          end = rep(6000,3)),                strand = c('+', '-', '*'))  gr2 <- gr1 |> promoters(upstream = 2000, downstream = 200)  ## Binning the results binRanges(x = gr1, binSize = 1000, pos = 'start') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 6000-7000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths binRanges(x = gr1, binSize = 1000, pos = 'end') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 6000-7000      + #>   [2]     chr1 5000-6000      - #>   [3]     chr1 6000-7000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths binRanges(x = gr1, binSize = 1000, pos = 'center') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 5000-6000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Bin after shifting back to TSS binRanges(x = gr2, binSize = 1000, pos = 2000) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1 5000-6000      + #>   [2]     chr1 6000-7000      - #>   [3]     chr1 5000-6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate loop enrichment over background. — calcLoopEnrichment","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"Pulls Hi-C pixels calculates enrichment selected foreground (`fg`) selected background (`bg`).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"","code":"calcLoopEnrichment(   x,   files,   fg = selectCenterPixel(mhDist = 1, buffer = defaultBuffer()),   bg = selectTopLeft(n = 4, buffer = defaultBuffer()) + selectBottomRight(n = 4, buffer =     defaultBuffer()),   FUN = function(fg, bg) median(fg + 1)/median(bg + 1),   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   ... )  # S4 method for GInteractions,character calcLoopEnrichment(   x,   files,   fg = selectCenterPixel(mhDist = 1, buffer = defaultBuffer()),   bg = selectTopLeft(n = 4, buffer = defaultBuffer()) + selectBottomRight(n = 4, buffer =     defaultBuffer()),   FUN = function(fg, bg) median(fg + 1)/median(bg + 1),   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   ... )  # S4 method for InteractionArray,missing calcLoopEnrichment(   x,   files,   fg = selectCenterPixel(mhDist = 1, buffer = defaultBuffer()),   bg = selectTopLeft(n = 4, buffer = defaultBuffer()) + selectBottomRight(n = 4, buffer =     defaultBuffer()),   FUN = function(fg, bg) median(fg + 1)/median(bg + 1),   nBlocks = 5,   verbose = TRUE,   BPPARAM = bpparam(),   ... )"},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"x GInteractions object InteractionArray object. files Character file paths `.hic` files. Required GInteractions object supplied x. fg MatrixSelection object matrix indices foreground. bg MatrixSelection object matrix indices background. FUN Function least two parameters (.e., `fg`, `bg`) defining enrichment calculated.  Must produce single value (numeric length one). first second parameters must represent  fg bg, respectively. nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. BPPARAM Parallelization params (passed `BiocParallel::bplapply()`). Default result `BiocParallel::bpparams()`. Parallel processing available `=interactions`. ... Additional arguments passed `pullHicMatrices`. See ?[`pullHicMatrices`].","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"DelayedMatrix enrichment scores  rows interactions (.e. loops)  columns Hi-C files.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/calcLoopEnrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate loop enrichment over background. — calcLoopEnrichment","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loops as GInteractions object loops <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Expand binSize of loops loops <- binPairs(x=loops, binSize=100e3)  ## Calculate loop enrichment calcLoopEnrichment(x=loops[1:10],                    files=hicFiles) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselected #>                                   #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  X  X  X  X  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #>  -  -  -  -  -  -  -  X  X  X  X  #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <10 x 2> DelayedMatrix object of type \"double\": #>              FS        WT #>  [1,] 1.0000000 1.6666667 #>  [2,] 1.0000000 1.4000000 #>  [3,] 1.5789474 2.1666667 #>  [4,] 1.3333333 1.0000000 #>  [5,] 0.7368421 0.7777778 #>  [6,] 1.3333333 1.0000000 #>  [7,] 0.7500000 1.0000000 #>  [8,] 1.7647059 1.4482759 #>  [9,] 0.8181818 0.9090909 #> [10,] 0.3333333 0.8000000  ## Customize different foreground/background ## with selection functions buffer <- 10 # choose pixel radius around center fg <- selectCenterPixel(mhDist=seq(0,4), buffer=buffer) bg <- selectCorners(n=6, buffer=buffer) +     selectOuter(n=2, buffer=buffer)  ## Calculate loop enrichment calcLoopEnrichment(x=loops[1:10],                    files=hicFiles,                    fg=fg,                    bg=bg) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselectedeading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <10 x 2> DelayedMatrix object of type \"double\": #>             FS       WT #>  [1,] 2.500000 2.000000 #>  [2,] 2.666667 3.500000 #>  [3,] 2.000000 2.500000 #>  [4,] 2.000000 1.500000 #>  [5,] 2.666667 3.000000 #>  [6,] 3.000000 2.500000 #>  [7,] 1.500000 1.500000 #>  [8,] 6.000000 4.500000 #>  [9,] 2.333333 1.250000 #> [10,] 1.000000 1.000000  ## Extract count matrices first mats <- binPairs(loops[1:10],100e3) |>   pixelsToMatrices(buffer=10) |>     pullHicMatrices(     files=hicFiles,     binSize=100e3)  ## Calculate loop enrichment from count matrices  calcLoopEnrichment(x = mats) #> '0' = foreground; #> 'X' = background; #> '*' = both; #> '-' = unselectedeading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> <10 x 2> DelayedMatrix object of type \"double\": #>              FS        WT #>  [1,] 0.8333333 1.1111111 #>  [2,] 0.7142857 1.1666667 #>  [3,] 1.7647059 2.0000000 #>  [4,] 1.0000000 0.7500000 #>  [5,] 0.7000000 0.7000000 #>  [6,] 1.5000000 1.3333333 #>  [7,] 1.0000000 1.2000000 #>  [8,] 2.0689655 2.2105263 #>  [9,] 0.6206897 0.7142857 #> [10,] 0.5000000 1.0000000"},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"GInteractions object containing pixels interest resized `` resolution (already), count matrices extracted interaction Hi-C file using new `` resolution. Count matrices aggregated interactions supplied `aggFUN`, new pixel selected supplied `selectFUN`. large datasets, increase `nBlocks` allow smaller blocks data processed memory.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"","code":"changePixelRes(   x,   files,   from,   to,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE,   norm = \"KR\",   half = \"upper\",   ... )  # S4 method for GInteractions,character changePixelRes(   x,   files,   from,   to,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE,   norm = \"KR\",   half = \"upper\",   ... )"},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"x GInteractions object. files Character file paths `.hic` files. Number (length one numeric vector) describing resolution `x`. Data binned value already binned. Number (length one numeric vector) describing new resolution pixels. aggFUN Function use aggregating across Hi-C files. Must passable `.max` `.min`. Default \"sum\". selectFUN Function use selecting among aggregated interactions. Must one \".max\" \".min\". nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. Default TRUE. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. ... Additional arguments passed `pullHicMatrices()`. See ?[`pullHicMatrices`].","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"GInteractions object updated  pixel interactions, along column  aggregated max/min value pixel.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/changePixelRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change pixels from one resolution to another\nselecting the new pixel using Hi-C data. — changePixelRes","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loops as GInteractions object loops <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Rebin loops to 2.5e6 resolution loops <- binPairs(x=loops, binSize=2.5e06)  ## Change pixel resolution from 2.5e6 to 500e3 changePixelRes(x=loops[1:5],                files=hicFiles,                from=2.5e6,                to=500e3) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> GInteractions object with 5 interactions and 1 metadata column: #>       seqnames1             ranges1     seqnames2             ranges2 | #>           <Rle>           <IRanges>         <Rle>           <IRanges> | #>   [1]         9   14500000-15000000 ---         9   14500000-15000000 | #>   [2]         9   89500000-90000000 ---         9   89500000-90000000 | #>   [3]         9   23500000-24000000 ---         9   23500000-24000000 | #>   [4]         9 128500000-129000000 ---         9 128500000-129000000 | #>   [5]         9 113000000-113500000 ---         9 113000000-113500000 | #>           value #>       <numeric> #>   [1]   543.407 #>   [2]   503.798 #>   [3]   464.689 #>   [4]   719.754 #>   [5]   540.652 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"Access count matrices InteractionArray InteractionMatrix Access count matrices InteractionArray InteractionMatrix Replace method counts","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"","code":"# S4 method for InteractionArray counts(object, showDimnames = FALSE)  # S4 method for InteractionMatrix counts(object)  # S4 method for InteractionMatrix counts(object) <- value"},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"object InteractionMatrix object showDimnames Logical vector length-one indicating whether show dimensions count matrices (default FALSE). applicable InteractionArray objects. value Value replacement","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"InteractionArray, 4-dimensional  DelayedArray Hi-C submatrices returned  following dimensions: rows count matrix,  columns count matrix, Interactions `object`,  Hi-C `files`. InteractionMatrix, 2-dimensional  DelayedArray returned rows representing  interactions `object` columns Hi-C  file `files`. InteractionMatrix, replace matrix  replaces counts assay matrix-like  objects supplied `value`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access count matrices from\nInteractionArray or InteractionMatrix — counts,InteractionArray-method","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ###################################### ## Accessing Hi-C count submatrices ## ######################################  ## Create example interactions x <- read.table(text=\"         9 14435000 14490000 9 14740000 14795000         9 89540000 89595000 9 89785000 89840000         9 23700000 23755000 9 23760000 23815000\") x <- as_ginteractions(x)  ## Extract 3, 11x11 count matrices from 2 hic files iarr <- pullHicMatrices(x, hicFiles, 5e03)  ## Access count matrices counts(iarr) #> <11 x 11 x 3 x 2> DelayedArray object of type \"double\": #> ,,1,FS #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  #> ... #>  #> ,,3,WT #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  counts(iarr, FALSE) #> <11 x 11 x 3 x 2> DelayedArray object of type \"double\": #> ,,1,FS #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>  #> ... #>  #> ,,3,WT #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     0   .     0     0 #>  [2,]     0     0     0   .     0     0 #>   ...     .     .     .   .     .     . #> [10,]     0     0     0   .     0     0 #> [11,]     0     0     0   .     0     0 #>   ################################# ## Accessing Hi-C count matrix ## #################################  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files imat <- pullHicPixels(x, hicFiles, 500e03)  ## Access count matrix counts(imat) #> <3 x 2> DelayedMatrix object of type \"double\": #>       FS  WT #> [1,]  49  38 #> [2,] 314 300 #> [3,] 258 187  ################################# ## Replacing Hi-C count matrix ## #################################  ## Realize as in-memory matrix counts(imat) <- as.matrix(counts(imat)) counts(imat) #>       FS  WT #> [1,]  49  38 #> [2,] 314 300 #> [3,] 258 187 imat #> class: InteractionMatrix  #> dim: count matrix with 3 interactions and 2 file(s) #> metadata(3): binSize norm matrix #> assays(1): counts #> rownames: NULL #> rowData names(0): #> colnames(2): FS WT #> colData names(2): files fileNames #> type: GInteractions #> regions: 4"},{"path":"http://ericscottdavis.com/mariner/reference/defaultBuffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Return default buffer\nIf InteractionArray is supplied,\nit uses the dimensions of counts matrices\nto set the buffer dimensions. — defaultBuffer","title":"Return default buffer\nIf InteractionArray is supplied,\nit uses the dimensions of counts matrices\nto set the buffer dimensions. — defaultBuffer","text":"Return default buffer InteractionArray supplied, uses dimensions counts matrices set buffer dimensions.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/defaultBuffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return default buffer\nIf InteractionArray is supplied,\nit uses the dimensions of counts matrices\nto set the buffer dimensions. — defaultBuffer","text":"","code":"defaultBuffer(x)"},{"path":"http://ericscottdavis.com/mariner/reference/defaultBuffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return default buffer\nIf InteractionArray is supplied,\nit uses the dimensions of counts matrices\nto set the buffer dimensions. — defaultBuffer","text":"x InteractionArray","code":""},{"path":"http://ericscottdavis.com/mariner/reference/defaultBuffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return default buffer\nIf InteractionArray is supplied,\nit uses the dimensions of counts matrices\nto set the buffer dimensions. — defaultBuffer","text":"5 (set default),  buffer provided InteractionArray,  error message InteractionArray  odd square (buffer)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Get clustered pairs from MergedGInteractions object — getPairClusters","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"Returns clustered pairs associated range `MergedGInteractions` object. Order always follows indices `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"","code":"getPairClusters(x, ...)  # S4 method for MergedGInteractions getPairClusters(x)"},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"x MergedGInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"list data.tables cooresponding pair  `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/getPairClusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get clustered pairs from MergedGInteractions object — getPairClusters","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, fread, nrows = 1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  ## Access pair clusters getPairClusters(x[1:3]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:  FS #>  #> [[2]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394  FS #>  #> [[3]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146  FS #>  getPairClusters(x[3:1]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146  FS #>  #> [[2]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394  FS #>  #> [[3]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:  FS #>  getPairClusters(x[c(3, 1, 2)]) #> [[1]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 110180000 110185000   5001       *      chr9 111520000 111525000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   3.406346               0.9965453      1.802207 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               3.768934               3.891115 4.498982 1.492786 7.849146  FS #>  #> [[2]] #>    seqnames1    start1      end1 width1 strand1 seqnames2    start2      end2 #> 1:      chr9 118645000 118650000   5001       *      chr9 119330000 119335000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.611034               0.9860443      1.414376 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg       std    value #> 1:               1.875585               2.121637 2.605124 0.7942202 4.272311 #>    src #> 1:  FS #>  #> [[3]] #>    seqnames1   start1     end1 width1 strand1 seqnames2   start2     end2 #> 1:      chr9 15280000 15285000   5001       *      chr9 15405000 15410000 #>    width2 strand2 color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #> 1:   5001       * 0,0,0   2.453013               0.9828022      1.543698 #>    Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2      avg      std    value src #> 1:               1.491568               1.607766 2.737556 0.856876 4.063394  FS #>  getPairClusters(x) |> length() #> [1] 1681"},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":null,"dir":"Reference","previous_headings":"","what":"HDF5-backed blockApply — hdf5BlockApply","title":"HDF5-backed blockApply — hdf5BlockApply","text":"Read array data blocks, apply function, write back HDF5 file.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HDF5-backed blockApply — hdf5BlockApply","text":"","code":"hdf5BlockApply(x, FUN, sink, grid, sink_grid, verbose = TRUE)  # S4 method for DelayedArray hdf5BlockApply(x, FUN, sink, grid, sink_grid, verbose = TRUE)"},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HDF5-backed blockApply — hdf5BlockApply","text":"x Delayed Array object. FUN Function takes one argument 'block' processes . sink HDF5RealizationSink object. grid ArrayGrid array `x`. sink_grid ArrayGrid `sink`. verbose Logical - whether block processing progress displayed.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HDF5-backed blockApply — hdf5BlockApply","text":"HDF5Array object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HDF5-backed blockApply — hdf5BlockApply","text":"Implements HDF5-backed option block processing DelayedArray objects.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/hdf5BlockApply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HDF5-backed blockApply — hdf5BlockApply","text":"","code":"## ################################################ ## This function is intended for advanced users. ## To learn more about using DelayedArray ## or HDF5-backed objects, see ?DelayedArray or ## ?HDF5Array ###################################################  library(DelayedArray) #> Loading required package: Matrix #>  #> Attaching package: ‘Matrix’ #> The following object is masked from ‘package:S4Vectors’: #>  #>     expand #> Loading required package: S4Arrays #>  #> Attaching package: ‘S4Arrays’ #> The following object is masked from ‘package:base’: #>  #>     rowsum #>  #> Attaching package: ‘DelayedArray’ #> The following objects are masked from ‘package:base’: #>  #>     apply, scale, sweep library(HDF5Array) #> Loading required package: rhdf5 #>  #> Attaching package: ‘HDF5Array’ #> The following object is masked from ‘package:rhdf5’: #>  #>     h5ls library(rhdf5)  ## Create example array that is longer in the ## 3rd dimension (representing interactions) dims <- c(11L, 11L, 100L, 2L) a <- array(data=seq(1, prod(dims)), dim=dims) a <- DelayedArray(a)  ## Define spacings, breaking up the longest dim ## Here we are processing in blocks of 10 spacings <- dim(a) spacings[3] <- ceiling(spacings[3]/10)  ## Define storage dimensions (all except those ## over which the function is being applied) storageDims <- dims[c(1,2,3)]  ## Define chunk dimensions for writing to HDF5 chunkDims <- storageDims chunkDims[3] <- spacings[3]  ## Create grid for applying the data (grid) ## and grid for writing to the sink (sink_grid) grid <- RegularArrayGrid(dims, spacings) sink_grid <- RegularArrayGrid(storageDims, chunkDims)  ## Create HDF5 file for writing h5 <- tempfile(fileext = \".h5\") h5createFile(h5)  ## Define compression for HDF5 compressionLevel <- 0  ## Create HDF5-backed realization sink sink <- HDF5RealizationSink(filepath=h5,                             name=\"counts\",                             type=\"integer\",                             dim=storageDims,                             chunkdim=chunkDims,                             level=compressionLevel)  ## Wrap function that operates on each block ## this can be anything, here it is sum FUN <- \\(block) apply(block, c(1,2,3), sum)  ## Read, apply, and write to HDF5 ans <- hdf5BlockApply(x=a,                       FUN=FUN,                       sink=sink,                       grid=grid,                       sink_grid=sink_grid,                       verbose=TRUE) #> / Reading and realizing block 1/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 6/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 7/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 8/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 9/10 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 10/10 ...  #> OK #> \\ Processing it ...  #> OK ans #> <11 x 11 x 100> HDF5Array object of type \"integer\": #> ,,1 #>        [,1]  [,2]  [,3]  [,4] ...  [,8]  [,9] [,10] [,11] #>  [1,] 12102 12124 12146 12168   . 12256 12278 12300 12322 #>  [2,] 12104 12126 12148 12170   . 12258 12280 12302 12324 #>   ...     .     .     .     .   .     .     .     .     . #> [10,] 12120 12142 12164 12186   . 12274 12296 12318 12340 #> [11,] 12122 12144 12166 12188   . 12276 12298 12320 12342 #>  #> ... #>  #> ,,100 #>        [,1]  [,2]  [,3]  [,4] ...  [,8]  [,9] [,10] [,11] #>  [1,] 36060 36082 36104 36126   . 36214 36236 36258 36280 #>  [2,] 36062 36084 36106 36128   . 36216 36238 36260 36282 #>   ...     .     .     .     .   .     .     .     .     . #> [10,] 36078 36100 36122 36144   . 36232 36254 36276 36298 #> [11,] 36080 36102 36124 36146   . 36234 36256 36278 36300 #>"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"Initialization method DelegatingGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"","code":"# S4 method for DelegatingGInteractions initialize(.Object, ..., delegate = GInteractions())"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":".Object GInteractions object ... Additional arguments delegate GInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-DelegatingGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialization method for DelegatingGInteractions — initialize,DelegatingGInteractions-method","text":"DelegatingGInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"Initialize MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"","code":"# S4 method for MergedGInteractions initialize(.Object, ..., delegate = GInteractions())"},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":".Object GInteractions object ... Additional arguments delegate GInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/initialize-MergedGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize MergedGInteractions — initialize,MergedGInteractions-method","text":"MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/makeRandomGInteractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating random GRanges & GInteractions — makeRandomGRanges","title":"Creating random GRanges & GInteractions — makeRandomGRanges","text":"Creating random GRanges & GInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/makeRandomGInteractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating random GRanges & GInteractions — makeRandomGRanges","text":"","code":"makeRandomGRanges(seqinfo, n = 100, ...)  makeRandomGInteractions(seqinfo, n = 100, interchromosomal = TRUE, ...)  # S4 method for Seqinfo makeRandomGRanges(seqinfo, n, .rows = NULL)  # S4 method for Seqinfo makeRandomGInteractions(seqinfo, n, interchromosomal)"},{"path":"http://ericscottdavis.com/mariner/reference/makeRandomGInteractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating random GRanges & GInteractions — makeRandomGRanges","text":"seqinfo Seqinfo object containing chromosome names, lengths, genome build. n Integer describing number random sequences generate ... Additional arguments. interchromosomal Boolean (TRUE/FALSE) indicating whether interchromosomal interactions allowed. Default TRUE. .rows (internal use ) vector row positions sample seqinfo.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/makeRandomGInteractions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating random GRanges & GInteractions — makeRandomGRanges","text":"GRanges GInteractions object ranges  selected randomly replacement provided  seqinfo.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/makeRandomGInteractions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating random GRanges & GInteractions — makeRandomGRanges","text":"","code":"## Define Seqinfo containing chromosome info if (require(TxDb.Hsapiens.UCSC.hg38.knownGene)) {     txdb <- TxDb.Hsapiens.UCSC.hg38.knownGene     si <- seqinfo(txdb)     si <- keepStandardChromosomes(si) } else {     si <- Seqinfo(         seqnames=c(\"chr1\", \"chr2\"),         seqlengths=rep(200e6, 2),         genome=\"hg38\"     ) } #> Loading required package: TxDb.Hsapiens.UCSC.hg38.knownGene #> Loading required package: GenomicFeatures #> Loading required package: AnnotationDbi  ## Make some GRanges set.seed(123) makeRandomGRanges(si, 100) #> GRanges object with 100 ranges and 0 metadata columns: #>         seqnames              ranges strand #>            <Rle>           <IRanges>  <Rle> #>     [1]    chr15   13828782-70429770      * #>     [2]    chr15   53296438-78742890      * #>     [3]    chr15   15454818-60964584      * #>     [4]    chr15   21625558-57530611      * #>     [5]    chr15    8277964-64393835      * #>     ...      ...                 ...    ... #>    [96]     chr2   80405238-95890355      * #>    [97]     chr1 170893955-179388667      * #>    [98]    chr16    5063321-35660766      * #>    [99]    chr16   10589506-65167455      * #>   [100]    chr16   24806742-37689512      * #>   ------- #>   seqinfo: 25 sequences (1 circular) from hg38 genome  ## Make some GInteractions set.seed(123) makeRandomGInteractions(si, n=100) #> GInteractions object with 100 interactions and 0 metadata columns: #>         seqnames1             ranges1     seqnames2            ranges2 #>             <Rle>           <IRanges>         <Rle>          <IRanges> #>     [1]     chr15   13828782-70429770 ---      chrY    4147731-8428764 #>     [2]     chr15   53296438-78742890 ---      chrY  15005282-45321438 #>     [3]     chr15   15454818-60964584 ---      chr1  54781435-60189865 #>     [4]     chr15   21625558-57530611 ---      chr1 39402618-181970367 #>     [5]     chr15    8277964-64393835 ---      chr1 21648261-133668401 #>     ...       ...                 ... ...       ...                ... #>    [96]      chr2   80405238-95890355 ---     chr20  13604328-59298515 #>    [97]      chr1 170893955-179388667 ---     chr20  35007959-62780398 #>    [98]     chr16    5063321-35660766 ---     chr20  13802693-47656725 #>    [99]     chr16   10589506-65167455 ---     chr19  35598384-44849872 #>   [100]     chr16   24806742-37689512 ---     chr19  31855464-51306138 #>   ------- #>   regions: 200 ranges and 0 metadata columns #>   seqinfo: 25 sequences (1 circular) from hg38 genome  ## Make some GInteractions only on same chromosome set.seed(123) makeRandomGInteractions(si, n=100, interchromosomal=FALSE) #> GInteractions object with 100 interactions and 0 metadata columns: #>         seqnames1             ranges1     seqnames2             ranges2 #>             <Rle>           <IRanges>         <Rle>           <IRanges> #>     [1]     chr15   13828782-70429770 ---     chr15   14465720-14982368 #>     [2]     chr15   53296438-78742890 ---     chr15   51381722-77619820 #>     [3]     chr15   15454818-60964584 ---     chr15   29294834-45801465 #>     [4]     chr15   21625558-57530611 ---     chr15   53327816-96005291 #>     [5]     chr15    8277964-64393835 ---     chr15   60670359-68571354 #>     ...       ...                 ... ...       ...                 ... #>    [96]      chr2   80405238-95890355 ---      chr2 118379329-165665755 #>    [97]      chr1 170893955-179388667 ---      chr1 112541676-185146454 #>    [98]     chr16    5063321-35660766 ---     chr16   46674131-69857380 #>    [99]     chr16   10589506-65167455 ---     chr16   35836834-39690234 #>   [100]     chr16   24806742-37689512 ---     chr16   11783461-46043479 #>   ------- #>   regions: 200 ranges and 0 metadata columns #>   seqinfo: 25 sequences (1 circular) from hg38 genome  ## Use specific binSizes n <- 100 binOptions <- seq(5e3, 200e3, by=5e3) si <- Seqinfo(seqnames=\"chr1\", seqlengths=200e6, genome=\"hg38\") set.seed(123) bins <- sample(binOptions, n, replace=TRUE) makeRandomGInteractions(si, n) |>     resize(bins) |>     trim() #> GInteractions object with 100 interactions and 0 metadata columns: #>         seqnames1             ranges1     seqnames2             ranges2 #>             <Rle>           <IRanges>         <Rle>           <IRanges> #>     [1]      chr1 121243273-121398272 ---      chr1   14211768-14366767 #>     [2]      chr1     7057416-7132415 ---      chr1   13550004-13625003 #>     [3]      chr1   41013509-41083508 ---      chr1     3618070-3688069 #>     [4]      chr1   70620055-70635054 ---      chr1   86204803-86219802 #>     [5]      chr1 102324459-102509458 ---      chr1   14961015-15146014 #>     ...       ...                 ... ...       ...                 ... #>    [96]      chr1   32331617-32506616 ---      chr1   97867288-98042287 #>    [97]      chr1   44551938-44751937 ---      chr1     2859232-3059231 #>    [98]      chr1   37802441-37952440 ---      chr1   67576720-67726719 #>    [99]      chr1       643242-718241 ---      chr1 108206447-108281446 #>   [100]      chr1   68355278-68475277 ---      chr1 120060909-120180908 #>   ------- #>   regions: 400 ranges and 0 metadata columns #>   seqinfo: 1 sequence from hg38 genome"},{"path":"http://ericscottdavis.com/mariner/reference/mariner-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Mariner: Explore the Hi-Cs — mariner-package","title":"Mariner: Explore the Hi-Cs — mariner-package","text":"`mariner` R/Bioconductor package exploring Hi-C data. enables users flexibly manipulate, extract, aggregate chromatin interaction data quickly efficiently.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mariner-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mariner: Explore the Hi-Cs — mariner-package","text":"Key Features: Manipulating Paired Ranges -   Convert, bin, shift paired genomic ranges. Clustering & Merging Interactions -   Group nearby interactions select one  representative. Extracting & Aggregating Interactions -   Pull Hi-C pixels matrices, aggregate  files interactions. Calculating Loop Enrichment -   Determine loop enrichment local background  selection functions flexibility select  foreground background. details features `mariner`, read vignette: `browseVignettes(package=\"mariner\")`","code":""},{"path":[]},{"path":"http://ericscottdavis.com/mariner/reference/mariner-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mariner: Explore the Hi-Cs — mariner-package","text":"Maintainer: Eric Davis ericscottdavis@outlook.com (ORCID) Authors: Sarah Parker smp3800@gmail.com (ORCID)","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge sets of paired interactions — mergePairs","title":"Merge sets of paired interactions — mergePairs","text":"Sets paired range objects (.e., `GInteractions`) first clustered genomic distance `dbscan`, representative interaction selected cluster.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge sets of paired interactions — mergePairs","text":"","code":"mergePairs(   x,   radius,   method = \"manhattan\",   column = NULL,   selectMax = TRUE,   pos = \"center\" )  # S4 method for list_OR_SimpleList_OR_GInteractions,numeric mergePairs(   x,   radius,   method = \"manhattan\",   column = NULL,   selectMax = TRUE,   pos = \"center\" )"},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge sets of paired interactions — mergePairs","text":"x List `GInteractions` `data.frame`-like objects. radius Numeric describing distance base pairs used define cluster pairs. method Character describing distance measure used. must one \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\" \"minkowski\". unambiguous substring can given. Default \"manhattan\". column Character denoting column used select among clustered interactions. selectMax Logical. TRUE (default) uses `.max()` select interaction pair. FALSE uses `.min()`. applicable `column` specified. pos Positions used clustering pairs. Must one \"start\", \"end\" \"center\". Default \"center\".","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge sets of paired interactions — mergePairs","text":"Returns `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge sets of paired interactions — mergePairs","text":"Interactions clustered groups using provided base pair `radius`, distance `method` `dbscan()`. Representative interactions selected group one two methods. `column` `selectMax` arguments provided, representative interaction maximum (minimum) value `column` returned cluster. parameters missing, new ranges pair returned calculating median modes cluster.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/mergePairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge sets of paired interactions — mergePairs","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, read.table, header=TRUE, nrows=1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\") x #> MergedGInteractions object with 1681 interactions and 9 metadata columns: #>          seqnames1             ranges1     seqnames2             ranges2 | #>              <Rle>           <IRanges>         <Rle>           <IRanges> | #>      [1]      chr9 118645000-118650000 ---      chr9 119330000-119335000 | #>      [2]      chr9   15280000-15285000 ---      chr9   15405000-15410000 | #>      [3]      chr9 110180000-110185000 ---      chr9 111520000-111525000 | #>      [4]      chr9   80375000-80380000 ---      chr9   80650000-80655000 | #>      [5]      chr9 108380000-108385000 ---      chr9 108475000-108480000 | #>      ...       ...                 ... ...       ...                 ... . #>   [1677]      chr7   27235000-27240000 ---      chr7   27815000-27820000 | #>   [1678]      chr7   86565000-86570000 ---      chr7   86775000-86780000 | #>   [1679]      chr7   95695000-95700000 ---      chr7   96660000-96665000 | #>   [1680]      chr7 116620000-116625000 ---      chr7 116760000-116765000 | #>   [1681]      chr7 140215000-140220000 ---      chr7 140350000-140355000 | #>                color APScoreAvg ProbabilityofEnrichment RegAPScoreAvg #>          <character>  <numeric>               <numeric>     <numeric> #>      [1]       0,0,0    2.61103                0.986044       1.41438 #>      [2]       0,0,0    2.45301                0.982802       1.54370 #>      [3]       0,0,0    3.40635                0.996545       1.80221 #>      [4]       0,0,0    2.09352                0.946897       1.40194 #>      [5]       0,0,0    2.14182                0.936547       1.41005 #>      ...         ...        ...                     ...           ... #>   [1677]       0,0,0    5.93708                0.999598       3.72133 #>   [1678]       0,0,0    4.60998                0.993894       2.73905 #>   [1679]       0,0,0    5.34541                0.999958       2.47288 #>   [1680]       0,0,0    2.97086                0.969639       1.86991 #>   [1681]       0,0,0    4.52114                0.993302       2.96563 #>          Avg_diffMaxNeihgboor_1 Avg_diffMaxNeihgboor_2       avg       std #>                       <numeric>              <numeric> <numeric> <numeric> #>      [1]               1.875585                2.12164   2.60512  0.794220 #>      [2]               1.491568                1.60777   2.73756  0.856876 #>      [3]               3.768934                3.89112   4.49898  1.492786 #>      [4]               0.818514                1.10611   2.20826  0.589976 #>      [5]               0.907892                1.01824   1.95072  0.543293 #>      ...                    ...                    ...       ...       ... #>   [1677]                2.28945                3.41471   5.78381  1.175767 #>   [1678]                2.07661                2.19518   3.25321  0.810704 #>   [1679]                5.50065                5.70786   5.18389  2.052481 #>   [1680]                1.32308                1.36217   2.31890  0.643926 #>   [1681]                1.04456                2.16908   4.07791  0.663425 #>              value #>          <numeric> #>      [1]   4.27231 #>      [2]   4.06339 #>      [3]   7.84915 #>      [4]   2.93583 #>      [5]   2.75773 #>      ...       ... #>   [1677]   7.81888 #>   [1678]   5.09909 #>   [1679]  10.07336 #>   [1680]   3.49497 #>   [1681]   5.00641 #>   ------- #>   regions: 2812 ranges and 0 metadata columns #>   seqinfo: 3 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"Method parallel slots MergedGInteractions","code":""},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"","code":"# S4 method for MergedGInteractions parallel_slot_names(x)"},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"x See ? parallel_slot_names","code":""},{"path":"http://ericscottdavis.com/mariner/reference/parallel_slot_names-MergedGInteractions-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for parallel slots for MergedGInteractions — parallel_slot_names,MergedGInteractions-method","text":"MergedGInteractions parallel slots","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"Returns file path describing -disk HDF5 data associated InteractionMatrix object stored. method circumvents `assays<-` `path<-` methods updating HDF5 path accessible file path broken.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"","code":"# S4 method for InteractionMatrix path(object)  # S4 method for InteractionMatrix path(object) <- value"},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"object InteractionMatrix object value String (length-one character vector) use path replacement.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"path HDF5 file associated  InteractionMatrix object. Updates path HDF5 file  InteractionMatrix object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"file longer exists, path returned along warning. allows file path updated even original linked data longer exists.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessor for h5File path from an InteractionMatrix — path,InteractionMatrix-method","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ################################# ## Accessing path to HDF5 data ## #################################  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files imat <- pullHicPixels(x, hicFiles, 500e03)  ## Access path path(imat) #> [1] \"/tmp/Rtmpj6yIad/file7ac753008138.h5\"  ################################# ## Updating path to HDF5 data ## ################################  ## Create example interactions x <- read.table(text=\"         9 14000000 14500000 9 14500000 15000000         9 89500000 90000000 9 89500000 90000000         9 23500000 24000000 9 23500000 24000000\") x <- as_ginteractions(x)  ## Extract 3 pixels from 2 hic files h5File <- tempfile(fileext=\".h5\") imat <- pullHicPixels(x, hicFiles, 500e03, h5File=h5File)  ## Move file to new location newFile <- tempfile(fileext=\"_new.h5\") file.rename(from=h5File, to=newFile) #> [1] TRUE  ## Update path path(imat) <- newFile path(imat) #> [1] \"/tmp/Rtmpj6yIad/file7ac717dd7baa_new.h5\""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand pixels to submatrices — pixelsToMatrices","title":"Expand pixels to submatrices — pixelsToMatrices","text":"Pixels defined paired-ranges starts & ends equal `binSize`. function takes GInteractions fitting description expands ranges `buffer` pixels around range.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand pixels to submatrices — pixelsToMatrices","text":"","code":"pixelsToMatrices(x, buffer)  # S4 method for GInteractions,numeric pixelsToMatrices(x, buffer)"},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand pixels to submatrices — pixelsToMatrices","text":"x GInteractions object. buffer Number (length one numeric vector) pixels around pixels `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand pixels to submatrices — pixelsToMatrices","text":"`x` updated ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expand pixels to submatrices — pixelsToMatrices","text":"example, buffer 3 return GInteractions object 3 pixels surrounding original pixel ranges. using `pullHicMatrices()`, result return matrix row column dimensions buffer*2+1. Note, function handle --bound ranges.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pixelsToMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand pixels to submatrices — pixelsToMatrices","text":"","code":"## Define example 100bp pixel library(InteractionSet) pixel <- GInteractions(     anchor1=GRanges(\"chr1:500-600\"),     anchor2=GRanges(\"chr1:2000-2100\") )  ## Expand pixel to matrix with ## 3 pixels surrounding the center ## pixel region <- pixelsToMatrices(x=pixel, buffer=3) region #> GInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1   200-900 ---      chr1 1700-2400 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot matrix — plotMatrix","title":"Plot matrix — plotMatrix","text":"Used plot single aggregate matrix aggregate peak analysis.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot matrix — plotMatrix","text":"","code":"plotMatrix(   data,   params = NULL,   x = NULL,   y = NULL,   width = NULL,   height = NULL,   just = c(\"left\", \"top\"),   default.units = \"inches\",   draw = TRUE,   palette = colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\")),   zrange = NULL,   na.color = \"grey\" )  # S4 method for DelayedMatrix_OR_matrix plotMatrix(   data,   params = NULL,   x = NULL,   y = NULL,   width = NULL,   height = NULL,   just = c(\"left\", \"top\"),   default.units = \"inches\",   draw = TRUE,   palette = colorRampPalette(RColorBrewer::brewer.pal(9, \"YlGnBu\")),   zrange = NULL,   na.color = \"grey\" )"},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot matrix — plotMatrix","text":"data `DelayedMatrix`, `matrix`, list matrices, 3 column `data.frame` APA results. params Optional `pgParams` object containing relevant function parameters. x Numeric unit object specifying x-location plot. y Numeric unit object specifying y-location plot. width Numeric unit object specifying width plot. height Numeric unit object specifying height plot. just String numeric vector specifying justification viewport relative (x, y) location. default.units String indicating default units use `x`, `y`, `width`, `height` given numeric vectors. draw Logical value indicating whether graphics output produced. palette `colorRampPalette` function use mapping values colors. zrange Vector length 2; max min values set color scale na.color String indicating color use mapping NA values.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot matrix — plotMatrix","text":"Function draw color-mapped matrix  return S3 object class `MatrixPlot`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/plotMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot matrix — plotMatrix","text":"","code":"library(plotgardener) #>  #> Attaching package: ‘plotgardener’ #> The following object is masked from ‘package:base’: #>  #>     c library(RColorBrewer)  ## Create divergent matrix #### m <- matrix(data=rnorm(n=21*21, mean=0, sd=2), nrow=21, ncol=21)  ## Define parameters p <- pgParams(width=3, height=3, default.units=\"inches\")  ## Create page pageCreate(params=p)  ## Plot apa plot <- plotMatrix(data=m,                    x=p$width/2,                    y=p$height/2,                    width=p$width*0.5, height = p$width*0.5,                    just=c(\"center\", \"center\"),                    palette=colorRampPalette(c(\"blue\", \"white\", \"red\")),                    zrange=NULL) #> MatrixPlot[MatrixPlot1]  ## Annotate legend annoHeatmapLegend(plot=plot,                   x=2.3,                   y=0.75,                   width=0.1,                   height=0.75) #> heatmapLegend[heatmapLegend1]    ## Create sequential matrix m <- matrix(data=sample(0:100, 21*21, replace=TRUE), nrow=21, ncol=21)  ## Define parameters p <- pgParams(width=3, height=3, default.units=\"inches\")  ## Create page pageCreate(params=p)  ## Plot apa plot <- plotMatrix(data=m,                    x=p$width/2,                    y=p$height/2,                    width=p$width*0.5,                    height=p$width*0.5,                    just=c(\"center\", \"center\"),                    palette=colorRampPalette(c(\"white\", \"dark red\")),                    zrange = NULL) #> MatrixPlot[MatrixPlot1]  ## Annotate legend annoHeatmapLegend(plot=plot,                   x=2.3,                   y=0.75,                   width=0.1,                   height=0.75) #> heatmapLegend[heatmapLegend1]"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull submatrices from `.hic` files — pullHicMatrices","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"dimensions pulled submatrix defined dividing widths anchors `x` `binSize`. anchor widths interaction, InteractionArray returned. However, anchor widths differ `x`, InteractionJaggedArray returned instead.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"","code":"pullHicMatrices(   x,   files,   binSize,   ...,   h5File = tempfile(fileext = \".h5\"),   half = \"both\",   norm = \"NONE\",   matrix = \"observed\",   blockSize = 248956422,   onDisk = TRUE,   compressionLevel = 0,   chunkSize = 1 )  # S4 method for GInteractions,character,numeric pullHicMatrices(   x,   files,   binSize,   h5File,   half,   norm,   matrix,   blockSize,   onDisk,   compressionLevel,   chunkSize )"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"x GInteractions object containing interactions extract Hi-C files. files Character file paths `.hic` files. binSize Integer (numeric) describing resolution (range widths) paired data. ... Additional arguments. h5File Character file path save `.h5` file. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. matrix String (length one character vector) Type matrix extract. Must one \"observed\", \"oe\", \"expected\". \"observed\" observed counts, \"oe\" observed/expected counts, \"expected\" expected counts. blockSize Number (length one numeric vector) describing size base-pairs pull `.hic` file. Default 248956422 (length longest chromosome human hg38 genome). large `.hic` files `blockSize` can reduced conserve amount data read time. Larger `blockSize` values speed performance, use memory. onDisk Boolean (length one logical vector NA) indicating whether extracted data stored disk HDF5 file. Default TRUE. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file. chunkSize Number (length one numeric vector) indicating many values `x` chunk write HDF5 stored data. downstream implications accessing subsets later. small `compressionLevel` values use smaller `chunkSize` values large `compressionLevel` values use large (.e. `length(x)`) values improve performance.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"InteractionSet object 4-dimensional array  Hi-C submatrices, rownames, colnames. Array  stored following dimensions: Interactions `x`,  Hi-C `files`, rows submatrix, columns submatrix.  submatrices returned rows cooresponding anchor1  `x` columns correspond anchor2 `x`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull submatrices from `.hic` files — pullHicMatrices","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loop pixels as GInteractions object pixels <-   WT_5kbLoops.txt() |>   setNames(\"WT\") |>   read.table(header=TRUE) |>   as_ginteractions(keep.extra.columns=FALSE) |>   binPairs(binSize=100e3) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Expand pixels to regions for pulling ## Hi-C submatrices regions <- pixelsToMatrices(x=pixels, buffer=5)  ## Extract 11x11 count matrices from the ## first 100 regions and 2 Hi-C files iarr <- pullHicMatrices(x=regions[1:100],                         files=hicFiles,                         binSize=100e3) iarr #> class: InteractionArray  #> dim: 100 interaction(s), 2 file(s), 11x11 count matrix(es) #> metadata(3): binSize norm matrix #> assays(3): counts rownames colnames #> rownames: NULL #> rowData names(0): #> colnames(2): FS WT #> colData names(2): files fileNames #> type: GInteractions #> regions: 12176  ## Access count matrices counts(iarr) #> <11 x 11 x 100 x 2> DelayedArray object of type \"double\": #> ,,1,FS #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     4     3     4   .     0     0 #>  [2,]     6     9     3   .     2     1 #>   ...     .     .     .   .     .     . #> [10,]     1     1     4   .     2     2 #> [11,]     1     1     0   .     5     2 #>  #> ... #>  #> ,,100,WT #>        [,1]  [,2]  [,3] ... [,10] [,11] #>  [1,]     0     0     1   .     0     0 #>  [2,]     2     0     0   .     1     1 #>   ...     .     .     .   .     .     . #> [10,]     5     8    32   .     0     5 #> [11,]     2     4     8   .     0     1 #>   ## Display the start bin of each ## interaction in the count ## matrices counts(iarr, showDimnames=TRUE) #> <11 x 11 x 100 x 2> DelayedArray object of type \"double\": #> ,,1,FS #>          14200000 14300000 14400000 ... 15100000 15200000 #> 13900000        4        3        4   .        0        0 #> 14000000        6        9        3   .        2        1 #> 14100000       11        8        4   .        1        1 #> 14200000       38        8        4   .        0        0 #> 14300000        8       31       11   .        0        1 #> 14400000        4       11       35   .        3        2 #> 14500000        4        1       12   .        1        0 #> 14600000        2        0        4   .        3        2 #> 14700000        1        2        6   .        3        3 #> 14800000        1        1        4   .        2        2 #> 14900000        1        1        0   .        5        2 #>  #> ... #>  #> ,,100,WT #>          16300000 16400000 16500000 ... 17200000 17300000 #> 15600000        0        0        1   .        0        0 #> 15700000        2        0        0   .        1        1 #> 15800000        1        2        1   .        0        1 #> 15900000        2        3        2   .        1        1 #> 16000000        1        2        0   .        1        1 #> 16100000        6        3        2   .        0        0 #> 16200000        4        4        3   .        1        0 #> 16300000       25        8        5   .        0        1 #> 16400000        8       19        8   .        0        0 #> 16500000        5        8       32   .        0        5 #> 16600000        2        4        8   .        0        1  ## InteractionJaggedArray example gi <- read.table(text=\"             1 51000000 51300000 1 51000000 51500000             2 52000000 52300000 3 52000000 52500000             1 150000000 150500000 1 150000000 150300000             2 52000000 52300000 2 52000000 52800000\") |>     as_ginteractions()  iarr <- pullHicMatrices(gi, hicFiles, 100e03, half=\"both\") iarr #> class: InteractionJaggedArray #> dim: 4 interaction(s), 2 file(s), variable count matrix(es) #> metadata(3): binSize, norm, matrix #> colData: FS, WT #> colData names(2): files, fileNames #> HDF5: /tmp/Rtmpj6yIad/file7ac74ae0d623.h5  counts(iarr) #> <n x m x 4 x 2> JaggedArray: #> ,,1,1 #> <3 x 5> matrix #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   53   15    5    1    4 #> [2,]   15   68   19    8    5 #> [3,]    5   19   69   12    2 #>  #> ... #>  #> ,,4,2 #> <3 x 8> matrix #>      [,1] [,2] [,3] ... [,7] [,8] #> [1,]   31    7    2   .    0    0 #> [2,]    7   22    5   .    1    1 #> [3,]    2    5   26   .    0    2 #>"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull contact frequency from `.hic` files — pullHicPixels","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"Pull contact frequency `.hic` files","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"","code":"pullHicPixels(   x,   files,   binSize,   ...,   h5File = tempfile(fileext = \".h5\"),   half = \"both\",   norm = \"NONE\",   matrix = \"observed\",   blockSize = 248956422,   onDisk = TRUE,   compressionLevel = 0,   chunkSize = 1 )  # S4 method for GInteractions,character,numeric pullHicPixels(   x,   files,   binSize,   h5File,   half,   norm,   matrix,   blockSize,   onDisk,   compressionLevel,   chunkSize )"},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"x GInteractions object containing interactions extract Hi-C files. files Character file paths `.hic` files. binSize Integer (numeric) describing resolution (range widths) paired data. ... Additional arguments. h5File Character file path save `.h5` file. half String (character vector length one) indicating whether keep values upper triangular (`half=\"upper\"`) `start1 < start2`, lower triangular (`half=\"lower\"`) `start1 > start2`, (`half=\"\"`, default). `half=\"upper\"` lower triangular values `NA`. `half=\"lower\"` upper triangular values `NA`. `half=\"\"` `NA` values. interchromosomal interactions inherent directionality chromosomes, data returned regardless specified order. norm String (length one character vector) describing Hi-C normalization apply. Use `strawr::readHicNormTypes()` see accepted values file `files`. matrix String (length one character vector) Type matrix extract. Must one \"observed\", \"oe\", \"expected\". \"observed\" observed counts, \"oe\" observed/expected counts, \"expected\" expected counts. blockSize Number (length one numeric vector) describing size base-pairs pull `.hic` file. Default 248956422 (length longest chromosome human hg38 genome). large `.hic` files `blockSize` can reduced conserve amount data read time. Larger `blockSize` values speed performance, use memory. onDisk Boolean (length one logical vector NA) indicating whether extracted data stored disk HDF5 file. Default TRUE. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file. chunkSize Number (length one numeric vector) indicating many values `x` chunk write HDF5 stored data. downstream implications accessing subsets later. small `compressionLevel` values use smaller `chunkSize` values large `compressionLevel` values use large (.e. `length(x)`) values improve performance.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"InteractionSet object 2-dimensional array  Hi-C interactions (rows) Hi-C sample (columns).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/pullHicPixels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull contact frequency from `.hic` files — pullHicPixels","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loop pixels as GInteractions object pixels <-   WT_5kbLoops.txt() |>   setNames(\"WT\") |>   read.table(header=TRUE) |>   as_ginteractions(keep.extra.columns=FALSE) |>   binPairs(binSize=100e3) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(pixels) <- 'ENSEMBL'  ## Extract the first 100 pixels imat <- pullHicPixels(x=pixels[1:100],                       files=hicFiles,                       binSize=100e3) imat #> class: InteractionMatrix  #> dim: count matrix with 100 interactions and 2 file(s) #> metadata(3): binSize norm matrix #> assays(1): counts #> rownames: NULL #> rowData names(0): #> colnames(2): FS WT #> colData names(2): files fileNames #> type: GInteractions #> regions: 12176  ## Access count matrix counts(imat) #> <100 x 2> DelayedMatrix object of type \"double\": #>        FS WT #>   [1,]  6  4 #>   [2,]  6  6 #>   [3,] 33 30 #>   [4,]  3  2 #>   [5,]  6  6 #>    ...  .  . #>  [96,]  3  1 #>  [97,]  2  1 #>  [98,]  2  1 #>  [99,] 10  7 #> [100,]  3  5"},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":null,"dir":"Reference","previous_headings":"","what":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"InteractionJaggedArray objects count matrices (JaggedArray objects) contain variable dimension matrices. `regularize` function resizes matrices new dimensions supplied `ndim`. result DelayedArray object (JaggedArray) InteractionArray object (InteractionJaggedArray).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"","code":"regularize(   x,   ndim = c(10, 10),   h5File = tempfile(fileext = \".h5\"),   scale = TRUE,   nBlocks = 5,   chunkSize = 1,   compressionLevel = 0,   ... )  # S4 method for JaggedArray regularize(x, ndim, h5File, scale, nBlocks, chunkSize, compressionLevel)  # S4 method for InteractionJaggedArray regularize(x, ndim, h5File, scale, nBlocks, chunkSize, compressionLevel)"},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"x JaggedArray InteractionJaggedArray object. ndim Numeric vector length two describing new dimensions output matrices. h5File Character file path save `.h5` file. scale Boolean (TRUE/FALSE) indicating whether values new matrices scaled total signal matrix. nBlocks Number blocks block-processing JaggedArrays. Default 5. Increase large datasets. read process data , set value 1. chunkSize Number (length one numeric vector) indicating many values `x` chunk write HDF5 stored data. downstream implications accessing subsets later. small `compressionLevel` values use smaller `chunkSize` values large `compressionLevel` values use large (.e. `length(x)`) values improve performance. compressionLevel Number (length one numeric vector) 0 (Default) 9 indicating compression level used HDF5 file. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"`x` JaggedArray `regularize` returns  HDF5-backed 4-dimensional DelayedArray object  first second dimensions rows columns  count matrices (`ndim`), third dimension  number interactions fourth dimension  number files. `x` InteractionJaggedArray  InteractionArray object returned counts returns  object described .","code":""},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"Note interaction/binSize/count matrices relationship inconsistent resulting InteractionArray object row/col names available.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/regularize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regularize JaggedArray or\nInteractionJaggedArray objects — regularize","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     LEUK_HEK_PJA27_inter_30.hic(),     LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Create test interactions gi <- read.table(text=\"             1 51000000 51300000 1 51000000 51500000             2 52000000 52300000 3 52000000 52500000             1 150000000 150500000 1 150000000 150300000             2 52000000 52300000 2 52000000 52800000\") |>     as_ginteractions() gi <- c(gi,gi) # make more interactions  ## InteractionJaggedArray object ija <- pullHicMatrices(gi, hicFiles, 100e03, half=\"both\")  ## Regularize InteractionJaggedArray ia <- regularize(ija, ndim=c(5,5), nBlocks=1) #> Loading required namespace: fields aggHicMatrices(ia, nBlocks=1) #> / Reading and realizing block 1/1 ...  #> OK #> \\ Processing it ...  #> OK #> <5 x 5> DelayedMatrix object of type \"double\": #>           [,1]      [,2]      [,3]      [,4]      [,5] #> [1,] 1.5333093 0.5283683 0.2446879 0.2068139 0.1215322 #> [2,] 0.9166665 0.8038605 0.5434594 0.3513887 0.1819409 #> [3,] 0.4196802 0.8874755 0.3388203 0.4250340 0.6039009 #> [4,] 0.2658102 0.7882093 1.1711284 0.2252012 0.2712338 #> [5,] 0.1107120 0.7057650 2.0383085 0.1545785 0.1621146  ## Regularize JaggedArray ja <- counts(ija) regularize(ja, ndim=c(5,5), nBlocks=1) #> <5 x 5 x 8 x 2> HDF5Array object of type \"double\": #> ,,1,1 #>             [,1]        [,2]        [,3]        [,4]        [,5] #> [1,] 0.104433498 0.029556650 0.009852217 0.001970443 0.007881773 #> [2,] 0.066995074 0.081773399 0.023645320 0.008866995 0.008866995 #> [3,] 0.029556650 0.133990148 0.037438424 0.015763547 0.009852217 #> [4,] 0.019704433 0.085714286 0.086699507 0.019704433 0.006896552 #> [5,] 0.009852217 0.037438424 0.135960591 0.023645320 0.003940887 #>  #> ... #>  #> ,,8,2 #>             [,1]        [,2]        [,3]        [,4]        [,5] #> [1,] 0.203112203 0.021294021 0.013104013 0.014742015 0.000000000 #> [2,] 0.124488124 0.040950041 0.018018018 0.013104013 0.003276003 #> [3,] 0.045864046 0.060606061 0.022932023 0.011466011 0.006552007 #> [4,] 0.029484029 0.098280098 0.034398034 0.010647011 0.009828010 #> [5,] 0.013104013 0.135954136 0.045864046 0.009828010 0.013104013 #>"},{"path":"http://ericscottdavis.com/mariner/reference/removeShortPairs.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","title":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","text":"Note applies intrachromosomal pairs, pair distance meaningless interchromosomal pairs. Therefore, interchromosomal pairs kept.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/removeShortPairs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","text":"","code":"removeShortPairs(x, padding = 0)  # S4 method for GInteractions removeShortPairs(x, padding = 0)"},{"path":"http://ericscottdavis.com/mariner/reference/removeShortPairs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","text":"x GInteractions object. padding Minimum distance away diagonal.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/removeShortPairs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","text":"GInteractions object  short pairs removed.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/removeShortPairs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove interactions that would cross\nthe Hi-C diagonal or a specified\ndistance from the diagonal. — removeShortPairs","text":"","code":"## Example GInteractions object gi <- as_ginteractions(read.table(     text=\"         seqnames1 start1 end1 seqnames2 start2 end2 keep         chr1 300 400 chr1 300 400 'no'         chr1 100 200 chr1 300 400 'yes'         chr1 300 400 chr1 100 200 'yes'         chr1 300 400 chr2 300 400 'yes'         chr1 250 350 chr1 300 400 'only_with_padding_50'         chr1 300 400 chr1 250 350 'only_with_padding_50'         \",     header=TRUE ))  ## Remove pairs that would cross the diagonal removeShortPairs(gi) #> GInteractions object with 3 interactions and 1 metadata column: #>       seqnames1   ranges1     seqnames2   ranges2 |        keep #>           <Rle> <IRanges>         <Rle> <IRanges> | <character> #>   [1]      chr1   100-200 ---      chr1   300-400 |         yes #>   [2]      chr1   300-400 ---      chr1   100-200 |         yes #>   [3]      chr1   300-400 ---      chr2   300-400 |         yes #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths  ## Add 50bp of padding removeShortPairs(gi, padding=50) #> GInteractions object with 3 interactions and 1 metadata column: #>       seqnames1   ranges1     seqnames2   ranges2 |        keep #>           <Rle> <IRanges>         <Rle> <IRanges> | <character> #>   [1]      chr1   100-200 ---      chr1   300-400 |         yes #>   [2]      chr1   300-400 ---      chr1   100-200 |         yes #>   [3]      chr1   300-400 ---      chr2   300-400 |         yes #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 2 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"Get pixel representing strongest weakest interaction InteractionArray","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"","code":"selectPixel(   x,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE )  # S4 method for InteractionArray selectPixel(   x,   aggFUN = sum,   selectFUN = \"which.max\",   nBlocks = 5,   verbose = TRUE )"},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"x InteractionArray object aggFUN Function use aggregating across Hi-C files. Must passable `.max` `.min`. Default \"sum\". selectFUN Function use selecting among aggregated interactions. Must one \".max\" \".min\". nBlocks Number blocks block-processing arrays. Default 5. Increase large datasets. read process data , set value 1. verbose Boolean (TRUE FALSE) describing whether report block-processing progress. Default TRUE.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"GInteractions object updated  pixel interactions, along column  aggregated max/min value pixel.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectPixel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the pixel representing the strongest\nor weakest interaction in an InteractionArray — selectPixel","text":"","code":"## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Read .hic file paths hicFiles <- c(     marinerData::LEUK_HEK_PJA27_inter_30.hic(),     marinerData::LEUK_HEK_PJA30_inter_30.hic() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(hicFiles) <- c(\"FS\", \"WT\")  ## Read in loops as GInteractions object loops <-     WT_5kbLoops.txt() |>     setNames(\"WT\") |>     read.table(header=TRUE) |>     as_ginteractions(keep.extra.columns=FALSE) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache  ## Removes the \"chr\" prefix for compatibility ## with the preprocessed hic files GenomeInfoDb::seqlevelsStyle(loops) <- 'ENSEMBL'  ## Rebin loops to 2.5e6 resolution loops <- binPairs(x=loops, binSize=2.5e06)  ## Pull 5x5 matrices iarr <- pullHicMatrices(x=loops[1:5],                         files=hicFiles,                         binSize=500e3,                         norm=\"KR\",                         half='upper')  ## Select pixel selectPixel(iarr) #> / Reading and realizing block 1/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 2/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 3/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 4/5 ...  #> OK #> \\ Processing it ...  #> OK #> / Reading and realizing block 5/5 ...  #> OK #> \\ Processing it ...  #> OK #> GInteractions object with 5 interactions and 1 metadata column: #>       seqnames1             ranges1     seqnames2             ranges2 | #>           <Rle>           <IRanges>         <Rle>           <IRanges> | #>   [1]         9   14500000-15000000 ---         9   14500000-15000000 | #>   [2]         9   89500000-90000000 ---         9   89500000-90000000 | #>   [3]         9   23500000-24000000 ---         9   23500000-24000000 | #>   [4]         9 128500000-129000000 ---         9 128500000-129000000 | #>   [5]         9 113000000-113500000 ---         9 113000000-113500000 | #>           value #>       <numeric> #>   [1]   543.407 #>   [2]   503.798 #>   [3]   464.689 #>   [4]   719.754 #>   [5]   540.652 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 23 sequences from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize selection for a MatrixSelection object — selectRadius","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"Note: buffer must selection functions work appropriately `selectCoordinates`, `rowInd` `colInd` paired selected position matrix `c(rowInd[1:], colInd[1:j])` `` rows `j` columns.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"","code":"selectRadius(x, buffer, invert = FALSE)  selectCenterPixel(mhDist, buffer, invert = FALSE)  selectSubmatrix(m, invert = FALSE)  selectCoordinates(rowInd, colInd, buffer, invert = FALSE)  selectBlock(rowInd, colInd, buffer, invert = FALSE)  selectTopLeft(n, buffer, inset = 0, invert = FALSE)  selectTopRight(n, buffer, inset = 0, invert = FALSE)  selectBottomRight(n, buffer, inset = 0, invert = FALSE)  selectBottomLeft(n, buffer, inset = 0, invert = FALSE)  selectCorners(n, buffer, inset = 0, invert = FALSE)  selectRows(rows, buffer, invert = FALSE)  selectCols(cols, buffer, invert = FALSE)  selectInner(n, buffer, invert = FALSE)  selectOuter(n, buffer, invert = FALSE)  # S4 method for MatrixSelection show(object)  # S4 method for numeric selectRadius(x, buffer, invert = FALSE)  # S4 method for numeric selectCenterPixel(mhDist, buffer, invert = FALSE)  # S4 method for matrix selectSubmatrix(m, invert = FALSE)  # S4 method for numeric selectCoordinates(rowInd, colInd, buffer, invert = FALSE)  # S4 method for numeric selectBlock(rowInd, colInd, buffer, invert = FALSE)  # S4 method for numeric selectTopLeft(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectTopRight(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectBottomRight(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectBottomLeft(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectCorners(n, buffer, inset = 0, invert = FALSE)  # S4 method for numeric selectRows(rows, buffer, invert = FALSE)  # S4 method for numeric selectCols(cols, buffer, invert = FALSE)  # S4 method for numeric selectInner(n, buffer, invert = FALSE)  # S4 method for numeric selectOuter(n, buffer, invert = FALSE)"},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"x Integer vector manhattan distances select. buffer Integer describing number pixels surrounding central pixel. invert Boolean indicating whether invert selection. mhDist Integer vector manhattan distances select along center pixel. m matrix 1's indicating selected positions 0's indicated unselected positions. rowInd Integer describing row indices. colInd Integer describing column indices. n Integer describing number outer pixels select. Must length one. inset Integer describing number pixels inset selection outer edge matrix. Default 0 uses inset. rows Integer describing rows select. cols Integer describing cols select. object MatrixSelection object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"text-based visualization select matrix  indices. Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow). Numeric vector matrix indices (byRow).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selection-functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize selection for a MatrixSelection object — selectRadius","text":"","code":"res <- selectCenterPixel(0, 3) show(res) #> '0' = selected; '-' = unselected #>                       #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  0  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  selectRadius(x=c(2,3,4), buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  0  0  0  0  0  -  -  -  #>  -  -  0  0  0  -  0  0  0  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  0  0  0  -  0  0  0  -  -  #>  -  -  -  0  0  0  0  0  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCenterPixel(0, 5) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  0  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectSubmatrix(m = matrix(rep(c(1,0,1), 3), nrow=3, ncol=3)) #> '0' = selected; '- ' = unselected #>           #>  0  0  0  #>  -  -  -  #>  0  0  0  #> [1] 1 3 4 6 7 9 selectCoordinates(rowInd=1:3, colInd=1:3, buffer=5) #> '0' = selected; '-' = unselected #>                                   #>  0  -  -  -  -  -  -  -  -  -  -  #>  -  0  -  -  -  -  -  -  -  -  -  #>  -  -  0  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBlock(rowInd=1:3, colInd=1:3, buffer=5) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectTopLeft(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectTopRight(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBottomRight(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectBottomLeft(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCorners(n=3, buffer=5, inset=1, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  0  0  0  -  -  -  0  0  0  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectRows(rows=1:3, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  0  0  0  0  0  0  0  0  0  0  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectCols(cols=1:3, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  #>  0  0  0  -  -  -  -  -  -  -  -  selectInner(n=1, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  0  0  0  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  #>  -  -  -  -  -  -  -  -  -  -  -  selectOuter(n=1, buffer=5, invert=FALSE) #> '0' = selected; '-' = unselected #>                                   #>  0  0  0  0  0  0  0  0  0  0  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  -  -  -  -  -  -  -  -  -  0  #>  0  0  0  0  0  0  0  0  0  0  0"},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Get selectionMethod from MergedGInteractions object — selectionMethod","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"Get selectionMethod MergedGInteractions object","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"","code":"selectionMethod(x, ...)  # S4 method for MergedGInteractions selectionMethod(x, ...)"},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"x MergedGInteractions object. ... Additional arguments.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"character vector describing selection  method used merging.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/selectionMethod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get selectionMethod from MergedGInteractions object — selectionMethod","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Reference BEDPE files (loops called with SIP) bedpeFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(bedpeFiles) <- c(\"FS\", \"WT\")  ## Read in bedpeFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(bedpeFiles, fread, nrows=1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03,                 column = \"APScoreAvg\")  selectionMethod(x) #> Select by column 'APScoreAvg'"},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexibly shifting GRanges according to strand — shiftRanges","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"Flexibly shifting GRanges according strand","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"","code":"shiftRanges(x, pos)  # S4 method for GRanges,character_OR_numeric shiftRanges(x, pos)"},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"x GRanges object pos Position within anchors resize bin. Can character integer vector length 1 `length(x)` designating position element bedpe. Character options \"start\", \"end\" \"center\". Integers referenced start position '+' '*' strands end position '-' strand.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"GRanges object single position range  shifted appropriately.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/shiftRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flexibly shifting GRanges according to strand — shiftRanges","text":"","code":"library(GenomicRanges)  ## Create example GRanges gr1 <- GRanges(seqnames = \"chr1\",                ranges = IRanges::IRanges(start = rep(5000,3),                                          end = rep(6000,3)),                strand = c('+', '-', '*'))  gr2 <- gr1 |> promoters(upstream = 2000, downstream = 200)  ## Shifting anchors by keyword shiftRanges(gr1, 'start') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5000      + #>   [2]     chr1      6000      - #>   [3]     chr1      5000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, 'end') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      6000      + #>   [2]     chr1      5000      - #>   [3]     chr1      6000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, 'center') #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5500      + #>   [2]     chr1      5500      - #>   [3]     chr1      5500      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Shifting anchors by position shiftRanges(gr1, 100) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5100      + #>   [2]     chr1      5900      - #>   [3]     chr1      5100      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths shiftRanges(gr1, c(100, 200, 300)) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5100      + #>   [2]     chr1      5800      - #>   [3]     chr1      5300      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  ## Shifting back to TSS shiftRanges(gr2, 2000) #> GRanges object with 3 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      5000      + #>   [2]     chr1      6000      - #>   [3]     chr1      5000      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":null,"dir":"Reference","previous_headings":"","what":"Snap GRanges or GInteractions to nearest bins — snapToBins","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"Snap GRanges GInteractions nearest bins Snap paired-objects nearest bins","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"","code":"snapToBins(x, binSize)  # S4 method for GRanges,numeric snapToBins(x, binSize)  # S4 method for GInteractions,numeric snapToBins(x, binSize)"},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"x `GInteractions` object. binSize Integer (numeric) describing new size range.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"GRanges object snapped nearest `binSize`. Input object snapped nearest `binSize`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/snapToBins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Snap GRanges or GInteractions to nearest bins — snapToBins","text":"","code":"library(GenomicRanges) ## Example GRanges object x <- GRanges(seqnames = c(\"chr1\"),              ranges = IRanges(start = c(1, 1, 25, 19, 21),                               end = c(15, 11, 31, 31, 39)))  snapToBins(x, binSize = 5) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-15      * #>   [2]     chr1      0-10      * #>   [3]     chr1     25-30      * #>   [4]     chr1     20-30      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 10) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-20      * #>   [2]     chr1      0-10      * #>   [3]     chr1     20-30      * #>   [4]     chr1     20-30      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 20) #> GRanges object with 5 ranges and 0 metadata columns: #>       seqnames    ranges strand #>          <Rle> <IRanges>  <Rle> #>   [1]     chr1      0-20      * #>   [2]     chr1      0-20      * #>   [3]     chr1     20-40      * #>   [4]     chr1     20-40      * #>   [5]     chr1     20-40      * #>   ------- #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths  library(InteractionSet) ## Sample GInteractions object x <- GInteractions(anchor1 = c(GRanges(\"chr1:1-15\"),                                GRanges(\"chr1:1-11\")),                    anchor2 = c(GRanges(\"chr1:25-31\"),                                GRanges(\"chr1:19-31\")))  snapToBins(x, binSize = 5) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-15 ---      chr1     25-30 #>   [2]      chr1      0-10 ---      chr1     20-30 #>   ------- #>   regions: 4 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 10) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-20 ---      chr1     20-30 #>   [2]      chr1      0-10 ---      chr1     20-30 #>   ------- #>   regions: 3 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths snapToBins(x, binSize = 20) #> GInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1      0-20 ---      chr1     20-40 #>   [2]      chr1      0-20 ---      chr1     20-40 #>   ------- #>   regions: 2 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths"},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor for sources — sources","title":"Accessor for sources — sources","text":"Access names source files `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor for sources — sources","text":"","code":"sources(x)  # S4 method for MergedGInteractions sources(x)"},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor for sources — sources","text":"x MergedGInteractions object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor for sources — sources","text":"character vector names source  files `MergedGInteractions` object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessor for sources — sources","text":"","code":"## Load required packages library(data.table, include.only=\"fread\")  ## Load marinerData if (!require(\"marinerData\", quietly = TRUE))     BiocManager::install(\"marinerData\")  ## Reference BEDPE files (loops called with SIP) loopFiles <- c(     marinerData::FS_5kbLoops.txt(),     marinerData::WT_5kbLoops.txt() ) #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache #> see ?marinerData and browseVignettes('marinerData') for documentation #> loading from cache names(loopFiles) <- c(\"FS\", \"WT\")  ## Read in loopFiles as a list of GInteractions ## Use only first 1000 rows for fast example giList <-     lapply(loopFiles, fread, nrows=1000) |>     lapply(as_ginteractions)  ## Cluster & merge pairs x <- mergePairs(x = giList,                 radius = 10e03)  sources(x) #> [1] \"FS\" \"WT\""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset MergedGInteractions by source — subsetBySource","title":"Subset MergedGInteractions by source — subsetBySource","text":"Returns subset MergedGInteractions belong input source object (see `sources(x)`). source pairs come object, corresponding merged pair returned. However, least one source pair comes different object, merged pair returned.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset MergedGInteractions by source — subsetBySource","text":"","code":"subsetBySource(x, include, exclude)  # S4 method for MergedGInteractions,missing,missing subsetBySource(x)  # S4 method for MergedGInteractions,character_OR_missing,missing subsetBySource(x, include)  # S4 method for MergedGInteractions,missing,character_OR_missing subsetBySource(x, exclude)  # S4 method for MergedGInteractions,character_OR_missing,character_OR_missing subsetBySource(x, include, exclude)"},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset MergedGInteractions by source — subsetBySource","text":"x MergedGInteractions object. include (Optional) character vector sources pair must present. list available sources use `sources(x)`. exclude (Optional) character vector sources pair must absent. list available sources use `sources(x)`.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset MergedGInteractions by source — subsetBySource","text":"list subsetted `MergedGInteractions` objects  `MergedGInteractions` object (`include` / `exclude` used).","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset MergedGInteractions by source — subsetBySource","text":"Optional `include` `exclude` parameters modulate behaveior `subsetBySource` return different subsets originating pairs. example, `include` requires returned pairs present specific sources, `exclude` requires returned pairs absent specific sources. Sources listed either `include` `exclude` ignored (may may ) present returned `MergedGInteractions` object. `include` `exclude` can used indepedently combination return every possible set. sources used `include` `exclude` function return 0-length MergedGInteractions object.","code":""},{"path":"http://ericscottdavis.com/mariner/reference/subsetBySource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset MergedGInteractions by source — subsetBySource","text":"","code":"## Load required packages library(GenomicRanges) library(InteractionSet)  ## Define example anchor regions gr1 <-     GRanges(seqnames = \"chr1\",             ranges = IRanges(start = c(30,40,40,70,80),                              end = c(40,50,50,80,90))) gr2 <-     GRanges(seqnames = \"chr1\",             ranges = IRanges(start = c(30,30,50,10,30),                              end = c(40,40,60,20,40)))  ## Form GInteractions and split into two files giList <- split(x = GInteractions(gr1, gr2),                 f = c(rep(1,3), rep(2,2)))  ## Merge pairs x <- mergePairs(x = giList, radius = 20)  subsetBySource(x) #> $`2` #> MergedGInteractions object with 2 interactions and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1     70-80 ---      chr1     10-20 #>   [2]      chr1     80-90 ---      chr1     30-40 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths #>  #> $`1` #> MergedGInteractions object with 1 interaction and 0 metadata columns: #>       seqnames1   ranges1     seqnames2   ranges2 #>           <Rle> <IRanges>         <Rle> <IRanges> #>   [1]      chr1     40-50 ---      chr1     30-40 #>   ------- #>   regions: 5 ranges and 0 metadata columns #>   seqinfo: 1 sequence from an unspecified genome; no seqlengths #>"},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-110","dir":"Changelog","previous_headings":"","what":"mariner 1.1.0","title":"mariner 1.1.0","text":"New features: JaggedArray InteractionJaggedArray classes irregular matrices. Functions generating random GRanges GInteractions objects. regularize method converting irregular (.e. jagged) regular arrays. New calcLoopEnrichment method InteractionArray objects. defaultBuffer() function setting buffer argument InteractionArray. Bug Fixes: Fix bug removeShortPairs padding wasn’t working intended. FUN argument calcLoopEnrichment now accepts environmental variables uses flexible argument names fg bg.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-0990","dir":"Changelog","previous_headings":"","what":"mariner 0.99.0","title":"mariner 0.99.0","text":"Bug fixes improvements: Improve dispatch speed mergePairs() removing S4 method dispatch arguments just x radius. Fix bug mergePairs() pairs altered mean mode transformation. Now original pairs preserved accessed getPairClusters(). Set replace method counts<- accessor InteractionMatrix objects. Helpful converting DelayedMatrix matrix. Update pixelsToMatrix preserve metadata columns include additional tests. Add plotMatrix() function plotting matrix data heatmap. Useful visualizing DelayedMatrices pullHicMatrices() aggHicMatrices(). Compatible plotgardener package. Allow plotMatrix() accept na.color Bug fix mergePairs() allows columns named “radius” /“method”. Swap “binSize” “files” argument order pullHicPixels pullHicMatrices Allow pullHicPixels overwrite existing HDF5 files. Validity checks functions access/update HDF5 paths InteractionMatrix objects, even paths broken. Add temporary plotBullseye function. Selection functions selecting indices matrix: selectCenterPixel selectRadius selectSubmatrix selectCoordinates selectBlock selectTopLeft selectTopRight selectBottomRight selectBottomLeft selectCorners selectRows selectCols selectInner selectOuter calcLoopEnrichment function flexibly calculating enrichment interactions compared local background. adjustEnrichment plotEnrichment adjusting loop enrichment remove effect loop size enrichment visualize correction across chosen parameters.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-020","dir":"Changelog","previous_headings":"","what":"mariner 0.2.0","title":"mariner 0.2.0","text":"Methods pulling Hi-C pixels matrices .hic files storing -disk HDF5Array DelayedArray.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"overview-of-functionality-0-2-0","dir":"Changelog","previous_headings":"","what":"Overview of functionality","title":"mariner 0.2.0","text":"New updated functions: snapToBins() “snaps” ranges GInteractions objects nearest bin boundary. Allows spanning multiple bins. pullHicPixels() extracts contact frequency .hic files returns InteractionMatrix object containing matrix Hi-C interactions (rows) samples (columns). Includes counts() accessor matrix. Custom show() method. rbind() cbind() methods. pullHicMatrices() extracts submatrices contact frequency .hic files returns InteractionArray object containing 4-dimensional array Hi-C submatrices, rownames, colnames. Includes counts() accessor submatrices. Custom show() method. rbind() cbind() methods. pixelsToMatrices() takes GInteractions containing single pixels (.e., range represents one binSize) expands ranges buffer pixels around range. changePixelRes() takes GInteractions object containing pixels interest resized resolution/binSize (already). count matrices extracted interaction .hic file using new resolution. Count matrices aggregated interactions supplied aggFUN new pixel selected supplied selectFUN. Allows block processing large datasets. object returned GInteractions object updated pixel ranges along column containing aggregated min/max value pixel. calcLoopEnrichment() pulls Hi-C pixels calculates enrichment background returning DelayedMatrix enrichment scores rows interactions columns Hi-C files. Accessors GInteractions objects seqnames1(), start1(), end1(), seqnames2(), start2(), end2().","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"mariner-010","dir":"Changelog","previous_headings":"","what":"mariner 0.1.0","title":"mariner 0.1.0","text":"First pre-release mariner functionality focused manipulating, clustering, merging paired interactions.","code":""},{"path":"http://ericscottdavis.com/mariner/news/index.html","id":"overview-of-functionality-0-1-0","dir":"Changelog","previous_headings":"","what":"Overview of functionality","title":"mariner 0.1.0","text":"Conversion paired-range data GInteractions as_ginteractions/makeGInteractionsFromDataFrame Functions manipulating GInteractions GRanges objects binPairs, binRanges, shiftRanges. Functions clustering merging lists GInteractions objects mergePairs. Extensions GInteractions class MergedGInteractions, DelegatingGInteractions. Accessor functions MergedGInteractions: Aggregate metadata columns clustered interactions. Return interactions cluster interactions. Method used select pairs cluster interactions. List names (indices) used input clustering merging. Return interactions unique source combination sources.","code":""}]
