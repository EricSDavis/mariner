% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-MergedGInteractions.R
\name{deNovo}
\alias{deNovo}
\alias{deNovo,MergedGInteractions,missing,missing-method}
\alias{deNovo,MergedGInteractions,character_OR_missing,missing-method}
\alias{deNovo,MergedGInteractions,missing,character_OR_missing-method}
\alias{deNovo,MergedGInteractions,character_OR_missing,character_OR_missing-method}
\title{Find de novo pairs}
\usage{
deNovo(x, include, exclude)

\S4method{deNovo}{MergedGInteractions,missing,missing}(x)

\S4method{deNovo}{MergedGInteractions,character_OR_missing,missing}(x, include)

\S4method{deNovo}{MergedGInteractions,missing,character_OR_missing}(x, exclude)

\S4method{deNovo}{MergedGInteractions,character_OR_missing,character_OR_missing}(x, include, exclude)
}
\arguments{
\item{x}{MergedGInteractions object.}

\item{include}{(Optional) A character vector of sources
in which a pair must be present. For a list of available
sources use `sources(x)`.}

\item{exclude}{(Optional) A character vector of sources
in which a pair must be absent. For a list of available
sources use `sources(x)`.}
}
\value{
A `MergedGInteractions` object of de novo pairs.
}
\description{
After merging sets of interaction pairs, `deNovo`
identifies which pairs are specific to each input set.
If several pairs are clustered together, they are
considered de novo if they all belong to the same
source set.
}
\details{
Optional `include` and `exclude` parameters modulate
the behaveior of `deNovo` to return different subsets
of co-existing pairs. For example, `include` requires
that the returned pairs be present in specific sources,
while `exclude` requires that returned pairs be absent
from specific sources. Sources not listed in either
`include` or `exclude` are ingnored (they may or may not)
be present in the returned `MergedGInteractions` object.
`include` and `exclude` can be used indepedently or in
combination to return every possible set.
}
\examples{
## Define example anchor regions
gr1 <-
    GRanges(seqnames = "chr1",
            ranges = IRanges(start = c(30,40,40,70,80),
                             end = c(40,50,50,80,90)))
gr2 <-
    GRanges(seqnames = "chr1",
            ranges = IRanges(start = c(30,30,50,10,30),
                             end = c(40,40,60,20,40)))

## Form GInteractions and convert to data.table
dt <- GInteractions(gr1, gr2) |> as.data.table()

## Split into two files
dts <- split(dt, c(rep(1,3), rep(2, 2)))

## Merge pairs
x <- mergePairs(dts, binSize = 10, radius = 2)

deNovo(x)

}
